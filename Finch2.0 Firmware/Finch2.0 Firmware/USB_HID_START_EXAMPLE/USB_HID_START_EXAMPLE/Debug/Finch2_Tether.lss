
Finch2_Tether.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000081ac  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000118  20000000  000081ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000604  20000118  000082c4  00020118  2**2
                  ALLOC
  3 .stack        00002004  2000071c  000088c8  00020118  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020118  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020140  2**0
                  CONTENTS, READONLY
  6 .debug_info   0006c65a  00000000  00000000  00020199  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00008652  00000000  00000000  0008c7f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000e40  00000000  00000000  00094e45  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00001078  00000000  00000000  00095c85  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  00022cba  00000000  00000000  00096cfd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001ebdb  00000000  00000000  000b99b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0009217d  00000000  00000000  000d8592  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002688  00000000  00000000  0016a710  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000da37  00000000  00000000  0016cd98  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	20 27 00 20 d9 56 00 00 d5 56 00 00 d5 56 00 00      '. .V...V...V..
	...
      2c:	d5 56 00 00 00 00 00 00 00 00 00 00 d5 56 00 00     .V...........V..
      3c:	d5 56 00 00 d5 56 00 00 d5 56 00 00 d5 56 00 00     .V...V...V...V..
      4c:	d5 56 00 00 e5 21 00 00 d5 56 00 00 d5 56 00 00     .V...!...V...V..
      5c:	05 4f 00 00 d5 56 00 00 cd 2d 00 00 dd 2d 00 00     .O...V...-...-..
      6c:	ed 2d 00 00 fd 2d 00 00 0d 2e 00 00 1d 2e 00 00     .-...-..........
      7c:	59 37 00 00 69 37 00 00 79 37 00 00 2d 38 00 00     Y7..i7..y7..-8..
      8c:	3d 38 00 00 4d 38 00 00 00 00 00 00 00 00 00 00     =8..M8..........
      9c:	d5 56 00 00 d5 56 00 00 d5 56 00 00 d5 56 00 00     .V...V...V...V..
      ac:	d5 56 00 00 00 00 00 00                             .V......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000118 	.word	0x20000118
      d4:	00000000 	.word	0x00000000
      d8:	000081ac 	.word	0x000081ac

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	2000011c 	.word	0x2000011c
     108:	000081ac 	.word	0x000081ac
     10c:	000081ac 	.word	0x000081ac
     110:	00000000 	.word	0x00000000

00000114 <board_init>:
#define GENERIC_CLOCK_MULTIPLEXER_DFLL48M (0u)

void board_init(void)
{
  /* Set 1 Flash Wait State for 48MHz, cf tables 20.9 and 35.27 in SAMD21 Datasheet */
  NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val;
     114:	4a40      	ldr	r2, [pc, #256]	; (218 <board_init+0x104>)
     116:	6853      	ldr	r3, [r2, #4]
     118:	211e      	movs	r1, #30
     11a:	438b      	bics	r3, r1
     11c:	391c      	subs	r1, #28
     11e:	430b      	orrs	r3, r1
     120:	6053      	str	r3, [r2, #4]

  /* Turn on the digital interface clock */
  PM->APBAMASK.reg |= PM_APBAMASK_GCLK;
     122:	4a3e      	ldr	r2, [pc, #248]	; (21c <board_init+0x108>)
     124:	6993      	ldr	r3, [r2, #24]
     126:	3106      	adds	r1, #6
     128:	430b      	orrs	r3, r1
     12a:	6193      	str	r3, [r2, #24]

  /* ----------------------------------------------------------------------------------------------
   * 1) Enable XOSC32K clock (External on-board 32.768Hz oscillator)
   */
  SYSCTRL->XOSC32K.reg = SYSCTRL_XOSC32K_STARTUP( 0x6u ) | /* cf table 15.10 of product datasheet in chapter 15.8.6 */
     12c:	4b3c      	ldr	r3, [pc, #240]	; (220 <board_init+0x10c>)
     12e:	4a3d      	ldr	r2, [pc, #244]	; (224 <board_init+0x110>)
     130:	829a      	strh	r2, [r3, #20]
                         SYSCTRL_XOSC32K_XTALEN | SYSCTRL_XOSC32K_EN32K;
  SYSCTRL->XOSC32K.bit.ENABLE = 1; /* separate call, as described in chapter 15.6.3 */
     132:	8a9a      	ldrh	r2, [r3, #20]
     134:	2102      	movs	r1, #2
     136:	430a      	orrs	r2, r1
     138:	829a      	strh	r2, [r3, #20]

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_XOSC32KRDY) == 0 )
     13a:	0019      	movs	r1, r3
     13c:	2202      	movs	r2, #2
     13e:	68cb      	ldr	r3, [r1, #12]
     140:	421a      	tst	r2, r3
     142:	d0fc      	beq.n	13e <board_init+0x2a>

  /* Software reset the module to ensure it is re-initialized correctly */
  /* Note: Due to synchronization, there is a delay from writing CTRL.SWRST until the reset is complete.
   * CTRL.SWRST and STATUS.SYNCBUSY will both be cleared when the reset is complete, as described in chapter 13.8.1
   */
  GCLK->CTRL.reg = GCLK_CTRL_SWRST;
     144:	2201      	movs	r2, #1
     146:	4b38      	ldr	r3, [pc, #224]	; (228 <board_init+0x114>)
     148:	701a      	strb	r2, [r3, #0]

  while ( (GCLK->CTRL.reg & GCLK_CTRL_SWRST) && (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY) )
     14a:	001a      	movs	r2, r3
     14c:	2101      	movs	r1, #1
     14e:	7813      	ldrb	r3, [r2, #0]
     150:	420b      	tst	r3, r1
     152:	d003      	beq.n	15c <board_init+0x48>
     154:	7853      	ldrb	r3, [r2, #1]
     156:	b25b      	sxtb	r3, r3
     158:	2b00      	cmp	r3, #0
     15a:	dbf8      	blt.n	14e <board_init+0x3a>
  }

  /* ----------------------------------------------------------------------------------------------
   * 2) Put XOSC32K as source of Generic Clock Generator 1
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_XOSC32K ); // Generic Clock Generator 1
     15c:	2201      	movs	r2, #1
     15e:	4b32      	ldr	r3, [pc, #200]	; (228 <board_init+0x114>)
     160:	609a      	str	r2, [r3, #8]

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     162:	001a      	movs	r2, r3
     164:	7853      	ldrb	r3, [r2, #1]
     166:	b25b      	sxtb	r3, r3
     168:	2b00      	cmp	r3, #0
     16a:	dbfb      	blt.n	164 <board_init+0x50>
  {
    /* Wait for synchronization */
  }

  /* Write Generic Clock Generator 1 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_XOSC32K ) | // Generic Clock Generator 1
     16c:	4a2f      	ldr	r2, [pc, #188]	; (22c <board_init+0x118>)
     16e:	4b2e      	ldr	r3, [pc, #184]	; (228 <board_init+0x114>)
     170:	605a      	str	r2, [r3, #4]
                      GCLK_GENCTRL_SRC_XOSC32K | // Selected source is External 32KHz Oscillator
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_GENEN;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     172:	001a      	movs	r2, r3
     174:	7853      	ldrb	r3, [r2, #1]
     176:	b25b      	sxtb	r3, r3
     178:	2b00      	cmp	r3, #0
     17a:	dbfb      	blt.n	174 <board_init+0x60>
  }

  /* ----------------------------------------------------------------------------------------------
   * 3) Put Generic Clock Generator 1 as source for Generic Clock Multiplexer 0 (DFLL48M reference)
   */
  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( GENERIC_CLOCK_MULTIPLEXER_DFLL48M ) | // Generic Clock Multiplexer 0
     17c:	2282      	movs	r2, #130	; 0x82
     17e:	01d2      	lsls	r2, r2, #7
     180:	4b29      	ldr	r3, [pc, #164]	; (228 <board_init+0x114>)
     182:	805a      	strh	r2, [r3, #2]
                      GCLK_CLKCTRL_GEN_GCLK1 | // Generic Clock Generator 1 is source
                      GCLK_CLKCTRL_CLKEN;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     184:	001a      	movs	r2, r3
     186:	7853      	ldrb	r3, [r2, #1]
     188:	b25b      	sxtb	r3, r3
     18a:	2b00      	cmp	r3, #0
     18c:	dbfb      	blt.n	186 <board_init+0x72>
   */

  /* DFLL Configuration in Closed Loop mode, cf product datasheet chapter 15.6.7.1 - Closed-Loop Operation */

  /* Remove the OnDemand mode, Bug http://avr32.icgroup.norway.atmel.com/bugzilla/show_bug.cgi?id=9905 */
  SYSCTRL->DFLLCTRL.bit.ONDEMAND = 0;
     18e:	4a24      	ldr	r2, [pc, #144]	; (220 <board_init+0x10c>)
     190:	8c93      	ldrh	r3, [r2, #36]	; 0x24
     192:	2180      	movs	r1, #128	; 0x80
     194:	438b      	bics	r3, r1
     196:	8493      	strh	r3, [r2, #36]	; 0x24

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     198:	0011      	movs	r1, r2
     19a:	2210      	movs	r2, #16
     19c:	68cb      	ldr	r3, [r1, #12]
     19e:	421a      	tst	r2, r3
     1a0:	d0fc      	beq.n	19c <board_init+0x88>
  {
    /* Wait for synchronization */
  }

  SYSCTRL->DFLLMUL.reg = SYSCTRL_DFLLMUL_CSTEP( 31 ) | // Coarse step is 31, half of the max value
     1a2:	4a23      	ldr	r2, [pc, #140]	; (230 <board_init+0x11c>)
     1a4:	4b1e      	ldr	r3, [pc, #120]	; (220 <board_init+0x10c>)
     1a6:	62da      	str	r2, [r3, #44]	; 0x2c
                         SYSCTRL_DFLLMUL_FSTEP( 511 ) | // Fine step is 511, half of the max value
                         SYSCTRL_DFLLMUL_MUL( (VARIANT_MCK/VARIANT_MAINOSC) ); // External 32KHz is the reference

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     1a8:	0019      	movs	r1, r3
     1aa:	2210      	movs	r2, #16
     1ac:	68cb      	ldr	r3, [r1, #12]
     1ae:	421a      	tst	r2, r3
     1b0:	d0fc      	beq.n	1ac <board_init+0x98>
  {
    /* Wait for synchronization */
  }

  /* Write full configuration to DFLL control register */
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_MODE | /* Enable the closed loop mode */
     1b2:	4a1b      	ldr	r2, [pc, #108]	; (220 <board_init+0x10c>)
     1b4:	8c93      	ldrh	r3, [r2, #36]	; 0x24
     1b6:	491f      	ldr	r1, [pc, #124]	; (234 <board_init+0x120>)
     1b8:	430b      	orrs	r3, r1
     1ba:	8493      	strh	r3, [r2, #36]	; 0x24
                           SYSCTRL_DFLLCTRL_WAITLOCK |
                           SYSCTRL_DFLLCTRL_QLDIS; /* Disable Quick lock */

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     1bc:	0011      	movs	r1, r2
     1be:	2210      	movs	r2, #16
     1c0:	68cb      	ldr	r3, [r1, #12]
     1c2:	421a      	tst	r2, r3
     1c4:	d0fc      	beq.n	1c0 <board_init+0xac>
  {
    /* Wait for synchronization */
  }

  /* Enable the DFLL */
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ENABLE;
     1c6:	4a16      	ldr	r2, [pc, #88]	; (220 <board_init+0x10c>)
     1c8:	8c93      	ldrh	r3, [r2, #36]	; 0x24
     1ca:	2102      	movs	r1, #2
     1cc:	430b      	orrs	r3, r1
     1ce:	8493      	strh	r3, [r2, #36]	; 0x24

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
     1d0:	317e      	adds	r1, #126	; 0x7e
          (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKF) == 0 )
     1d2:	2040      	movs	r0, #64	; 0x40
  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
     1d4:	68d3      	ldr	r3, [r2, #12]
     1d6:	4219      	tst	r1, r3
     1d8:	d0fc      	beq.n	1d4 <board_init+0xc0>
          (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKF) == 0 )
     1da:	68d3      	ldr	r3, [r2, #12]
  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
     1dc:	4218      	tst	r0, r3
     1de:	d0f9      	beq.n	1d4 <board_init+0xc0>
  {
    /* Wait for locks flags */
  }

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
     1e0:	490f      	ldr	r1, [pc, #60]	; (220 <board_init+0x10c>)
     1e2:	2210      	movs	r2, #16
     1e4:	68cb      	ldr	r3, [r1, #12]
     1e6:	421a      	tst	r2, r3
     1e8:	d0fc      	beq.n	1e4 <board_init+0xd0>
  }

  /* ----------------------------------------------------------------------------------------------
   * 5) Switch Generic Clock Generator 0 to DFLL48M. CPU will run at 48MHz.
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_MAIN ); // Generic Clock Generator 0
     1ea:	2200      	movs	r2, #0
     1ec:	4b0e      	ldr	r3, [pc, #56]	; (228 <board_init+0x114>)
     1ee:	609a      	str	r2, [r3, #8]

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     1f0:	001a      	movs	r2, r3
     1f2:	7853      	ldrb	r3, [r2, #1]
     1f4:	b25b      	sxtb	r3, r3
     1f6:	2b00      	cmp	r3, #0
     1f8:	dbfb      	blt.n	1f2 <board_init+0xde>
  {
    /* Wait for synchronization */
  }

  /* Write Generic Clock Generator 0 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_MAIN ) | // Generic Clock Generator 0
     1fa:	4a0f      	ldr	r2, [pc, #60]	; (238 <board_init+0x124>)
     1fc:	4b0a      	ldr	r3, [pc, #40]	; (228 <board_init+0x114>)
     1fe:	605a      	str	r2, [r3, #4]
                      GCLK_GENCTRL_SRC_DFLL48M | // Selected source is DFLL 48MHz
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_IDC | // Set 50/50 duty cycle
                      GCLK_GENCTRL_GENEN;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
     200:	001a      	movs	r2, r3
     202:	7853      	ldrb	r3, [r2, #1]
     204:	b25b      	sxtb	r3, r3
     206:	2b00      	cmp	r3, #0
     208:	dbfb      	blt.n	202 <board_init+0xee>

  /*
   * Now that all system clocks are configured, we can set CPU and APBx BUS clocks.
   * These values are normally the ones present after Reset.
   */
  PM->CPUSEL.reg  = PM_CPUSEL_CPUDIV_DIV1;
     20a:	4b04      	ldr	r3, [pc, #16]	; (21c <board_init+0x108>)
     20c:	2200      	movs	r2, #0
     20e:	721a      	strb	r2, [r3, #8]
  PM->APBASEL.reg = PM_APBASEL_APBADIV_DIV1_Val;
     210:	725a      	strb	r2, [r3, #9]
  PM->APBBSEL.reg = PM_APBBSEL_APBBDIV_DIV1_Val;
     212:	729a      	strb	r2, [r3, #10]
  PM->APBCSEL.reg = PM_APBCSEL_APBCDIV_DIV1_Val;
     214:	72da      	strb	r2, [r3, #11]
  
  /* Initialize External hardware */
  
}
     216:	4770      	bx	lr
     218:	41004000 	.word	0x41004000
     21c:	40000400 	.word	0x40000400
     220:	40000800 	.word	0x40000800
     224:	0000060c 	.word	0x0000060c
     228:	40000c00 	.word	0x40000c00
     22c:	00010501 	.word	0x00010501
     230:	7dff05b8 	.word	0x7dff05b8
     234:	00000a04 	.word	0x00000a04
     238:	00030700 	.word	0x00030700

0000023c <tc_callback_PWM>:
//Sad used a bubble sort , six elements so did not spend much time on writing a  beautiful code

//! [callback_funcs]
void tc_callback_PWM(
struct tc_module *const module_inst)
{
     23c:	b5f0      	push	{r4, r5, r6, r7, lr}
     23e:	46de      	mov	lr, fp
     240:	4657      	mov	r7, sl
     242:	4646      	mov	r6, r8
     244:	b5c0      	push	{r6, r7, lr}
     246:	b082      	sub	sp, #8
     248:	9001      	str	r0, [sp, #4]
	volatile uint32_t count;
	//count = tc_get_count_value(&tc_instance);
	//tc_stop_counter(&tc_instance);
	//count = count +1;
	//Enable the LED
	if(first_time == false)
     24a:	4b51      	ldr	r3, [pc, #324]	; (390 <tc_callback_PWM+0x154>)
     24c:	781b      	ldrb	r3, [r3, #0]
     24e:	2b00      	cmp	r3, #0
     250:	d000      	beq.n	254 <tc_callback_PWM+0x18>
     252:	e094      	b.n	37e <tc_callback_PWM+0x142>
	{
		port_pin_set_output_level(led_array[led_array_ID++],RGB_LED_DISABLE);
     254:	4a4f      	ldr	r2, [pc, #316]	; (394 <tc_callback_PWM+0x158>)
     256:	7813      	ldrb	r3, [r2, #0]
     258:	1c59      	adds	r1, r3, #1
     25a:	b2c9      	uxtb	r1, r1
     25c:	7011      	strb	r1, [r2, #0]
     25e:	4a4e      	ldr	r2, [pc, #312]	; (398 <tc_callback_PWM+0x15c>)
     260:	5cd2      	ldrb	r2, [r2, r3]
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
     262:	09d0      	lsrs	r0, r2, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
     264:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
     266:	2800      	cmp	r0, #0
     268:	d104      	bne.n	274 <tc_callback_PWM+0x38>
		return &(ports[port_index]->Group[group_index]);
     26a:	0953      	lsrs	r3, r2, #5
     26c:	01db      	lsls	r3, r3, #7
     26e:	484b      	ldr	r0, [pc, #300]	; (39c <tc_callback_PWM+0x160>)
     270:	4684      	mov	ip, r0
     272:	4463      	add	r3, ip
static inline void port_pin_set_output_level(
		const uint8_t gpio_pin,
		const bool level)
{
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
     274:	201f      	movs	r0, #31
     276:	4010      	ands	r0, r2
     278:	2201      	movs	r2, #1
     27a:	4082      	lsls	r2, r0

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
	} else {
		port_base->OUTCLR.reg = pin_mask;
     27c:	615a      	str	r2, [r3, #20]
		 
		if(time_array_ID < N_valid_compares-1 )
     27e:	4b48      	ldr	r3, [pc, #288]	; (3a0 <tc_callback_PWM+0x164>)
     280:	781e      	ldrb	r6, [r3, #0]
     282:	4b48      	ldr	r3, [pc, #288]	; (3a4 <tc_callback_PWM+0x168>)
     284:	781b      	ldrb	r3, [r3, #0]
     286:	3b01      	subs	r3, #1
     288:	4698      	mov	r8, r3
     28a:	429e      	cmp	r6, r3
     28c:	db00      	blt.n	290 <tc_callback_PWM+0x54>
     28e:	e070      	b.n	372 <tc_callback_PWM+0x136>
		{
			compare_value_last = time_array[time_array_ID];
     290:	4845      	ldr	r0, [pc, #276]	; (3a8 <tc_callback_PWM+0x16c>)
     292:	5d82      	ldrb	r2, [r0, r6]
     294:	4b45      	ldr	r3, [pc, #276]	; (3ac <tc_callback_PWM+0x170>)
     296:	701a      	strb	r2, [r3, #0]
			compare_value_current = time_array[++time_array_ID];
     298:	3601      	adds	r6, #1
     29a:	b2f6      	uxtb	r6, r6
     29c:	4b40      	ldr	r3, [pc, #256]	; (3a0 <tc_callback_PWM+0x164>)
     29e:	701e      	strb	r6, [r3, #0]
     2a0:	0033      	movs	r3, r6
     2a2:	5d85      	ldrb	r5, [r0, r6]
     2a4:	4842      	ldr	r0, [pc, #264]	; (3b0 <tc_callback_PWM+0x174>)
     2a6:	7005      	strb	r5, [r0, #0]
			while(compare_value_last == compare_value_current && time_array_ID <= N_valid_compares - 1)
     2a8:	42aa      	cmp	r2, r5
     2aa:	d135      	bne.n	318 <tc_callback_PWM+0xdc>
     2ac:	45b0      	cmp	r8, r6
     2ae:	db53      	blt.n	358 <tc_callback_PWM+0x11c>
     2b0:	0008      	movs	r0, r1
			{
				//Enable the LED
				port_pin_set_output_level(led_array[led_array_ID++],RGB_LED_DISABLE);
     2b2:	4a39      	ldr	r2, [pc, #228]	; (398 <tc_callback_PWM+0x15c>)
     2b4:	4693      	mov	fp, r2
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
     2b6:	221f      	movs	r2, #31
     2b8:	4692      	mov	sl, r2
     2ba:	2701      	movs	r7, #1
				compare_value_last = time_array[time_array_ID];
     2bc:	4c3a      	ldr	r4, [pc, #232]	; (3a8 <tc_callback_PWM+0x16c>)
     2be:	1a76      	subs	r6, r6, r1
     2c0:	e00f      	b.n	2e2 <tc_callback_PWM+0xa6>
     2c2:	4655      	mov	r5, sl
     2c4:	402a      	ands	r2, r5
     2c6:	003d      	movs	r5, r7
     2c8:	4095      	lsls	r5, r2
		port_base->OUTCLR.reg = pin_mask;
     2ca:	6145      	str	r5, [r0, #20]
     2cc:	5ce2      	ldrb	r2, [r4, r3]
     2ce:	198b      	adds	r3, r1, r6
     2d0:	b2db      	uxtb	r3, r3
				compare_value_current = time_array[++time_array_ID];
     2d2:	9300      	str	r3, [sp, #0]
     2d4:	5ce0      	ldrb	r0, [r4, r3]
     2d6:	4684      	mov	ip, r0
			while(compare_value_last == compare_value_current && time_array_ID <= N_valid_compares - 1)
     2d8:	4282      	cmp	r2, r0
     2da:	d112      	bne.n	302 <tc_callback_PWM+0xc6>
				port_pin_set_output_level(led_array[led_array_ID++],RGB_LED_DISABLE);
     2dc:	0008      	movs	r0, r1
			while(compare_value_last == compare_value_current && time_array_ID <= N_valid_compares - 1)
     2de:	4598      	cmp	r8, r3
     2e0:	db2d      	blt.n	33e <tc_callback_PWM+0x102>
				port_pin_set_output_level(led_array[led_array_ID++],RGB_LED_DISABLE);
     2e2:	1c41      	adds	r1, r0, #1
     2e4:	b2c9      	uxtb	r1, r1
     2e6:	465a      	mov	r2, fp
     2e8:	5c12      	ldrb	r2, [r2, r0]
	if (port_index < PORT_INST_NUM) {
     2ea:	09d0      	lsrs	r0, r2, #7
     2ec:	4684      	mov	ip, r0
		return NULL;
     2ee:	2000      	movs	r0, #0
	if (port_index < PORT_INST_NUM) {
     2f0:	4665      	mov	r5, ip
     2f2:	2d00      	cmp	r5, #0
     2f4:	d1e5      	bne.n	2c2 <tc_callback_PWM+0x86>
		return &(ports[port_index]->Group[group_index]);
     2f6:	0950      	lsrs	r0, r2, #5
     2f8:	01c0      	lsls	r0, r0, #7
     2fa:	4d28      	ldr	r5, [pc, #160]	; (39c <tc_callback_PWM+0x160>)
     2fc:	46ac      	mov	ip, r5
     2fe:	4460      	add	r0, ip
     300:	e7df      	b.n	2c2 <tc_callback_PWM+0x86>
     302:	0005      	movs	r5, r0
     304:	4b29      	ldr	r3, [pc, #164]	; (3ac <tc_callback_PWM+0x170>)
     306:	701a      	strb	r2, [r3, #0]
     308:	4b25      	ldr	r3, [pc, #148]	; (3a0 <tc_callback_PWM+0x164>)
     30a:	4668      	mov	r0, sp
     30c:	7800      	ldrb	r0, [r0, #0]
     30e:	7018      	strb	r0, [r3, #0]
     310:	4b27      	ldr	r3, [pc, #156]	; (3b0 <tc_callback_PWM+0x174>)
     312:	701d      	strb	r5, [r3, #0]
     314:	4b1f      	ldr	r3, [pc, #124]	; (394 <tc_callback_PWM+0x158>)
     316:	7019      	strb	r1, [r3, #0]
			}
			if(compare_value_current != 255)
     318:	2dff      	cmp	r5, #255	; 0xff
     31a:	d01f      	beq.n	35c <tc_callback_PWM+0x120>
			{
				tc_set_inital_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, compare_value_last);
     31c:	2100      	movs	r1, #0
     31e:	9c01      	ldr	r4, [sp, #4]
     320:	0020      	movs	r0, r4
     322:	4b24      	ldr	r3, [pc, #144]	; (3b4 <tc_callback_PWM+0x178>)
     324:	4798      	blx	r3
				tc_set_compare_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, compare_value_current);
     326:	4b22      	ldr	r3, [pc, #136]	; (3b0 <tc_callback_PWM+0x174>)
     328:	781a      	ldrb	r2, [r3, #0]
     32a:	2100      	movs	r1, #0
     32c:	0020      	movs	r0, r4
     32e:	4b22      	ldr	r3, [pc, #136]	; (3b8 <tc_callback_PWM+0x17c>)
     330:	4798      	blx	r3
		first_time = false;
		tc_set_compare_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, 0);
	}
	//tc_start_counter(&tc_instance);
	
}
     332:	b002      	add	sp, #8
     334:	bc1c      	pop	{r2, r3, r4}
     336:	4690      	mov	r8, r2
     338:	469a      	mov	sl, r3
     33a:	46a3      	mov	fp, r4
     33c:	bdf0      	pop	{r4, r5, r6, r7, pc}
     33e:	4665      	mov	r5, ip
     340:	4b1a      	ldr	r3, [pc, #104]	; (3ac <tc_callback_PWM+0x170>)
     342:	701a      	strb	r2, [r3, #0]
     344:	4b16      	ldr	r3, [pc, #88]	; (3a0 <tc_callback_PWM+0x164>)
     346:	4668      	mov	r0, sp
     348:	7800      	ldrb	r0, [r0, #0]
     34a:	7018      	strb	r0, [r3, #0]
     34c:	4b18      	ldr	r3, [pc, #96]	; (3b0 <tc_callback_PWM+0x174>)
     34e:	701a      	strb	r2, [r3, #0]
     350:	4b10      	ldr	r3, [pc, #64]	; (394 <tc_callback_PWM+0x158>)
     352:	7019      	strb	r1, [r3, #0]
				compare_value_current = time_array[++time_array_ID];
     354:	4662      	mov	r2, ip
     356:	e7df      	b.n	318 <tc_callback_PWM+0xdc>
			while(compare_value_last == compare_value_current && time_array_ID <= N_valid_compares - 1)
     358:	0015      	movs	r5, r2
     35a:	e7dd      	b.n	318 <tc_callback_PWM+0xdc>
				tc_set_inital_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, compare_value_last);
     35c:	2100      	movs	r1, #0
     35e:	9c01      	ldr	r4, [sp, #4]
     360:	0020      	movs	r0, r4
     362:	4b14      	ldr	r3, [pc, #80]	; (3b4 <tc_callback_PWM+0x178>)
     364:	4798      	blx	r3
				tc_set_compare_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, 0);
     366:	2200      	movs	r2, #0
     368:	2100      	movs	r1, #0
     36a:	0020      	movs	r0, r4
     36c:	4b12      	ldr	r3, [pc, #72]	; (3b8 <tc_callback_PWM+0x17c>)
     36e:	4798      	blx	r3
     370:	e7df      	b.n	332 <tc_callback_PWM+0xf6>
			tc_set_compare_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, 0);
     372:	2200      	movs	r2, #0
     374:	2100      	movs	r1, #0
     376:	9801      	ldr	r0, [sp, #4]
     378:	4b0f      	ldr	r3, [pc, #60]	; (3b8 <tc_callback_PWM+0x17c>)
     37a:	4798      	blx	r3
     37c:	e7d9      	b.n	332 <tc_callback_PWM+0xf6>
		first_time = false;
     37e:	2200      	movs	r2, #0
     380:	4b03      	ldr	r3, [pc, #12]	; (390 <tc_callback_PWM+0x154>)
     382:	701a      	strb	r2, [r3, #0]
		tc_set_compare_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, 0);
     384:	2100      	movs	r1, #0
     386:	9801      	ldr	r0, [sp, #4]
     388:	4b0b      	ldr	r3, [pc, #44]	; (3b8 <tc_callback_PWM+0x17c>)
     38a:	4798      	blx	r3
}
     38c:	e7d1      	b.n	332 <tc_callback_PWM+0xf6>
     38e:	46c0      	nop			; (mov r8, r8)
     390:	20000001 	.word	0x20000001
     394:	20000270 	.word	0x20000270
     398:	20000274 	.word	0x20000274
     39c:	41004400 	.word	0x41004400
     3a0:	20000242 	.word	0x20000242
     3a4:	20000000 	.word	0x20000000
     3a8:	2000024c 	.word	0x2000024c
     3ac:	20000135 	.word	0x20000135
     3b0:	20000134 	.word	0x20000134
     3b4:	00003b7f 	.word	0x00003b7f
     3b8:	00003b2f 	.word	0x00003b2f

000003bc <increasing_sort_tag>:
	//tc_start_counter(&tc_instance);
	//tc_enable_callback(&tc_instance, TC_CALLBACK_OVERFLOW);
}

void increasing_sort_tag()
{
     3bc:	b5f0      	push	{r4, r5, r6, r7, lr}
     3be:	46ce      	mov	lr, r9
     3c0:	b500      	push	{lr}
	uint8_t i,j ,temp;
	uint8_t N=6;
	for(i=0; i< N-1 ;i++)
	{
		for(j=0;j< N-i-1;j++)
     3c2:	2305      	movs	r3, #5
     3c4:	4699      	mov	r9, r3
		{
			if(temp_time_array[j]>temp_time_array[j+1])
     3c6:	4f13      	ldr	r7, [pc, #76]	; (414 <increasing_sort_tag+0x58>)
			{
				temp = temp_time_array[j];
				temp_time_array[j] = temp_time_array[j+1];
     3c8:	003e      	movs	r6, r7
				temp_time_array[j+1]= temp;
				
				temp = temp_led_array[j];
     3ca:	4d13      	ldr	r5, [pc, #76]	; (418 <increasing_sort_tag+0x5c>)
     3cc:	e017      	b.n	3fe <increasing_sort_tag+0x42>
		for(j=0;j< N-i-1;j++)
     3ce:	3301      	adds	r3, #1
     3d0:	b2db      	uxtb	r3, r3
     3d2:	001a      	movs	r2, r3
     3d4:	4563      	cmp	r3, ip
     3d6:	da0b      	bge.n	3f0 <increasing_sort_tag+0x34>
			if(temp_time_array[j]>temp_time_array[j+1])
     3d8:	5cb8      	ldrb	r0, [r7, r2]
     3da:	1c51      	adds	r1, r2, #1
     3dc:	5c7c      	ldrb	r4, [r7, r1]
     3de:	42a0      	cmp	r0, r4
     3e0:	d9f5      	bls.n	3ce <increasing_sort_tag+0x12>
				temp_time_array[j] = temp_time_array[j+1];
     3e2:	54b4      	strb	r4, [r6, r2]
				temp_time_array[j+1]= temp;
     3e4:	5470      	strb	r0, [r6, r1]
				temp = temp_led_array[j];
     3e6:	5ca8      	ldrb	r0, [r5, r2]
				temp_led_array[j] = temp_led_array[j+1];
     3e8:	5c6c      	ldrb	r4, [r5, r1]
     3ea:	54ac      	strb	r4, [r5, r2]
				temp_led_array[j+1] = temp;
     3ec:	5468      	strb	r0, [r5, r1]
     3ee:	e7ee      	b.n	3ce <increasing_sort_tag+0x12>
     3f0:	2301      	movs	r3, #1
     3f2:	425b      	negs	r3, r3
     3f4:	469c      	mov	ip, r3
     3f6:	44e1      	add	r9, ip
	for(i=0; i< N-1 ;i++)
     3f8:	464b      	mov	r3, r9
     3fa:	2b00      	cmp	r3, #0
     3fc:	d006      	beq.n	40c <increasing_sort_tag+0x50>
		for(j=0;j< N-i-1;j++)
     3fe:	46cc      	mov	ip, r9
     400:	2200      	movs	r2, #0
     402:	2300      	movs	r3, #0
     404:	4649      	mov	r1, r9
     406:	2900      	cmp	r1, #0
     408:	dce6      	bgt.n	3d8 <increasing_sort_tag+0x1c>
     40a:	e7f1      	b.n	3f0 <increasing_sort_tag+0x34>
				
			}
		}
	}
}
     40c:	bc04      	pop	{r2}
     40e:	4691      	mov	r9, r2
     410:	bdf0      	pop	{r4, r5, r6, r7, pc}
     412:	46c0      	nop			; (mov r8, r8)
     414:	2000023c 	.word	0x2000023c
     418:	20000244 	.word	0x20000244

0000041c <transfer_temp>:

void transfer_temp()
{
     41c:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t i;
	N_valid_compares = 0;
     41e:	2200      	movs	r2, #0
     420:	4b0d      	ldr	r3, [pc, #52]	; (458 <transfer_temp+0x3c>)
     422:	701a      	strb	r2, [r3, #0]
     424:	2300      	movs	r3, #0
     426:	2600      	movs	r6, #0
	for(i=0;i<=5;i++)
	{
		if(temp_time_array[i] != 255)
     428:	4d0c      	ldr	r5, [pc, #48]	; (45c <transfer_temp+0x40>)
		{
			N_valid_compares++;
		}
		time_array[i] = temp_time_array[i] ;
     42a:	4f0d      	ldr	r7, [pc, #52]	; (460 <transfer_temp+0x44>)
		led_array[i]  = temp_led_array[i];
     42c:	4c0d      	ldr	r4, [pc, #52]	; (464 <transfer_temp+0x48>)
     42e:	480e      	ldr	r0, [pc, #56]	; (468 <transfer_temp+0x4c>)
     430:	e005      	b.n	43e <transfer_temp+0x22>
		time_array[i] = temp_time_array[i] ;
     432:	54f9      	strb	r1, [r7, r3]
		led_array[i]  = temp_led_array[i];
     434:	5cc1      	ldrb	r1, [r0, r3]
     436:	54e1      	strb	r1, [r4, r3]
     438:	3301      	adds	r3, #1
	for(i=0;i<=5;i++)
     43a:	2b06      	cmp	r3, #6
     43c:	d006      	beq.n	44c <transfer_temp+0x30>
		if(temp_time_array[i] != 255)
     43e:	5ce9      	ldrb	r1, [r5, r3]
     440:	29ff      	cmp	r1, #255	; 0xff
     442:	d0f6      	beq.n	432 <transfer_temp+0x16>
			N_valid_compares++;
     444:	3201      	adds	r2, #1
     446:	b2d2      	uxtb	r2, r2
     448:	2601      	movs	r6, #1
     44a:	e7f2      	b.n	432 <transfer_temp+0x16>
     44c:	2e00      	cmp	r6, #0
     44e:	d100      	bne.n	452 <transfer_temp+0x36>
	}
}
     450:	bdf0      	pop	{r4, r5, r6, r7, pc}
     452:	4b01      	ldr	r3, [pc, #4]	; (458 <transfer_temp+0x3c>)
     454:	701a      	strb	r2, [r3, #0]
     456:	e7fb      	b.n	450 <transfer_temp+0x34>
     458:	20000000 	.word	0x20000000
     45c:	2000023c 	.word	0x2000023c
     460:	2000024c 	.word	0x2000024c
     464:	20000274 	.word	0x20000274
     468:	20000244 	.word	0x20000244

0000046c <initializing_led_pins>:

void initializing_led_pins()
{
	
	temp_led_array[0]  = PIN_PA07;
     46c:	4b06      	ldr	r3, [pc, #24]	; (488 <initializing_led_pins+0x1c>)
     46e:	2207      	movs	r2, #7
     470:	701a      	strb	r2, [r3, #0]
	temp_led_array[1]  = PIN_PA06;
     472:	3a01      	subs	r2, #1
     474:	705a      	strb	r2, [r3, #1]
	temp_led_array[2]  = PIN_PB22;
     476:	3230      	adds	r2, #48	; 0x30
     478:	709a      	strb	r2, [r3, #2]
	temp_led_array[3]  = PIN_PB11;
     47a:	3a0b      	subs	r2, #11
     47c:	70da      	strb	r2, [r3, #3]
	temp_led_array[4]  = PIN_PB10;
     47e:	3a01      	subs	r2, #1
     480:	711a      	strb	r2, [r3, #4]
	temp_led_array[5]  = PIN_PA27;
     482:	3a0f      	subs	r2, #15
     484:	715a      	strb	r2, [r3, #5]
}
     486:	4770      	bx	lr
     488:	20000244 	.word	0x20000244

0000048c <set_led_left_new>:

void set_led_left_new(uint8_t red, uint8_t green, uint8_t blue)
{
	temp_time_array[0] = MAX_INTENSITY - red;
     48c:	4b03      	ldr	r3, [pc, #12]	; (49c <set_led_left_new+0x10>)
     48e:	43c0      	mvns	r0, r0
     490:	7018      	strb	r0, [r3, #0]
	temp_time_array[1] = MAX_INTENSITY - green;
     492:	43c9      	mvns	r1, r1
     494:	7059      	strb	r1, [r3, #1]
	temp_time_array[2] = MAX_INTENSITY - blue;
     496:	43d2      	mvns	r2, r2
     498:	709a      	strb	r2, [r3, #2]
	//initializing_led_pins();
	
	//increasing_sort_tag();
	//update_LED = true;

}
     49a:	4770      	bx	lr
     49c:	2000023c 	.word	0x2000023c

000004a0 <set_led_right_new>:

void set_led_right_new(uint8_t red, uint8_t green, uint8_t blue)
{
     4a0:	b510      	push	{r4, lr}
	temp_time_array[3] = MAX_INTENSITY - red;
     4a2:	4b07      	ldr	r3, [pc, #28]	; (4c0 <set_led_right_new+0x20>)
     4a4:	43c0      	mvns	r0, r0
     4a6:	70d8      	strb	r0, [r3, #3]
	temp_time_array[4] = MAX_INTENSITY - green;
     4a8:	43c9      	mvns	r1, r1
     4aa:	7119      	strb	r1, [r3, #4]
	temp_time_array[5] = MAX_INTENSITY- blue;
     4ac:	43d2      	mvns	r2, r2
     4ae:	715a      	strb	r2, [r3, #5]
	initializing_led_pins();
     4b0:	4b04      	ldr	r3, [pc, #16]	; (4c4 <set_led_right_new+0x24>)
     4b2:	4798      	blx	r3
	
	increasing_sort_tag();
     4b4:	4b04      	ldr	r3, [pc, #16]	; (4c8 <set_led_right_new+0x28>)
     4b6:	4798      	blx	r3
	update_LED = true;
     4b8:	2201      	movs	r2, #1
     4ba:	4b04      	ldr	r3, [pc, #16]	; (4cc <set_led_right_new+0x2c>)
     4bc:	701a      	strb	r2, [r3, #0]
}
     4be:	bd10      	pop	{r4, pc}
     4c0:	2000023c 	.word	0x2000023c
     4c4:	0000046d 	.word	0x0000046d
     4c8:	000003bd 	.word	0x000003bd
     4cc:	20000136 	.word	0x20000136

000004d0 <initializing_leds>:

void initializing_leds()
{

	temp_time_array[0] = 254;//Left -- R
     4d0:	4b04      	ldr	r3, [pc, #16]	; (4e4 <initializing_leds+0x14>)
     4d2:	22fe      	movs	r2, #254	; 0xfe
     4d4:	701a      	strb	r2, [r3, #0]
	temp_time_array[1] = 254;//Left  -- G
     4d6:	705a      	strb	r2, [r3, #1]
	temp_time_array[2] = 254;//Left  -- B
     4d8:	709a      	strb	r2, [r3, #2]
	temp_time_array[3] = 254;//Right -- R
     4da:	70da      	strb	r2, [r3, #3]
	temp_time_array[4] = 254;//Right  -- G
     4dc:	711a      	strb	r2, [r3, #4]
	temp_time_array[5] = 254;//Right -- B
     4de:	715a      	strb	r2, [r3, #5]

}
     4e0:	4770      	bx	lr
     4e2:	46c0      	nop			; (mov r8, r8)
     4e4:	2000023c 	.word	0x2000023c

000004e8 <setup_output_levels_leds_off>:
		port_base->OUTSET.reg = pin_mask;
     4e8:	4a09      	ldr	r2, [pc, #36]	; (510 <setup_output_levels_leds_off+0x28>)
     4ea:	2380      	movs	r3, #128	; 0x80
     4ec:	6193      	str	r3, [r2, #24]
     4ee:	2140      	movs	r1, #64	; 0x40
     4f0:	6191      	str	r1, [r2, #24]
     4f2:	4694      	mov	ip, r2
     4f4:	4463      	add	r3, ip
     4f6:	2180      	movs	r1, #128	; 0x80
     4f8:	03c9      	lsls	r1, r1, #15
     4fa:	6199      	str	r1, [r3, #24]
     4fc:	2180      	movs	r1, #128	; 0x80
     4fe:	0109      	lsls	r1, r1, #4
     500:	6199      	str	r1, [r3, #24]
     502:	2180      	movs	r1, #128	; 0x80
     504:	00c9      	lsls	r1, r1, #3
     506:	6199      	str	r1, [r3, #24]
     508:	2380      	movs	r3, #128	; 0x80
     50a:	051b      	lsls	r3, r3, #20
     50c:	6193      	str	r3, [r2, #24]
	port_pin_set_output_level(L_BLED_PIN,RGB_LED_ENABLE);
	port_pin_set_output_level(R_RLED_PIN,RGB_LED_ENABLE);
	port_pin_set_output_level(R_GLED_PIN,RGB_LED_ENABLE);
	port_pin_set_output_level(R_BLED_PIN,RGB_LED_ENABLE);
	
}
     50e:	4770      	bx	lr
     510:	41004400 	.word	0x41004400

00000514 <tc_callback_OF>:
{
     514:	b510      	push	{r4, lr}
     516:	0004      	movs	r4, r0
	setup_output_levels_leds_off();
     518:	4b20      	ldr	r3, [pc, #128]	; (59c <tc_callback_OF+0x88>)
     51a:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
     51c:	4b20      	ldr	r3, [pc, #128]	; (5a0 <tc_callback_OF+0x8c>)
     51e:	6818      	ldr	r0, [r3, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     520:	7bc3      	ldrb	r3, [r0, #15]

	while (tc_is_syncing(module_inst)) {
     522:	b25b      	sxtb	r3, r3
     524:	2b00      	cmp	r3, #0
     526:	dbfb      	blt.n	520 <tc_callback_OF+0xc>
		/* Wait for sync */
	}
	
	/* Enable TC module */
	tc_module->INTFLAG.reg = 0x30; //Clearing the Channel 0 and Channel 1 interrupt
     528:	2330      	movs	r3, #48	; 0x30
     52a:	7383      	strb	r3, [r0, #14]
	if(update_LED == true)
     52c:	4b1d      	ldr	r3, [pc, #116]	; (5a4 <tc_callback_OF+0x90>)
     52e:	781b      	ldrb	r3, [r3, #0]
     530:	2b00      	cmp	r3, #0
     532:	d115      	bne.n	560 <tc_callback_OF+0x4c>
	time_array_ID = 0;
     534:	2300      	movs	r3, #0
     536:	4a1c      	ldr	r2, [pc, #112]	; (5a8 <tc_callback_OF+0x94>)
     538:	7013      	strb	r3, [r2, #0]
	led_array_ID  = 0;
     53a:	4a1c      	ldr	r2, [pc, #112]	; (5ac <tc_callback_OF+0x98>)
     53c:	7013      	strb	r3, [r2, #0]
	compare_value = time_array[0];
     53e:	4b1c      	ldr	r3, [pc, #112]	; (5b0 <tc_callback_OF+0x9c>)
     540:	781a      	ldrb	r2, [r3, #0]
	if(compare_value != 255)
     542:	2aff      	cmp	r2, #255	; 0xff
     544:	d124      	bne.n	590 <tc_callback_OF+0x7c>
	/* Sanity check arguments */
	Assert(module);

	/* Disable callback */
	if (callback_type == TC_CALLBACK_CC_CHANNEL0) {
		module->hw->COUNT8.INTENCLR.reg = TC_INTFLAG_MC(1);
     546:	4b16      	ldr	r3, [pc, #88]	; (5a0 <tc_callback_OF+0x8c>)
     548:	2110      	movs	r1, #16
     54a:	681a      	ldr	r2, [r3, #0]
     54c:	7311      	strb	r1, [r2, #12]
		module->enable_callback_mask &= ~TC_INTFLAG_MC(1);
     54e:	7e5a      	ldrb	r2, [r3, #25]
     550:	438a      	bics	r2, r1
     552:	765a      	strb	r2, [r3, #25]
	tc_set_inital_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, 0);
     554:	2200      	movs	r2, #0
     556:	2100      	movs	r1, #0
     558:	0020      	movs	r0, r4
     55a:	4b16      	ldr	r3, [pc, #88]	; (5b4 <tc_callback_OF+0xa0>)
     55c:	4798      	blx	r3
}
     55e:	bd10      	pop	{r4, pc}
	system_interrupt_enable(_tc_interrupt_get_interrupt_vector(_tc_get_inst_index(module->hw)));
     560:	4b15      	ldr	r3, [pc, #84]	; (5b8 <tc_callback_OF+0xa4>)
     562:	4798      	blx	r3
	return (enum system_interrupt_vector)tc_interrupt_vectors[inst_num];
     564:	4b15      	ldr	r3, [pc, #84]	; (5bc <tc_callback_OF+0xa8>)
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
     566:	5c1b      	ldrb	r3, [r3, r0]
     568:	221f      	movs	r2, #31
     56a:	401a      	ands	r2, r3
     56c:	2301      	movs	r3, #1
     56e:	4093      	lsls	r3, r2
     570:	4a13      	ldr	r2, [pc, #76]	; (5c0 <tc_callback_OF+0xac>)
     572:	6013      	str	r3, [r2, #0]
		module->enable_callback_mask |= TC_INTFLAG_MC(1);
     574:	4b0a      	ldr	r3, [pc, #40]	; (5a0 <tc_callback_OF+0x8c>)
     576:	7e5a      	ldrb	r2, [r3, #25]
     578:	2110      	movs	r1, #16
     57a:	430a      	orrs	r2, r1
     57c:	765a      	strb	r2, [r3, #25]
		module->hw->COUNT8.INTENSET.reg = TC_INTFLAG_MC(1);
     57e:	681b      	ldr	r3, [r3, #0]
     580:	2210      	movs	r2, #16
     582:	735a      	strb	r2, [r3, #13]
		transfer_temp();
     584:	4b0f      	ldr	r3, [pc, #60]	; (5c4 <tc_callback_OF+0xb0>)
     586:	4798      	blx	r3
		update_LED = false;
     588:	2200      	movs	r2, #0
     58a:	4b06      	ldr	r3, [pc, #24]	; (5a4 <tc_callback_OF+0x90>)
     58c:	701a      	strb	r2, [r3, #0]
     58e:	e7d1      	b.n	534 <tc_callback_OF+0x20>
		tc_set_compare_value(module_inst, TC_COMPARE_CAPTURE_CHANNEL_0, compare_value);
     590:	2100      	movs	r1, #0
     592:	0020      	movs	r0, r4
     594:	4b0c      	ldr	r3, [pc, #48]	; (5c8 <tc_callback_OF+0xb4>)
     596:	4798      	blx	r3
     598:	e7dc      	b.n	554 <tc_callback_OF+0x40>
     59a:	46c0      	nop			; (mov r8, r8)
     59c:	000004e9 	.word	0x000004e9
     5a0:	20000254 	.word	0x20000254
     5a4:	20000136 	.word	0x20000136
     5a8:	20000242 	.word	0x20000242
     5ac:	20000270 	.word	0x20000270
     5b0:	2000024c 	.word	0x2000024c
     5b4:	00003b7f 	.word	0x00003b7f
     5b8:	0000385d 	.word	0x0000385d
     5bc:	00007da4 	.word	0x00007da4
     5c0:	e000e100 	.word	0xe000e100
     5c4:	0000041d 	.word	0x0000041d
     5c8:	00003b2f 	.word	0x00003b2f

000005cc <setup_outputs_leds>:

void setup_outputs_leds()
{
     5cc:	b530      	push	{r4, r5, lr}
     5ce:	b083      	sub	sp, #12
	config->input_pull = PORT_PIN_PULL_UP;
     5d0:	ac01      	add	r4, sp, #4
     5d2:	2301      	movs	r3, #1
     5d4:	7063      	strb	r3, [r4, #1]
	config->powersave  = false;
     5d6:	2200      	movs	r2, #0
     5d8:	70a2      	strb	r2, [r4, #2]
	
	struct port_config config_port_pin;
	port_get_config_defaults(&config_port_pin);
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     5da:	7023      	strb	r3, [r4, #0]
	port_pin_set_config(L_RLED_PIN, &config_port_pin);
     5dc:	0021      	movs	r1, r4
     5de:	2007      	movs	r0, #7
     5e0:	4d0a      	ldr	r5, [pc, #40]	; (60c <setup_outputs_leds+0x40>)
     5e2:	47a8      	blx	r5
	port_pin_set_config(L_GLED_PIN, &config_port_pin);
     5e4:	0021      	movs	r1, r4
     5e6:	2006      	movs	r0, #6
     5e8:	47a8      	blx	r5
	port_pin_set_config(L_BLED_PIN, &config_port_pin);
     5ea:	0021      	movs	r1, r4
     5ec:	2036      	movs	r0, #54	; 0x36
     5ee:	47a8      	blx	r5
	port_pin_set_config(R_RLED_PIN, &config_port_pin);
     5f0:	0021      	movs	r1, r4
     5f2:	202b      	movs	r0, #43	; 0x2b
     5f4:	47a8      	blx	r5
	port_pin_set_config(R_GLED_PIN, &config_port_pin);
     5f6:	0021      	movs	r1, r4
     5f8:	202a      	movs	r0, #42	; 0x2a
     5fa:	47a8      	blx	r5
	port_pin_set_config(R_BLED_PIN, &config_port_pin);
     5fc:	0021      	movs	r1, r4
     5fe:	201b      	movs	r0, #27
     600:	47a8      	blx	r5
	setup_output_levels_leds_off();
     602:	4b03      	ldr	r3, [pc, #12]	; (610 <setup_outputs_leds+0x44>)
     604:	4798      	blx	r3

}
     606:	b003      	add	sp, #12
     608:	bd30      	pop	{r4, r5, pc}
     60a:	46c0      	nop			; (mov r8, r8)
     60c:	00002349 	.word	0x00002349
     610:	000004e9 	.word	0x000004e9

00000614 <configure_rgb_led>:

void configure_rgb_led(void)
{
     614:	b510      	push	{r4, lr}
     616:	b08e      	sub	sp, #56	; 0x38
	config->clock_source               = GCLK_GENERATOR_0;
     618:	aa01      	add	r2, sp, #4
     61a:	2300      	movs	r3, #0
     61c:	2100      	movs	r1, #0
     61e:	7013      	strb	r3, [r2, #0]
	config->wave_generation            = TC_WAVE_GENERATION_NORMAL_FREQ;
     620:	7193      	strb	r3, [r2, #6]
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
     622:	8113      	strh	r3, [r2, #8]
	config->run_in_standby             = false;
     624:	2000      	movs	r0, #0
     626:	7050      	strb	r0, [r2, #1]
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
     628:	7291      	strb	r1, [r2, #10]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
     62a:	72d1      	strb	r1, [r2, #11]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
     62c:	7311      	strb	r1, [r2, #12]
	config->count_direction            = TC_COUNT_DIRECTION_UP;
     62e:	7391      	strb	r1, [r2, #14]
	config->oneshot                    = false;
     630:	7351      	strb	r1, [r2, #13]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = false;
     632:	7411      	strb	r1, [r2, #16]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_out = 0;
     634:	6153      	str	r3, [r2, #20]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_mux = 0;
     636:	6193      	str	r3, [r2, #24]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
     638:	7711      	strb	r1, [r2, #28]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
     63a:	6213      	str	r3, [r2, #32]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;
     63c:	6253      	str	r3, [r2, #36]	; 0x24
	config->counter_16_bit.value                   = 0x0000;
     63e:	8513      	strh	r3, [r2, #40]	; 0x28
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
     640:	8553      	strh	r3, [r2, #42]	; 0x2a
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
     642:	8593      	strh	r3, [r2, #44]	; 0x2c
	
	struct tc_config rgb_led_config;
	tc_get_config_defaults(&rgb_led_config);
	//rgb_led_config.clock_source = GCLK_GENERATOR_1;
	rgb_led_config.clock_prescaler = TC_CLOCK_PRESCALER_DIV1024;
     644:	23e0      	movs	r3, #224	; 0xe0
     646:	00db      	lsls	r3, r3, #3
     648:	8093      	strh	r3, [r2, #4]
	rgb_led_config.counter_size = TC_COUNTER_SIZE_8BIT; 
     64a:	2304      	movs	r3, #4
     64c:	7093      	strb	r3, [r2, #2]
	rgb_led_config.counter_8_bit.period = 0XFF;
     64e:	21ff      	movs	r1, #255	; 0xff
     650:	3325      	adds	r3, #37	; 0x25
     652:	54d1      	strb	r1, [r2, r3]
	rgb_led_config.counter_8_bit.compare_capture_channel[0] = 0;
	
	tc_init(&tc_instance, TC3, &rgb_led_config);
     654:	4c0c      	ldr	r4, [pc, #48]	; (688 <configure_rgb_led+0x74>)
     656:	490d      	ldr	r1, [pc, #52]	; (68c <configure_rgb_led+0x78>)
     658:	0020      	movs	r0, r4
     65a:	4b0d      	ldr	r3, [pc, #52]	; (690 <configure_rgb_led+0x7c>)
     65c:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
     65e:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     660:	7bd3      	ldrb	r3, [r2, #15]

	while (tc_is_syncing(module_inst)) {
     662:	b25b      	sxtb	r3, r3
     664:	2b00      	cmp	r3, #0
     666:	dbfb      	blt.n	660 <configure_rgb_led+0x4c>
		/* Wait for sync */
	}

	/* Enable TC module */
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
     668:	8813      	ldrh	r3, [r2, #0]
     66a:	2102      	movs	r1, #2
     66c:	430b      	orrs	r3, r1
     66e:	8013      	strh	r3, [r2, #0]
	tc_enable(&tc_instance);
	
	initializing_leds();
     670:	4b08      	ldr	r3, [pc, #32]	; (694 <configure_rgb_led+0x80>)
     672:	4798      	blx	r3
	initializing_led_pins();
     674:	4b08      	ldr	r3, [pc, #32]	; (698 <configure_rgb_led+0x84>)
     676:	4798      	blx	r3
	increasing_sort_tag();
     678:	4b08      	ldr	r3, [pc, #32]	; (69c <configure_rgb_led+0x88>)
     67a:	4798      	blx	r3
	transfer_temp();
     67c:	4b08      	ldr	r3, [pc, #32]	; (6a0 <configure_rgb_led+0x8c>)
     67e:	4798      	blx	r3
	setup_outputs_leds();
     680:	4b08      	ldr	r3, [pc, #32]	; (6a4 <configure_rgb_led+0x90>)
     682:	4798      	blx	r3
}
     684:	b00e      	add	sp, #56	; 0x38
     686:	bd10      	pop	{r4, pc}
     688:	20000254 	.word	0x20000254
     68c:	42002c00 	.word	0x42002c00
     690:	00003895 	.word	0x00003895
     694:	000004d1 	.word	0x000004d1
     698:	0000046d 	.word	0x0000046d
     69c:	000003bd 	.word	0x000003bd
     6a0:	0000041d 	.word	0x0000041d
     6a4:	000005cd 	.word	0x000005cd

000006a8 <configure_tc_callbacks>:
void configure_tc_callbacks(void)
{
     6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     6aa:	46ce      	mov	lr, r9
     6ac:	4647      	mov	r7, r8
     6ae:	b580      	push	{r7, lr}
	tc_register_callback(&tc_instance, tc_callback_OF,
     6b0:	4c17      	ldr	r4, [pc, #92]	; (710 <configure_tc_callbacks+0x68>)
     6b2:	2200      	movs	r2, #0
     6b4:	4917      	ldr	r1, [pc, #92]	; (714 <configure_tc_callbacks+0x6c>)
     6b6:	0020      	movs	r0, r4
     6b8:	4d17      	ldr	r5, [pc, #92]	; (718 <configure_tc_callbacks+0x70>)
     6ba:	47a8      	blx	r5
	TC_CALLBACK_OVERFLOW);
	tc_register_callback(&tc_instance, tc_callback_PWM,
     6bc:	2202      	movs	r2, #2
     6be:	4917      	ldr	r1, [pc, #92]	; (71c <configure_tc_callbacks+0x74>)
     6c0:	0020      	movs	r0, r4
     6c2:	47a8      	blx	r5
	system_interrupt_enable(_tc_interrupt_get_interrupt_vector(_tc_get_inst_index(module->hw)));
     6c4:	6820      	ldr	r0, [r4, #0]
     6c6:	4b16      	ldr	r3, [pc, #88]	; (720 <configure_tc_callbacks+0x78>)
     6c8:	4699      	mov	r9, r3
     6ca:	4798      	blx	r3
	return (enum system_interrupt_vector)tc_interrupt_vectors[inst_num];
     6cc:	4b15      	ldr	r3, [pc, #84]	; (724 <configure_tc_callbacks+0x7c>)
     6ce:	4698      	mov	r8, r3
     6d0:	5c1b      	ldrb	r3, [r3, r0]
     6d2:	261f      	movs	r6, #31
     6d4:	4033      	ands	r3, r6
     6d6:	2501      	movs	r5, #1
     6d8:	002a      	movs	r2, r5
     6da:	409a      	lsls	r2, r3
     6dc:	4f12      	ldr	r7, [pc, #72]	; (728 <configure_tc_callbacks+0x80>)
     6de:	603a      	str	r2, [r7, #0]
		module->enable_callback_mask |= (1 << callback_type);
     6e0:	7e63      	ldrb	r3, [r4, #25]
     6e2:	2201      	movs	r2, #1
     6e4:	4313      	orrs	r3, r2
     6e6:	7663      	strb	r3, [r4, #25]
		module->hw->COUNT8.INTENSET.reg = (1 << callback_type);
     6e8:	6823      	ldr	r3, [r4, #0]
     6ea:	735d      	strb	r5, [r3, #13]
	system_interrupt_enable(_tc_interrupt_get_interrupt_vector(_tc_get_inst_index(module->hw)));
     6ec:	0018      	movs	r0, r3
     6ee:	47c8      	blx	r9
     6f0:	4643      	mov	r3, r8
     6f2:	5c1b      	ldrb	r3, [r3, r0]
     6f4:	401e      	ands	r6, r3
     6f6:	40b5      	lsls	r5, r6
     6f8:	603d      	str	r5, [r7, #0]
		module->enable_callback_mask |= TC_INTFLAG_MC(1);
     6fa:	7e63      	ldrb	r3, [r4, #25]
     6fc:	2210      	movs	r2, #16
     6fe:	4313      	orrs	r3, r2
     700:	7663      	strb	r3, [r4, #25]
		module->hw->COUNT8.INTENSET.reg = TC_INTFLAG_MC(1);
     702:	6823      	ldr	r3, [r4, #0]
     704:	2210      	movs	r2, #16
     706:	735a      	strb	r2, [r3, #13]
	TC_CALLBACK_CC_CHANNEL0);
	tc_enable_callback(&tc_instance, TC_CALLBACK_OVERFLOW);
	tc_enable_callback(&tc_instance, TC_CALLBACK_CC_CHANNEL0);
	
}
     708:	bc0c      	pop	{r2, r3}
     70a:	4690      	mov	r8, r2
     70c:	4699      	mov	r9, r3
     70e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     710:	20000254 	.word	0x20000254
     714:	00000515 	.word	0x00000515
     718:	00003789 	.word	0x00003789
     71c:	0000023d 	.word	0x0000023d
     720:	0000385d 	.word	0x0000385d
     724:	00007da4 	.word	0x00007da4
     728:	e000e100 	.word	0xe000e100

0000072c <enable_power_ic>:
		port_base->OUTSET.reg = pin_mask;
     72c:	4b03      	ldr	r3, [pc, #12]	; (73c <enable_power_ic+0x10>)
     72e:	2280      	movs	r2, #128	; 0x80
     730:	02d2      	lsls	r2, r2, #11
     732:	619a      	str	r2, [r3, #24]
     734:	2280      	movs	r2, #128	; 0x80
     736:	01d2      	lsls	r2, r2, #7
     738:	619a      	str	r2, [r3, #24]

void enable_power_ic(void)
{
	port_pin_set_output_level(ENABLE_PIN_PWIC,ENABLE_PWIC);
	port_pin_set_output_level(ENABLE_PIN_5V,ENABLE_5V);
}
     73a:	4770      	bx	lr
     73c:	41004400 	.word	0x41004400

00000740 <configure_power_enable_pins>:


void configure_power_enable_pins(void)
{
     740:	b530      	push	{r4, r5, lr}
     742:	b083      	sub	sp, #12
	config->input_pull = PORT_PIN_PULL_UP;
     744:	ac01      	add	r4, sp, #4
     746:	2301      	movs	r3, #1
     748:	7063      	strb	r3, [r4, #1]
	config->powersave  = false;
     74a:	2200      	movs	r2, #0
     74c:	70a2      	strb	r2, [r4, #2]

	struct port_config config_port_pin;
	port_get_config_defaults(&config_port_pin);
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     74e:	7023      	strb	r3, [r4, #0]
	port_pin_set_config(ENABLE_PIN_PWIC, &config_port_pin);
     750:	0021      	movs	r1, r4
     752:	2012      	movs	r0, #18
     754:	4d03      	ldr	r5, [pc, #12]	; (764 <configure_power_enable_pins+0x24>)
     756:	47a8      	blx	r5
	port_pin_set_config(ENABLE_PIN_5V, &config_port_pin);
     758:	0021      	movs	r1, r4
     75a:	200e      	movs	r0, #14
     75c:	47a8      	blx	r5


	
     75e:	b003      	add	sp, #12
     760:	bd30      	pop	{r4, r5, pc}
     762:	46c0      	nop			; (mov r8, r8)
     764:	00002349 	.word	0x00002349

00000768 <new_echo_detection_callback>:
	//start timer
	//tc_start_counter(&tc_instance4);
}

void new_echo_detection_callback(void)
{
     768:	b510      	push	{r4, lr}
	//stop timer
	//tc_stop_counter(&tc_instance4);
	//disable echo interrupt
	
	//tc_set_count_value(&tc_instance4, 0);
	if(interrupt_edge == true )
     76a:	4b0a      	ldr	r3, [pc, #40]	; (794 <new_echo_detection_callback+0x2c>)
     76c:	781b      	ldrb	r3, [r3, #0]
     76e:	2b00      	cmp	r3, #0
     770:	d108      	bne.n	784 <new_echo_detection_callback+0x1c>
		interrupt_edge = false;
		tc_set_count_value(&tc_instance4, 0);
	}
	else
	{
		interrupt_edge = true;
     772:	2201      	movs	r2, #1
     774:	4b07      	ldr	r3, [pc, #28]	; (794 <new_echo_detection_callback+0x2c>)
     776:	701a      	strb	r2, [r3, #0]
		distance_16b = tc_get_count_value(&tc_instance4);
     778:	4807      	ldr	r0, [pc, #28]	; (798 <new_echo_detection_callback+0x30>)
     77a:	4b08      	ldr	r3, [pc, #32]	; (79c <new_echo_detection_callback+0x34>)
     77c:	4798      	blx	r3
     77e:	4b08      	ldr	r3, [pc, #32]	; (7a0 <new_echo_detection_callback+0x38>)
     780:	6018      	str	r0, [r3, #0]
	//extint_chan_disable_callback(ECHO_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
	//read counter value
	//distance_16b = tc_get_count_value(&tc_instance4);
	//start timer
	//tc_start_counter(&tc_instance4);
}
     782:	bd10      	pop	{r4, pc}
		interrupt_edge = false;
     784:	2200      	movs	r2, #0
     786:	4b03      	ldr	r3, [pc, #12]	; (794 <new_echo_detection_callback+0x2c>)
     788:	701a      	strb	r2, [r3, #0]
		tc_set_count_value(&tc_instance4, 0);
     78a:	2100      	movs	r1, #0
     78c:	4802      	ldr	r0, [pc, #8]	; (798 <new_echo_detection_callback+0x30>)
     78e:	4b05      	ldr	r3, [pc, #20]	; (7a4 <new_echo_detection_callback+0x3c>)
     790:	4798      	blx	r3
     792:	e7f6      	b.n	782 <new_echo_detection_callback+0x1a>
     794:	20000002 	.word	0x20000002
     798:	2000027c 	.word	0x2000027c
     79c:	00003b03 	.word	0x00003b03
     7a0:	20000138 	.word	0x20000138
     7a4:	00003ad1 	.word	0x00003ad1

000007a8 <configure_pins>:
{
     7a8:	b570      	push	{r4, r5, r6, lr}
     7aa:	b082      	sub	sp, #8
	config->input_pull = PORT_PIN_PULL_UP;
     7ac:	ac01      	add	r4, sp, #4
     7ae:	2301      	movs	r3, #1
     7b0:	7063      	strb	r3, [r4, #1]
	config->powersave  = false;
     7b2:	2600      	movs	r6, #0
     7b4:	70a6      	strb	r6, [r4, #2]
	config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     7b6:	7023      	strb	r3, [r4, #0]
	port_pin_set_config(TRIG_PIN, &config_port_pin);
     7b8:	0021      	movs	r1, r4
     7ba:	2003      	movs	r0, #3
     7bc:	4d05      	ldr	r5, [pc, #20]	; (7d4 <configure_pins+0x2c>)
     7be:	47a8      	blx	r5
		port_base->OUTCLR.reg = pin_mask;
     7c0:	2208      	movs	r2, #8
     7c2:	4b05      	ldr	r3, [pc, #20]	; (7d8 <configure_pins+0x30>)
     7c4:	615a      	str	r2, [r3, #20]
	config_port_pin.direction = PORT_PIN_DIR_INPUT;
     7c6:	7026      	strb	r6, [r4, #0]
	port_pin_set_config(ECHO_PIN, &config_port_pin);
     7c8:	0021      	movs	r1, r4
     7ca:	200f      	movs	r0, #15
     7cc:	47a8      	blx	r5
}
     7ce:	b002      	add	sp, #8
     7d0:	bd70      	pop	{r4, r5, r6, pc}
     7d2:	46c0      	nop			; (mov r8, r8)
     7d4:	00002349 	.word	0x00002349
     7d8:	41004400 	.word	0x41004400

000007dc <configure_tc4>:
{
     7dc:	b510      	push	{r4, lr}
     7de:	b08e      	sub	sp, #56	; 0x38
	config->clock_source               = GCLK_GENERATOR_0;
     7e0:	aa01      	add	r2, sp, #4
     7e2:	2300      	movs	r3, #0
     7e4:	2100      	movs	r1, #0
     7e6:	7013      	strb	r3, [r2, #0]
	config->counter_size               = TC_COUNTER_SIZE_16BIT;
     7e8:	7093      	strb	r3, [r2, #2]
	config->wave_generation            = TC_WAVE_GENERATION_NORMAL_FREQ;
     7ea:	7193      	strb	r3, [r2, #6]
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
     7ec:	8113      	strh	r3, [r2, #8]
	config->run_in_standby             = false;
     7ee:	2000      	movs	r0, #0
     7f0:	7050      	strb	r0, [r2, #1]
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
     7f2:	7291      	strb	r1, [r2, #10]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
     7f4:	72d1      	strb	r1, [r2, #11]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
     7f6:	7311      	strb	r1, [r2, #12]
	config->count_direction            = TC_COUNT_DIRECTION_UP;
     7f8:	7391      	strb	r1, [r2, #14]
	config->oneshot                    = false;
     7fa:	7351      	strb	r1, [r2, #13]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = false;
     7fc:	7411      	strb	r1, [r2, #16]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_out = 0;
     7fe:	6153      	str	r3, [r2, #20]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_mux = 0;
     800:	6193      	str	r3, [r2, #24]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
     802:	7711      	strb	r1, [r2, #28]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
     804:	6213      	str	r3, [r2, #32]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;
     806:	6253      	str	r3, [r2, #36]	; 0x24
	config->counter_16_bit.value                   = 0x0000;
     808:	8513      	strh	r3, [r2, #40]	; 0x28
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
     80a:	8553      	strh	r3, [r2, #42]	; 0x2a
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
     80c:	8593      	strh	r3, [r2, #44]	; 0x2c
	config_tc.clock_prescaler = TC_CLOCK_PRESCALER_DIV64; //64
     80e:	23a0      	movs	r3, #160	; 0xa0
     810:	00db      	lsls	r3, r3, #3
     812:	8093      	strh	r3, [r2, #4]
	tc_init(&tc_instance4, TC4, &config_tc);
     814:	4c07      	ldr	r4, [pc, #28]	; (834 <configure_tc4+0x58>)
     816:	4908      	ldr	r1, [pc, #32]	; (838 <configure_tc4+0x5c>)
     818:	0020      	movs	r0, r4
     81a:	4b08      	ldr	r3, [pc, #32]	; (83c <configure_tc4+0x60>)
     81c:	4798      	blx	r3
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
     81e:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     820:	7bd3      	ldrb	r3, [r2, #15]
	while (tc_is_syncing(module_inst)) {
     822:	b25b      	sxtb	r3, r3
     824:	2b00      	cmp	r3, #0
     826:	dbfb      	blt.n	820 <configure_tc4+0x44>
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
     828:	8813      	ldrh	r3, [r2, #0]
     82a:	2102      	movs	r1, #2
     82c:	430b      	orrs	r3, r1
     82e:	8013      	strh	r3, [r2, #0]
}
     830:	b00e      	add	sp, #56	; 0x38
     832:	bd10      	pop	{r4, pc}
     834:	2000027c 	.word	0x2000027c
     838:	42003000 	.word	0x42003000
     83c:	00003895 	.word	0x00003895

00000840 <configure_echo_extint>:
{
     840:	b510      	push	{r4, lr}
     842:	b084      	sub	sp, #16
	extint_chan_get_config_defaults(&config_extint_chan);
     844:	ac01      	add	r4, sp, #4
     846:	0020      	movs	r0, r4
     848:	4b08      	ldr	r3, [pc, #32]	; (86c <configure_echo_extint+0x2c>)
     84a:	4798      	blx	r3
	config_extint_chan.gpio_pin           = ECHO_PIN_EIC;
     84c:	230f      	movs	r3, #15
     84e:	9301      	str	r3, [sp, #4]
	config_extint_chan.gpio_pin_mux       = ECHO_PIN_MUX;
     850:	23f0      	movs	r3, #240	; 0xf0
     852:	031b      	lsls	r3, r3, #12
     854:	6063      	str	r3, [r4, #4]
	config_extint_chan.gpio_pin_pull      = EXTINT_PULL_DOWN;
     856:	2302      	movs	r3, #2
     858:	7223      	strb	r3, [r4, #8]
	config_extint_chan.detection_criteria = EXTINT_DETECT_BOTH;
     85a:	3301      	adds	r3, #1
     85c:	72e3      	strb	r3, [r4, #11]
	extint_chan_set_config(ECHO_EIC_LINE, &config_extint_chan);
     85e:	0021      	movs	r1, r4
     860:	200f      	movs	r0, #15
     862:	4b03      	ldr	r3, [pc, #12]	; (870 <configure_echo_extint+0x30>)
     864:	4798      	blx	r3
}
     866:	b004      	add	sp, #16
     868:	bd10      	pop	{r4, pc}
     86a:	46c0      	nop			; (mov r8, r8)
     86c:	000022bd 	.word	0x000022bd
     870:	000022d1 	.word	0x000022d1

00000874 <setup_ultrasound>:
{
     874:	b570      	push	{r4, r5, r6, lr}
		port_base->OUTSET.reg = pin_mask;
     876:	4c06      	ldr	r4, [pc, #24]	; (890 <setup_ultrasound+0x1c>)
     878:	2508      	movs	r5, #8
     87a:	61a5      	str	r5, [r4, #24]
	delay_us(100); 
     87c:	2064      	movs	r0, #100	; 0x64
     87e:	4b05      	ldr	r3, [pc, #20]	; (894 <setup_ultrasound+0x20>)
     880:	4798      	blx	r3
		port_base->OUTCLR.reg = pin_mask;
     882:	6165      	str	r5, [r4, #20]
	tc_set_count_value(&tc_instance4, 0);
     884:	2100      	movs	r1, #0
     886:	4804      	ldr	r0, [pc, #16]	; (898 <setup_ultrasound+0x24>)
     888:	4b04      	ldr	r3, [pc, #16]	; (89c <setup_ultrasound+0x28>)
     88a:	4798      	blx	r3
}
     88c:	bd70      	pop	{r4, r5, r6, pc}
     88e:	46c0      	nop			; (mov r8, r8)
     890:	41004400 	.word	0x41004400
     894:	00000b01 	.word	0x00000b01
     898:	2000027c 	.word	0x2000027c
     89c:	00003ad1 	.word	0x00003ad1

000008a0 <TC4_OV_callback>:
{
     8a0:	b510      	push	{r4, lr}
	setup_ultrasound();
     8a2:	4b01      	ldr	r3, [pc, #4]	; (8a8 <TC4_OV_callback+0x8>)
     8a4:	4798      	blx	r3
}
     8a6:	bd10      	pop	{r4, pc}
     8a8:	00000875 	.word	0x00000875

000008ac <get_ultrasound_distance>:
char* get_ultrasound_distance()
{
	char* distance_ultrasound= NULL;
	distance_ultrasound= &distance_16b;
	return distance_ultrasound;
}
     8ac:	4800      	ldr	r0, [pc, #0]	; (8b0 <get_ultrasound_distance+0x4>)
     8ae:	4770      	bx	lr
     8b0:	20000138 	.word	0x20000138

000008b4 <configure_TC4_callback>:

void configure_TC4_callback()
{
     8b4:	b510      	push	{r4, lr}
	tc_register_callback(&tc_instance4, TC4_OV_callback,TC_CALLBACK_OVERFLOW);
     8b6:	4c0c      	ldr	r4, [pc, #48]	; (8e8 <configure_TC4_callback+0x34>)
     8b8:	2200      	movs	r2, #0
     8ba:	490c      	ldr	r1, [pc, #48]	; (8ec <configure_TC4_callback+0x38>)
     8bc:	0020      	movs	r0, r4
     8be:	4b0c      	ldr	r3, [pc, #48]	; (8f0 <configure_TC4_callback+0x3c>)
     8c0:	4798      	blx	r3
	system_interrupt_enable(_tc_interrupt_get_interrupt_vector(_tc_get_inst_index(module->hw)));
     8c2:	6820      	ldr	r0, [r4, #0]
     8c4:	4b0b      	ldr	r3, [pc, #44]	; (8f4 <configure_TC4_callback+0x40>)
     8c6:	4798      	blx	r3
	return (enum system_interrupt_vector)tc_interrupt_vectors[inst_num];
     8c8:	4b0b      	ldr	r3, [pc, #44]	; (8f8 <configure_TC4_callback+0x44>)
     8ca:	5c1a      	ldrb	r2, [r3, r0]
     8cc:	231f      	movs	r3, #31
     8ce:	4013      	ands	r3, r2
     8d0:	2201      	movs	r2, #1
     8d2:	0011      	movs	r1, r2
     8d4:	4099      	lsls	r1, r3
     8d6:	4b09      	ldr	r3, [pc, #36]	; (8fc <configure_TC4_callback+0x48>)
     8d8:	6019      	str	r1, [r3, #0]
		module->enable_callback_mask |= (1 << callback_type);
     8da:	7e63      	ldrb	r3, [r4, #25]
     8dc:	2101      	movs	r1, #1
     8de:	430b      	orrs	r3, r1
     8e0:	7663      	strb	r3, [r4, #25]
		module->hw->COUNT8.INTENSET.reg = (1 << callback_type);
     8e2:	6823      	ldr	r3, [r4, #0]
     8e4:	735a      	strb	r2, [r3, #13]
	tc_enable_callback(&tc_instance4, TC_CALLBACK_OVERFLOW);

}
     8e6:	bd10      	pop	{r4, pc}
     8e8:	2000027c 	.word	0x2000027c
     8ec:	000008a1 	.word	0x000008a1
     8f0:	00003789 	.word	0x00003789
     8f4:	0000385d 	.word	0x0000385d
     8f8:	00007da8 	.word	0x00007da8
     8fc:	e000e100 	.word	0xe000e100

00000900 <configure_ext_callback>:

void configure_ext_callback()
{
     900:	b510      	push	{r4, lr}
	extint_register_callback(new_echo_detection_callback,ECHO_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     902:	2200      	movs	r2, #0
     904:	210f      	movs	r1, #15
     906:	4804      	ldr	r0, [pc, #16]	; (918 <configure_ext_callback+0x18>)
     908:	4b04      	ldr	r3, [pc, #16]	; (91c <configure_ext_callback+0x1c>)
     90a:	4798      	blx	r3
	extint_chan_enable_callback(ECHO_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     90c:	2100      	movs	r1, #0
     90e:	200f      	movs	r0, #15
     910:	4b03      	ldr	r3, [pc, #12]	; (920 <configure_ext_callback+0x20>)
     912:	4798      	blx	r3
}
     914:	bd10      	pop	{r4, pc}
     916:	46c0      	nop			; (mov r8, r8)
     918:	00000769 	.word	0x00000769
     91c:	00002199 	.word	0x00002199
     920:	000021c5 	.word	0x000021c5

00000924 <configure_callbacks>:

void configure_callbacks()
{
     924:	b510      	push	{r4, lr}
	configure_TC4_callback();
     926:	4b02      	ldr	r3, [pc, #8]	; (930 <configure_callbacks+0xc>)
     928:	4798      	blx	r3
	configure_ext_callback();
     92a:	4b02      	ldr	r3, [pc, #8]	; (934 <configure_callbacks+0x10>)
     92c:	4798      	blx	r3
	
}
     92e:	bd10      	pop	{r4, pc}
     930:	000008b5 	.word	0x000008b5
     934:	00000901 	.word	0x00000901

00000938 <configure_modules>:
void configure_modules()
{
     938:	b510      	push	{r4, lr}
	configure_tc4();
     93a:	4b02      	ldr	r3, [pc, #8]	; (944 <configure_modules+0xc>)
     93c:	4798      	blx	r3
	configure_echo_extint();
     93e:	4b02      	ldr	r3, [pc, #8]	; (948 <configure_modules+0x10>)
     940:	4798      	blx	r3
}
     942:	bd10      	pop	{r4, pc}
     944:	000007dd 	.word	0x000007dd
     948:	00000841 	.word	0x00000841

0000094c <configure_ultrasound>:

void configure_ultrasound()
{
     94c:	b510      	push	{r4, lr}
	configure_pins();
     94e:	4b03      	ldr	r3, [pc, #12]	; (95c <configure_ultrasound+0x10>)
     950:	4798      	blx	r3
	configure_modules();
     952:	4b03      	ldr	r3, [pc, #12]	; (960 <configure_ultrasound+0x14>)
     954:	4798      	blx	r3
	configure_callbacks();
     956:	4b03      	ldr	r3, [pc, #12]	; (964 <configure_ultrasound+0x18>)
     958:	4798      	blx	r3

     95a:	bd10      	pop	{r4, pc}
     95c:	000007a9 	.word	0x000007a9
     960:	00000939 	.word	0x00000939
     964:	00000925 	.word	0x00000925

00000968 <get_accel_data>:
	*/
	get_accel_data();
}

void get_accel_data(void)
{
     968:	b530      	push	{r4, r5, lr}
     96a:	b085      	sub	sp, #20
	
	struct i2c_master_packet packet = {
     96c:	aa01      	add	r2, sp, #4
     96e:	4b06      	ldr	r3, [pc, #24]	; (988 <get_accel_data+0x20>)
     970:	cb13      	ldmia	r3!, {r0, r1, r4}
     972:	c213      	stmia	r2!, {r0, r1, r4}
	unsigned char bufferSend[1];
	bufferSend[0] = 0x00;
	write_data(bufferSend, 1);
	*/
	// Read the resulting four bytes (x, y, z, and status)
	while(i2c_master_read_packet_wait_no_stop(&i2c_master_instance, &packet) !=
     974:	4d05      	ldr	r5, [pc, #20]	; (98c <get_accel_data+0x24>)
     976:	4c06      	ldr	r4, [pc, #24]	; (990 <get_accel_data+0x28>)
     978:	a901      	add	r1, sp, #4
     97a:	0028      	movs	r0, r5
     97c:	47a0      	blx	r4
     97e:	2800      	cmp	r0, #0
     980:	d1fa      	bne.n	978 <get_accel_data+0x10>
	STATUS_OK);
	
}
     982:	b005      	add	sp, #20
     984:	bd30      	pop	{r4, r5, pc}
     986:	46c0      	nop			; (mov r8, r8)
     988:	00007dac 	.word	0x00007dac
     98c:	2000029c 	.word	0x2000029c
     990:	0000285d 	.word	0x0000285d

00000994 <write_data>:

// Helper function to just execute a simple write
void write_data(uint8_t *bufferSend, uint8_t length)
{
     994:	b570      	push	{r4, r5, r6, lr}
     996:	b084      	sub	sp, #16
	struct i2c_master_packet packet = {
     998:	ab01      	add	r3, sp, #4
     99a:	225e      	movs	r2, #94	; 0x5e
     99c:	801a      	strh	r2, [r3, #0]
     99e:	8059      	strh	r1, [r3, #2]
     9a0:	9002      	str	r0, [sp, #8]
     9a2:	2200      	movs	r2, #0
     9a4:	721a      	strb	r2, [r3, #8]
     9a6:	725a      	strb	r2, [r3, #9]
     9a8:	729a      	strb	r2, [r3, #10]
		.ten_bit_address = false,
		.high_speed = false,
		.hs_master_code  = 0x0,
	};
	do {
		calc_baud = i2c_master_write_packet_wait(&i2c_master_instance, &packet);
     9aa:	4e05      	ldr	r6, [pc, #20]	; (9c0 <write_data+0x2c>)
     9ac:	4d05      	ldr	r5, [pc, #20]	; (9c4 <write_data+0x30>)
     9ae:	4c06      	ldr	r4, [pc, #24]	; (9c8 <write_data+0x34>)
     9b0:	a901      	add	r1, sp, #4
     9b2:	0030      	movs	r0, r6
     9b4:	47a8      	blx	r5
     9b6:	7020      	strb	r0, [r4, #0]
		
	}
	while (calc_baud != STATUS_OK);
     9b8:	2800      	cmp	r0, #0
     9ba:	d1f9      	bne.n	9b0 <write_data+0x1c>
	
     9bc:	b004      	add	sp, #16
     9be:	bd70      	pop	{r4, r5, r6, pc}
     9c0:	2000029c 	.word	0x2000029c
     9c4:	00002881 	.word	0x00002881
     9c8:	200002c5 	.word	0x200002c5

000009cc <config_accel>:
{
     9cc:	b570      	push	{r4, r5, r6, lr}
     9ce:	b090      	sub	sp, #64	; 0x40
	config->direction  = PORT_PIN_DIR_INPUT;
     9d0:	ad0e      	add	r5, sp, #56	; 0x38
     9d2:	2400      	movs	r4, #0
     9d4:	702c      	strb	r4, [r5, #0]
	config->input_pull = PORT_PIN_PULL_UP;
     9d6:	2301      	movs	r3, #1
     9d8:	706b      	strb	r3, [r5, #1]
	config->powersave  = false;
     9da:	70ac      	strb	r4, [r5, #2]
	port_pin_set_config(PIN_PA23, &config_port_pin);
     9dc:	0029      	movs	r1, r5
     9de:	2017      	movs	r0, #23
     9e0:	4e2c      	ldr	r6, [pc, #176]	; (a94 <config_accel+0xc8>)
     9e2:	47b0      	blx	r6
	port_pin_set_config(PIN_PA22, &config_port_pin);
     9e4:	0029      	movs	r1, r5
     9e6:	2016      	movs	r0, #22
     9e8:	47b0      	blx	r6
static inline void i2c_master_get_config_defaults(
		struct i2c_master_config *const config)
{
	/*Sanity check argument */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
     9ea:	ab01      	add	r3, sp, #4
     9ec:	2264      	movs	r2, #100	; 0x64
     9ee:	9201      	str	r2, [sp, #4]
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
     9f0:	4a29      	ldr	r2, [pc, #164]	; (a98 <config_accel+0xcc>)
     9f2:	9202      	str	r2, [sp, #8]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
     9f4:	9403      	str	r4, [sp, #12]
#endif
	config->generator_source = GCLK_GENERATOR_0;
     9f6:	731c      	strb	r4, [r3, #12]
	config->run_in_standby   = false;
     9f8:	761c      	strb	r4, [r3, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
     9fa:	2201      	movs	r2, #1
     9fc:	4252      	negs	r2, r2
     9fe:	829a      	strh	r2, [r3, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
     a00:	9408      	str	r4, [sp, #32]
	config->pinmux_pad1      = PINMUX_DEFAULT;
     a02:	9409      	str	r4, [sp, #36]	; 0x24
	config->scl_low_timeout  = false;
     a04:	3225      	adds	r2, #37	; 0x25
     a06:	549c      	strb	r4, [r3, r2]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
     a08:	940b      	str	r4, [sp, #44]	; 0x2c
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
     a0a:	3208      	adds	r2, #8
     a0c:	549c      	strb	r4, [r3, r2]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
     a0e:	3201      	adds	r2, #1
     a10:	549c      	strb	r4, [r3, r2]
	config->master_scl_low_extend_timeout  = false;
     a12:	3201      	adds	r2, #1
     a14:	549c      	strb	r4, [r3, r2]
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
     a16:	32a9      	adds	r2, #169	; 0xa9
     a18:	861a      	strh	r2, [r3, #48]	; 0x30
	config_i2c_master.buffer_timeout = 40000;
     a1a:	4a20      	ldr	r2, [pc, #128]	; (a9c <config_accel+0xd0>)
     a1c:	82da      	strh	r2, [r3, #22]
	config_i2c_master.start_hold_time  = I2C_MASTER_START_HOLD_TIME_400NS_800NS;
     a1e:	22c0      	movs	r2, #192	; 0xc0
     a20:	0392      	lsls	r2, r2, #14
     a22:	9205      	str	r2, [sp, #20]
		value = i2c_master_init(&i2c_master_instance, SERCOM4, &config_i2c_master);
     a24:	4e1e      	ldr	r6, [pc, #120]	; (aa0 <config_accel+0xd4>)
     a26:	4d1f      	ldr	r5, [pc, #124]	; (aa4 <config_accel+0xd8>)
     a28:	4c1f      	ldr	r4, [pc, #124]	; (aa8 <config_accel+0xdc>)
     a2a:	aa01      	add	r2, sp, #4
     a2c:	491f      	ldr	r1, [pc, #124]	; (aac <config_accel+0xe0>)
     a2e:	0030      	movs	r0, r6
     a30:	47a8      	blx	r5
     a32:	7020      	strb	r0, [r4, #0]
	while(value != STATUS_OK); 
     a34:	2800      	cmp	r0, #0
     a36:	d1f8      	bne.n	a2a <config_accel+0x5e>
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     a38:	4b19      	ldr	r3, [pc, #100]	; (aa0 <config_accel+0xd4>)
     a3a:	681c      	ldr	r4, [r3, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     a3c:	2207      	movs	r2, #7
     a3e:	69e3      	ldr	r3, [r4, #28]
	while (i2c_master_is_syncing(module)) {
     a40:	421a      	tst	r2, r3
     a42:	d1fc      	bne.n	a3e <config_accel+0x72>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
     a44:	6823      	ldr	r3, [r4, #0]
     a46:	2202      	movs	r2, #2
     a48:	4313      	orrs	r3, r2
     a4a:	6023      	str	r3, [r4, #0]

#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
     a4c:	4d14      	ldr	r5, [pc, #80]	; (aa0 <config_accel+0xd4>)
     a4e:	6828      	ldr	r0, [r5, #0]
     a50:	4b17      	ldr	r3, [pc, #92]	; (ab0 <config_accel+0xe4>)
     a52:	4798      	blx	r3
     a54:	231f      	movs	r3, #31
     a56:	4018      	ands	r0, r3
     a58:	3b1e      	subs	r3, #30
     a5a:	4083      	lsls	r3, r0
     a5c:	4a15      	ldr	r2, [pc, #84]	; (ab4 <config_accel+0xe8>)
     a5e:	6013      	str	r3, [r2, #0]
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     a60:	88e8      	ldrh	r0, [r5, #6]
	uint32_t timeout_counter = 0;
     a62:	2300      	movs	r3, #0
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
     a64:	2110      	movs	r1, #16
     a66:	8b62      	ldrh	r2, [r4, #26]
     a68:	420a      	tst	r2, r1
     a6a:	d104      	bne.n	a76 <config_accel+0xaa>
		timeout_counter++;
     a6c:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     a6e:	4283      	cmp	r3, r0
     a70:	d3f9      	bcc.n	a66 <config_accel+0x9a>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
     a72:	2310      	movs	r3, #16
     a74:	8363      	strh	r3, [r4, #26]
	bufferSend[0] = 0x00000000;
     a76:	a80f      	add	r0, sp, #60	; 0x3c
     a78:	2300      	movs	r3, #0
     a7a:	7003      	strb	r3, [r0, #0]
	bufferSend[1] = 0b00000110;  // set interrupt to push-pull, mode to standby (mode and Ton are both 0), auto-sleep to enable
     a7c:	2206      	movs	r2, #6
     a7e:	7042      	strb	r2, [r0, #1]
	bufferSend[2] = 0b00000000;
     a80:	7083      	strb	r3, [r0, #2]
	bufferSend[3] = 0b00000000;
     a82:	70c3      	strb	r3, [r0, #3]
	write_data(bufferSend, 4);
     a84:	2104      	movs	r1, #4
     a86:	4b0c      	ldr	r3, [pc, #48]	; (ab8 <config_accel+0xec>)
     a88:	4798      	blx	r3
	get_accel_data();
     a8a:	4b0c      	ldr	r3, [pc, #48]	; (abc <config_accel+0xf0>)
     a8c:	4798      	blx	r3
}
     a8e:	b010      	add	sp, #64	; 0x40
     a90:	bd70      	pop	{r4, r5, r6, pc}
     a92:	46c0      	nop			; (mov r8, r8)
     a94:	00002349 	.word	0x00002349
     a98:	00000d48 	.word	0x00000d48
     a9c:	ffff9c40 	.word	0xffff9c40
     aa0:	2000029c 	.word	0x2000029c
     aa4:	00002379 	.word	0x00002379
     aa8:	200002c4 	.word	0x200002c4
     aac:	42001800 	.word	0x42001800
     ab0:	00002d9d 	.word	0x00002d9d
     ab4:	e000e100 	.word	0xe000e100
     ab8:	00000995 	.word	0x00000995
     abc:	00000969 	.word	0x00000969

00000ac0 <delay_init>:
     ac0:	b570      	push	{r4, r5, r6, lr}
     ac2:	2000      	movs	r0, #0
     ac4:	4b08      	ldr	r3, [pc, #32]	; (ae8 <delay_init+0x28>)
     ac6:	4798      	blx	r3
     ac8:	0005      	movs	r5, r0
     aca:	4c08      	ldr	r4, [pc, #32]	; (aec <delay_init+0x2c>)
     acc:	21fa      	movs	r1, #250	; 0xfa
     ace:	0089      	lsls	r1, r1, #2
     ad0:	47a0      	blx	r4
     ad2:	4b07      	ldr	r3, [pc, #28]	; (af0 <delay_init+0x30>)
     ad4:	6018      	str	r0, [r3, #0]
     ad6:	4907      	ldr	r1, [pc, #28]	; (af4 <delay_init+0x34>)
     ad8:	0028      	movs	r0, r5
     ada:	47a0      	blx	r4
     adc:	4b06      	ldr	r3, [pc, #24]	; (af8 <delay_init+0x38>)
     ade:	6018      	str	r0, [r3, #0]
     ae0:	2205      	movs	r2, #5
     ae2:	4b06      	ldr	r3, [pc, #24]	; (afc <delay_init+0x3c>)
     ae4:	601a      	str	r2, [r3, #0]
     ae6:	bd70      	pop	{r4, r5, r6, pc}
     ae8:	00002ebd 	.word	0x00002ebd
     aec:	00005cf9 	.word	0x00005cf9
     af0:	20000004 	.word	0x20000004
     af4:	000f4240 	.word	0x000f4240
     af8:	20000008 	.word	0x20000008
     afc:	e000e010 	.word	0xe000e010

00000b00 <delay_cycles_us>:
     b00:	b530      	push	{r4, r5, lr}
     b02:	4b08      	ldr	r3, [pc, #32]	; (b24 <delay_cycles_us+0x24>)
     b04:	681c      	ldr	r4, [r3, #0]
     b06:	4a08      	ldr	r2, [pc, #32]	; (b28 <delay_cycles_us+0x28>)
     b08:	2500      	movs	r5, #0
     b0a:	2180      	movs	r1, #128	; 0x80
     b0c:	0249      	lsls	r1, r1, #9
     b0e:	3801      	subs	r0, #1
     b10:	d307      	bcc.n	b22 <delay_cycles_us+0x22>
     b12:	2c00      	cmp	r4, #0
     b14:	d0fb      	beq.n	b0e <delay_cycles_us+0xe>
     b16:	6054      	str	r4, [r2, #4]
     b18:	6095      	str	r5, [r2, #8]
     b1a:	6813      	ldr	r3, [r2, #0]
     b1c:	420b      	tst	r3, r1
     b1e:	d0fc      	beq.n	b1a <delay_cycles_us+0x1a>
     b20:	e7f5      	b.n	b0e <delay_cycles_us+0xe>
     b22:	bd30      	pop	{r4, r5, pc}
     b24:	20000008 	.word	0x20000008
     b28:	e000e010 	.word	0xe000e010

00000b2c <read_left_ir>:
	return (port_base->IN.reg & pin_mask);
     b2c:	4b02      	ldr	r3, [pc, #8]	; (b38 <read_left_ir+0xc>)
     b2e:	6a18      	ldr	r0, [r3, #32]
     b30:	0540      	lsls	r0, r0, #21
	
}

uint8_t read_left_ir(void)
{
	return port_pin_get_input_level(OBSTACLE_SENSE);
     b32:	0fc0      	lsrs	r0, r0, #31
}
     b34:	4770      	bx	lr
     b36:	46c0      	nop			; (mov r8, r8)
     b38:	41004480 	.word	0x41004480

00000b3c <read_right_ir>:
     b3c:	4b02      	ldr	r3, [pc, #8]	; (b48 <read_right_ir+0xc>)
     b3e:	6a18      	ldr	r0, [r3, #32]
     b40:	0540      	lsls	r0, r0, #21

uint8_t read_right_ir(void)
{
	return port_pin_get_input_level(OBSTACLE_SENSE);
     b42:	0fc0      	lsrs	r0, r0, #31
}
     b44:	4770      	bx	lr
     b46:	46c0      	nop			; (mov r8, r8)
     b48:	41004480 	.word	0x41004480

00000b4c <config_motors>:
}
//! [setup]


void config_motors(void)
{
     b4c:	b570      	push	{r4, r5, r6, lr}
     b4e:	b0aa      	sub	sp, #168	; 0xa8
	struct tcc_config config_tcc;
	tcc_get_config_defaults(&config_tcc, TCC0);
     b50:	4e17      	ldr	r6, [pc, #92]	; (bb0 <config_motors+0x64>)
     b52:	ac01      	add	r4, sp, #4
     b54:	0031      	movs	r1, r6
     b56:	0020      	movs	r0, r4
     b58:	4b16      	ldr	r3, [pc, #88]	; (bb4 <config_motors+0x68>)
     b5a:	4798      	blx	r3
	config_tcc.counter.clock_prescaler = TCC_CLOCK_PRESCALER_DIV1024;
     b5c:	2307      	movs	r3, #7
     b5e:	72e3      	strb	r3, [r4, #11]
	config_tcc.counter.period = 0x00FF;
     b60:	33f8      	adds	r3, #248	; 0xf8
     b62:	6063      	str	r3, [r4, #4]
	config_tcc.compare.wave_generation = TCC_WAVE_GENERATION_SINGLE_SLOPE_PWM;
     b64:	3bfd      	subs	r3, #253	; 0xfd
     b66:	7623      	strb	r3, [r4, #24]
	config_tcc.compare.wave_polarity[LEFT_MOTOR_CH] = TCC_WAVE_POLARITY_0;
     b68:	2300      	movs	r3, #0
     b6a:	7523      	strb	r3, [r4, #20]
	config_tcc.compare.wave_polarity[RIGHT_MOTOR_CH] = TCC_WAVE_POLARITY_0;
     b6c:	7563      	strb	r3, [r4, #21]
	config_tcc.compare.match[LEFT_MOTOR_CH] = 0;
     b6e:	61e3      	str	r3, [r4, #28]
	config_tcc.pins.enable_wave_out_pin[LEFT_MOTOR_WO] = true;
     b70:	2201      	movs	r2, #1
     b72:	2198      	movs	r1, #152	; 0x98
     b74:	5462      	strb	r2, [r4, r1]
	config_tcc.pins.wave_out_pin[LEFT_MOTOR_WO]        = PIN_PA05E_TCC0_WO1; //this is no longer correct--- should be now
     b76:	3993      	subs	r1, #147	; 0x93
     b78:	65a1      	str	r1, [r4, #88]	; 0x58
	config_tcc.pins.wave_out_pin_mux[LEFT_MOTOR_WO]    = PINMUX_PA05E_TCC0_WO1; // this is no longer correct --- should be now
     b7a:	490f      	ldr	r1, [pc, #60]	; (bb8 <config_motors+0x6c>)
     b7c:	67a1      	str	r1, [r4, #120]	; 0x78
	config_tcc.compare.match[RIGHT_MOTOR_CH] = 0;
     b7e:	6223      	str	r3, [r4, #32]
	config_tcc.pins.enable_wave_out_pin[RIGHT_MOTOR_WO] = true;
     b80:	3399      	adds	r3, #153	; 0x99
     b82:	54e2      	strb	r2, [r4, r3]
    config_tcc.pins.wave_out_pin[RIGHT_MOTOR_WO]        = PIN_PA04E_TCC0_WO0; // this is no longer correct --- should be now
     b84:	3b95      	subs	r3, #149	; 0x95
     b86:	65e3      	str	r3, [r4, #92]	; 0x5c
	config_tcc.pins.wave_out_pin_mux[RIGHT_MOTOR_WO]    = PINMUX_PA04E_TCC0_WO0; // this is no longer correct --- should be now
     b88:	4b0c      	ldr	r3, [pc, #48]	; (bbc <config_motors+0x70>)
     b8a:	67e3      	str	r3, [r4, #124]	; 0x7c
	
	tcc_init(&tcc_instance0, TCC0, &config_tcc);
     b8c:	4d0c      	ldr	r5, [pc, #48]	; (bc0 <config_motors+0x74>)
     b8e:	0022      	movs	r2, r4
     b90:	0031      	movs	r1, r6
     b92:	0028      	movs	r0, r5
     b94:	4b0b      	ldr	r3, [pc, #44]	; (bc4 <config_motors+0x78>)
     b96:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	Tcc *const tcc_module = module_inst->hw;
     b98:	682a      	ldr	r2, [r5, #0]

	while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_ENABLE) {
     b9a:	2102      	movs	r1, #2
     b9c:	6893      	ldr	r3, [r2, #8]
     b9e:	4219      	tst	r1, r3
     ba0:	d1fc      	bne.n	b9c <config_motors+0x50>
		/* Wait for sync */
	}

	/* Enable the TCC module */
	tcc_module->CTRLA.reg |= TCC_CTRLA_ENABLE;
     ba2:	6813      	ldr	r3, [r2, #0]
     ba4:	2102      	movs	r1, #2
     ba6:	430b      	orrs	r3, r1
     ba8:	6013      	str	r3, [r2, #0]
	port_pin_set_output_level(PIN_PA20, true);
	port_pin_set_output_level(PIN_PA21, true);
	motor_enable = false;
	*/
	
}
     baa:	b02a      	add	sp, #168	; 0xa8
     bac:	bd70      	pop	{r4, r5, r6, pc}
     bae:	46c0      	nop			; (mov r8, r8)
     bb0:	42002000 	.word	0x42002000
     bb4:	000031a5 	.word	0x000031a5
     bb8:	00050004 	.word	0x00050004
     bbc:	00040004 	.word	0x00040004
     bc0:	200002c8 	.word	0x200002c8
     bc4:	000032f1 	.word	0x000032f1

00000bc8 <set_motor_left>:


// PWM is on BIN1/BIN2 - PA13 and PA21
// Depending on direction, set other pin to standard output and set it to low
void set_motor_left(uint8_t dir, uint8_t speed)
{
     bc8:	b530      	push	{r4, r5, lr}
     bca:	b083      	sub	sp, #12
     bcc:	0004      	movs	r4, r0
     bce:	000d      	movs	r5, r1
	if(motor_enable == false)
     bd0:	4b1f      	ldr	r3, [pc, #124]	; (c50 <set_motor_left+0x88>)
     bd2:	781b      	ldrb	r3, [r3, #0]
     bd4:	2b00      	cmp	r3, #0
     bd6:	d106      	bne.n	be6 <set_motor_left+0x1e>
		port_base->OUTSET.reg = pin_mask;
     bd8:	2280      	movs	r2, #128	; 0x80
     bda:	0512      	lsls	r2, r2, #20
     bdc:	4b1d      	ldr	r3, [pc, #116]	; (c54 <set_motor_left+0x8c>)
     bde:	619a      	str	r2, [r3, #24]
	{
		// enable the chip
		port_pin_set_output_level(PIN_PA27, true);
		
		// set flag to true
		motor_enable = true;
     be0:	2201      	movs	r2, #1
     be2:	4b1b      	ldr	r3, [pc, #108]	; (c50 <set_motor_left+0x88>)
     be4:	701a      	strb	r2, [r3, #0]
	}
	if(old_left_dir != dir)
     be6:	4b1c      	ldr	r3, [pc, #112]	; (c58 <set_motor_left+0x90>)
     be8:	781b      	ldrb	r3, [r3, #0]
     bea:	42a3      	cmp	r3, r4
     bec:	d017      	beq.n	c1e <set_motor_left+0x56>
	{
		struct system_pinmux_config pin_config;
		struct port_config config_port_pin;
		config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     bee:	2201      	movs	r2, #1
     bf0:	466b      	mov	r3, sp
     bf2:	701a      	strb	r2, [r3, #0]
	config->mux_position = SYSTEM_PINMUX_GPIO;
     bf4:	ab01      	add	r3, sp, #4
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     bf6:	709a      	strb	r2, [r3, #2]
	config->powersave    = false;
     bf8:	2100      	movs	r1, #0
     bfa:	70d9      	strb	r1, [r3, #3]
		system_pinmux_get_config_defaults(&pin_config);
		pin_config.direction = SYSTEM_PINMUX_PIN_DIR_OUTPUT;
     bfc:	705a      	strb	r2, [r3, #1]
		// need to configure PWM with opposite pins
		if(dir == 0)
     bfe:	2c00      	cmp	r4, #0
     c00:	d116      	bne.n	c30 <set_motor_left+0x68>
		{
			pin_config.mux_position = (uint8_t)PINMUX_PA21F_TCC0_WO7;
     c02:	0019      	movs	r1, r3
     c04:	2305      	movs	r3, #5
     c06:	700b      	strb	r3, [r1, #0]
			system_pinmux_pin_set_config(PIN_PA21F_TCC0_WO7, &pin_config);
     c08:	2015      	movs	r0, #21
     c0a:	4b14      	ldr	r3, [pc, #80]	; (c5c <set_motor_left+0x94>)
     c0c:	4798      	blx	r3
			port_pin_set_config(PIN_PA13, &config_port_pin);
     c0e:	4669      	mov	r1, sp
     c10:	200d      	movs	r0, #13
     c12:	4b13      	ldr	r3, [pc, #76]	; (c60 <set_motor_left+0x98>)
     c14:	4798      	blx	r3
     c16:	2280      	movs	r2, #128	; 0x80
     c18:	0192      	lsls	r2, r2, #6
     c1a:	4b0e      	ldr	r3, [pc, #56]	; (c54 <set_motor_left+0x8c>)
     c1c:	619a      	str	r2, [r3, #24]
			system_pinmux_pin_set_config(PIN_PA13F_TCC0_WO7, &pin_config);
			port_pin_set_config(PIN_PA21, &config_port_pin);
			port_pin_set_output_level(PIN_PA21, true);
		}
	}
	tcc_set_compare_value(&tcc_instance0, LEFT_MOTOR_CH, speed);
     c1e:	002a      	movs	r2, r5
     c20:	2100      	movs	r1, #0
     c22:	4810      	ldr	r0, [pc, #64]	; (c64 <set_motor_left+0x9c>)
     c24:	4b10      	ldr	r3, [pc, #64]	; (c68 <set_motor_left+0xa0>)
     c26:	4798      	blx	r3
	//tcc_enable(&tcc_instance0);
	old_left_dir = dir;
     c28:	4b0b      	ldr	r3, [pc, #44]	; (c58 <set_motor_left+0x90>)
     c2a:	701c      	strb	r4, [r3, #0]
}
     c2c:	b003      	add	sp, #12
     c2e:	bd30      	pop	{r4, r5, pc}
			pin_config.mux_position = (uint8_t)PINMUX_PA13F_TCC0_WO7;
     c30:	a901      	add	r1, sp, #4
     c32:	2305      	movs	r3, #5
     c34:	700b      	strb	r3, [r1, #0]
			system_pinmux_pin_set_config(PIN_PA13F_TCC0_WO7, &pin_config);
     c36:	200d      	movs	r0, #13
     c38:	4b08      	ldr	r3, [pc, #32]	; (c5c <set_motor_left+0x94>)
     c3a:	4798      	blx	r3
			port_pin_set_config(PIN_PA21, &config_port_pin);
     c3c:	4669      	mov	r1, sp
     c3e:	2015      	movs	r0, #21
     c40:	4b07      	ldr	r3, [pc, #28]	; (c60 <set_motor_left+0x98>)
     c42:	4798      	blx	r3
     c44:	2280      	movs	r2, #128	; 0x80
     c46:	0392      	lsls	r2, r2, #14
     c48:	4b02      	ldr	r3, [pc, #8]	; (c54 <set_motor_left+0x8c>)
     c4a:	619a      	str	r2, [r3, #24]
     c4c:	e7e7      	b.n	c1e <set_motor_left+0x56>
     c4e:	46c0      	nop			; (mov r8, r8)
     c50:	2000013c 	.word	0x2000013c
     c54:	41004400 	.word	0x41004400
     c58:	2000000c 	.word	0x2000000c
     c5c:	000030cd 	.word	0x000030cd
     c60:	00002349 	.word	0x00002349
     c64:	200002c8 	.word	0x200002c8
     c68:	000036fd 	.word	0x000036fd

00000c6c <set_motor_right>:

// PWM is on AIN1/AIN2 - PA12 and PA20
void set_motor_right(uint8_t dir, uint8_t speed)
{
     c6c:	b530      	push	{r4, r5, lr}
     c6e:	b083      	sub	sp, #12
     c70:	0004      	movs	r4, r0
     c72:	000d      	movs	r5, r1
	if(motor_enable == false)
     c74:	4b1f      	ldr	r3, [pc, #124]	; (cf4 <set_motor_right+0x88>)
     c76:	781b      	ldrb	r3, [r3, #0]
     c78:	2b00      	cmp	r3, #0
     c7a:	d106      	bne.n	c8a <set_motor_right+0x1e>
     c7c:	2280      	movs	r2, #128	; 0x80
     c7e:	0512      	lsls	r2, r2, #20
     c80:	4b1d      	ldr	r3, [pc, #116]	; (cf8 <set_motor_right+0x8c>)
     c82:	619a      	str	r2, [r3, #24]
	{
		// enable the chip
		port_pin_set_output_level(PIN_PA27, true);
		// enable PWM
		// set flag to true
		motor_enable = true;
     c84:	2201      	movs	r2, #1
     c86:	4b1b      	ldr	r3, [pc, #108]	; (cf4 <set_motor_right+0x88>)
     c88:	701a      	strb	r2, [r3, #0]
	}
	if(old_right_dir != dir)
     c8a:	4b1c      	ldr	r3, [pc, #112]	; (cfc <set_motor_right+0x90>)
     c8c:	781b      	ldrb	r3, [r3, #0]
     c8e:	42a3      	cmp	r3, r4
     c90:	d017      	beq.n	cc2 <set_motor_right+0x56>
	{
		struct system_pinmux_config pin_config;
		struct port_config config_port_pin;
		pin_config.direction = SYSTEM_PINMUX_PIN_DIR_OUTPUT;
		config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     c92:	2101      	movs	r1, #1
     c94:	466b      	mov	r3, sp
     c96:	7019      	strb	r1, [r3, #0]
	config->mux_position = SYSTEM_PINMUX_GPIO;
     c98:	ab01      	add	r3, sp, #4
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     c9a:	2200      	movs	r2, #0
     c9c:	705a      	strb	r2, [r3, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     c9e:	7099      	strb	r1, [r3, #2]
	config->powersave    = false;
     ca0:	70da      	strb	r2, [r3, #3]
		system_pinmux_get_config_defaults(&pin_config);
		// need to configure PWM with opposite pins
		if(dir == 0)
     ca2:	2c00      	cmp	r4, #0
     ca4:	d116      	bne.n	cd4 <set_motor_right+0x68>
		{
			pin_config.mux_position = (uint8_t)PINMUX_PA20F_TCC0_WO6;
     ca6:	0019      	movs	r1, r3
     ca8:	2305      	movs	r3, #5
     caa:	700b      	strb	r3, [r1, #0]
			system_pinmux_pin_set_config(PIN_PA20F_TCC0_WO6, &pin_config);
     cac:	2014      	movs	r0, #20
     cae:	4b14      	ldr	r3, [pc, #80]	; (d00 <set_motor_right+0x94>)
     cb0:	4798      	blx	r3
			port_pin_set_config(PIN_PA12, &config_port_pin);
     cb2:	4669      	mov	r1, sp
     cb4:	200c      	movs	r0, #12
     cb6:	4b13      	ldr	r3, [pc, #76]	; (d04 <set_motor_right+0x98>)
     cb8:	4798      	blx	r3
     cba:	2280      	movs	r2, #128	; 0x80
     cbc:	0152      	lsls	r2, r2, #5
     cbe:	4b0e      	ldr	r3, [pc, #56]	; (cf8 <set_motor_right+0x8c>)
     cc0:	619a      	str	r2, [r3, #24]
			system_pinmux_pin_set_config(PIN_PA12F_TCC0_WO6, &pin_config);
			port_pin_set_config(PIN_PA20, &config_port_pin);
			port_pin_set_output_level(PIN_PA20, true);
		}
	}
	tcc_set_compare_value(&tcc_instance0, RIGHT_MOTOR_CH, speed);
     cc2:	002a      	movs	r2, r5
     cc4:	2101      	movs	r1, #1
     cc6:	4810      	ldr	r0, [pc, #64]	; (d08 <set_motor_right+0x9c>)
     cc8:	4b10      	ldr	r3, [pc, #64]	; (d0c <set_motor_right+0xa0>)
     cca:	4798      	blx	r3
	old_right_dir = dir;
     ccc:	4b0b      	ldr	r3, [pc, #44]	; (cfc <set_motor_right+0x90>)
     cce:	701c      	strb	r4, [r3, #0]
}
     cd0:	b003      	add	sp, #12
     cd2:	bd30      	pop	{r4, r5, pc}
			pin_config.mux_position = (uint8_t)PINMUX_PA12F_TCC0_WO6;
     cd4:	a901      	add	r1, sp, #4
     cd6:	2305      	movs	r3, #5
     cd8:	700b      	strb	r3, [r1, #0]
			system_pinmux_pin_set_config(PIN_PA12F_TCC0_WO6, &pin_config);
     cda:	200c      	movs	r0, #12
     cdc:	4b08      	ldr	r3, [pc, #32]	; (d00 <set_motor_right+0x94>)
     cde:	4798      	blx	r3
			port_pin_set_config(PIN_PA20, &config_port_pin);
     ce0:	4669      	mov	r1, sp
     ce2:	2014      	movs	r0, #20
     ce4:	4b07      	ldr	r3, [pc, #28]	; (d04 <set_motor_right+0x98>)
     ce6:	4798      	blx	r3
     ce8:	2280      	movs	r2, #128	; 0x80
     cea:	0352      	lsls	r2, r2, #13
     cec:	4b02      	ldr	r3, [pc, #8]	; (cf8 <set_motor_right+0x8c>)
     cee:	619a      	str	r2, [r3, #24]
     cf0:	e7e7      	b.n	cc2 <set_motor_right+0x56>
     cf2:	46c0      	nop			; (mov r8, r8)
     cf4:	2000013c 	.word	0x2000013c
     cf8:	41004400 	.word	0x41004400
     cfc:	2000000d 	.word	0x2000000d
     d00:	000030cd 	.word	0x000030cd
     d04:	00002349 	.word	0x00002349
     d08:	200002c8 	.word	0x200002c8
     d0c:	000036fd 	.word	0x000036fd

00000d10 <turn_off_motors>:

void turn_off_motors()
{
     d10:	b510      	push	{r4, lr}
	
	// disable the chip to save power - this is no longer an option as we needed the sleep mode i/o pin for something else
	// port_pin_set_output_level(PIN_PA27, false); 
	// Turn PWM to 0, no need to turn everything off
	set_motor_left(1,0);
     d12:	2100      	movs	r1, #0
     d14:	2001      	movs	r0, #1
     d16:	4b05      	ldr	r3, [pc, #20]	; (d2c <turn_off_motors+0x1c>)
     d18:	4798      	blx	r3
	set_motor_right(1,0);
     d1a:	2100      	movs	r1, #0
     d1c:	2001      	movs	r0, #1
     d1e:	4b04      	ldr	r3, [pc, #16]	; (d30 <turn_off_motors+0x20>)
     d20:	4798      	blx	r3
	
	// Set flag to false
	motor_enable = false;
     d22:	2200      	movs	r2, #0
     d24:	4b03      	ldr	r3, [pc, #12]	; (d34 <turn_off_motors+0x24>)
     d26:	701a      	strb	r2, [r3, #0]
     d28:	bd10      	pop	{r4, pc}
     d2a:	46c0      	nop			; (mov r8, r8)
     d2c:	00000bc9 	.word	0x00000bc9
     d30:	00000c6d 	.word	0x00000c6d
     d34:	2000013c 	.word	0x2000013c

00000d38 <TC5_OV_callback>:
	config_tc.count_direction = TC_COUNT_DIRECTION_UP;
	tc_init(&tc_instance5, TC5, &config_tc);
}

void TC5_OV_callback(struct tc_module *const module_inst)
{
     d38:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
     d3a:	4b35      	ldr	r3, [pc, #212]	; (e10 <TC5_OV_callback+0xd8>)
     d3c:	681a      	ldr	r2, [r3, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     d3e:	7bd3      	ldrb	r3, [r2, #15]

	while (tc_is_syncing(module_inst)) {
     d40:	b25b      	sxtb	r3, r3
     d42:	2b00      	cmp	r3, #0
     d44:	dbfb      	blt.n	d3e <TC5_OV_callback+0x6>
		/* Wait for sync */
	}

	/* Write command to execute */
	tc_module->CTRLBSET.reg = TC_CTRLBSET_CMD(TC_CTRLBSET_CMD_STOP_Val);
     d46:	2380      	movs	r3, #128	; 0x80
     d48:	7153      	strb	r3, [r2, #5]
	static uint16_t local_volume = 0; 
	tc_stop_counter(&tc_instance5);
	static bool order= true;
	//port_pin_set_output_level(PIN_PA08,1);
	
	if(update_sound)
     d4a:	4b32      	ldr	r3, [pc, #200]	; (e14 <TC5_OV_callback+0xdc>)
     d4c:	781b      	ldrb	r3, [r3, #0]
     d4e:	2b00      	cmp	r3, #0
     d50:	d010      	beq.n	d74 <TC5_OV_callback+0x3c>
	{
		local_waveform = waveform_type;
     d52:	4b31      	ldr	r3, [pc, #196]	; (e18 <TC5_OV_callback+0xe0>)
     d54:	781a      	ldrb	r2, [r3, #0]
     d56:	4b31      	ldr	r3, [pc, #196]	; (e1c <TC5_OV_callback+0xe4>)
     d58:	701a      	strb	r2, [r3, #0]
		local_count = count_timer;
     d5a:	4b31      	ldr	r3, [pc, #196]	; (e20 <TC5_OV_callback+0xe8>)
     d5c:	881a      	ldrh	r2, [r3, #0]
     d5e:	4b31      	ldr	r3, [pc, #196]	; (e24 <TC5_OV_callback+0xec>)
     d60:	801a      	strh	r2, [r3, #0]
		local_volume = waveform_volume;
     d62:	4b31      	ldr	r3, [pc, #196]	; (e28 <TC5_OV_callback+0xf0>)
     d64:	881a      	ldrh	r2, [r3, #0]
     d66:	4b31      	ldr	r3, [pc, #196]	; (e2c <TC5_OV_callback+0xf4>)
     d68:	801a      	strh	r2, [r3, #0]
		i = 0;  
     d6a:	2300      	movs	r3, #0
     d6c:	4a30      	ldr	r2, [pc, #192]	; (e30 <TC5_OV_callback+0xf8>)
     d6e:	6013      	str	r3, [r2, #0]
		update_sound = false;
     d70:	4a28      	ldr	r2, [pc, #160]	; (e14 <TC5_OV_callback+0xdc>)
     d72:	7013      	strb	r3, [r2, #0]
	}
	dac_chan_write(&dac_instance, DAC_CHANNEL_0, i);
     d74:	4b2e      	ldr	r3, [pc, #184]	; (e30 <TC5_OV_callback+0xf8>)
     d76:	881a      	ldrh	r2, [r3, #0]
     d78:	2100      	movs	r1, #0
     d7a:	482e      	ldr	r0, [pc, #184]	; (e34 <TC5_OV_callback+0xfc>)
     d7c:	4b2e      	ldr	r3, [pc, #184]	; (e38 <TC5_OV_callback+0x100>)
     d7e:	4798      	blx	r3
	
	if (local_waveform == ramp )
     d80:	4b26      	ldr	r3, [pc, #152]	; (e1c <TC5_OV_callback+0xe4>)
     d82:	781b      	ldrb	r3, [r3, #0]
     d84:	2b01      	cmp	r3, #1
     d86:	d015      	beq.n	db4 <TC5_OV_callback+0x7c>
		if(i>= local_volume)
		{
			i=0;
		}
	}
	else if(local_waveform == triangular)
     d88:	2b02      	cmp	r3, #2
     d8a:	d01f      	beq.n	dcc <TC5_OV_callback+0x94>
				i = 0;
				order = true;
			}		
		}
	}
	tc_set_count_value(&tc_instance5, local_count);
     d8c:	4b25      	ldr	r3, [pc, #148]	; (e24 <TC5_OV_callback+0xec>)
     d8e:	8819      	ldrh	r1, [r3, #0]
     d90:	4c1f      	ldr	r4, [pc, #124]	; (e10 <TC5_OV_callback+0xd8>)
     d92:	0020      	movs	r0, r4
     d94:	4b29      	ldr	r3, [pc, #164]	; (e3c <TC5_OV_callback+0x104>)
     d96:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
     d98:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     d9a:	7bd3      	ldrb	r3, [r2, #15]

	while (tc_is_syncing(module_inst)) {
     d9c:	b25b      	sxtb	r3, r3
     d9e:	2b00      	cmp	r3, #0
     da0:	dbfb      	blt.n	d9a <TC5_OV_callback+0x62>
		/* Wait for sync */
	}

	/* Make certain that there are no conflicting commands in the register */
	tc_module->CTRLBCLR.reg = TC_CTRLBCLR_CMD_NONE;
     da2:	2300      	movs	r3, #0
     da4:	7113      	strb	r3, [r2, #4]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     da6:	7bd3      	ldrb	r3, [r2, #15]

	while (tc_is_syncing(module_inst)) {
     da8:	b25b      	sxtb	r3, r3
     daa:	2b00      	cmp	r3, #0
     dac:	dbfb      	blt.n	da6 <TC5_OV_callback+0x6e>
		/* Wait for sync */
	}

	/* Write command to execute */
	tc_module->CTRLBSET.reg = TC_CTRLBSET_CMD(TC_CTRLBSET_CMD_RETRIGGER_Val);
     dae:	2340      	movs	r3, #64	; 0x40
     db0:	7153      	strb	r3, [r2, #5]
//	}
// 	else
//	{
//		i--;
//	}
}
     db2:	bd10      	pop	{r4, pc}
		i = i+30;
     db4:	4a1e      	ldr	r2, [pc, #120]	; (e30 <TC5_OV_callback+0xf8>)
     db6:	6813      	ldr	r3, [r2, #0]
     db8:	331e      	adds	r3, #30
     dba:	6013      	str	r3, [r2, #0]
		if(i>= local_volume)
     dbc:	4a1b      	ldr	r2, [pc, #108]	; (e2c <TC5_OV_callback+0xf4>)
     dbe:	8812      	ldrh	r2, [r2, #0]
     dc0:	4293      	cmp	r3, r2
     dc2:	dbe3      	blt.n	d8c <TC5_OV_callback+0x54>
			i=0;
     dc4:	2200      	movs	r2, #0
     dc6:	4b1a      	ldr	r3, [pc, #104]	; (e30 <TC5_OV_callback+0xf8>)
     dc8:	601a      	str	r2, [r3, #0]
     dca:	e7df      	b.n	d8c <TC5_OV_callback+0x54>
		if(order == true)
     dcc:	4b1c      	ldr	r3, [pc, #112]	; (e40 <TC5_OV_callback+0x108>)
     dce:	781b      	ldrb	r3, [r3, #0]
     dd0:	2b00      	cmp	r3, #0
     dd2:	d00d      	beq.n	df0 <TC5_OV_callback+0xb8>
			i = i + 60;
     dd4:	4a16      	ldr	r2, [pc, #88]	; (e30 <TC5_OV_callback+0xf8>)
     dd6:	6813      	ldr	r3, [r2, #0]
     dd8:	333c      	adds	r3, #60	; 0x3c
     dda:	6013      	str	r3, [r2, #0]
			if(i>= local_volume)
     ddc:	4a13      	ldr	r2, [pc, #76]	; (e2c <TC5_OV_callback+0xf4>)
     dde:	8812      	ldrh	r2, [r2, #0]
     de0:	4293      	cmp	r3, r2
     de2:	dbd3      	blt.n	d8c <TC5_OV_callback+0x54>
				i = local_volume;
     de4:	4b12      	ldr	r3, [pc, #72]	; (e30 <TC5_OV_callback+0xf8>)
     de6:	601a      	str	r2, [r3, #0]
				order = false;
     de8:	2200      	movs	r2, #0
     dea:	4b15      	ldr	r3, [pc, #84]	; (e40 <TC5_OV_callback+0x108>)
     dec:	701a      	strb	r2, [r3, #0]
     dee:	e7cd      	b.n	d8c <TC5_OV_callback+0x54>
			i = i - 60;
     df0:	4b0f      	ldr	r3, [pc, #60]	; (e30 <TC5_OV_callback+0xf8>)
     df2:	681b      	ldr	r3, [r3, #0]
     df4:	3b3c      	subs	r3, #60	; 0x3c
			if(i<=0)
     df6:	2b00      	cmp	r3, #0
     df8:	dd02      	ble.n	e00 <TC5_OV_callback+0xc8>
			i = i - 60;
     dfa:	4a0d      	ldr	r2, [pc, #52]	; (e30 <TC5_OV_callback+0xf8>)
     dfc:	6013      	str	r3, [r2, #0]
     dfe:	e7c5      	b.n	d8c <TC5_OV_callback+0x54>
				i = 0;
     e00:	2200      	movs	r2, #0
     e02:	4b0b      	ldr	r3, [pc, #44]	; (e30 <TC5_OV_callback+0xf8>)
     e04:	601a      	str	r2, [r3, #0]
				order = true;
     e06:	3201      	adds	r2, #1
     e08:	4b0d      	ldr	r3, [pc, #52]	; (e40 <TC5_OV_callback+0x108>)
     e0a:	701a      	strb	r2, [r3, #0]
     e0c:	e7be      	b.n	d8c <TC5_OV_callback+0x54>
     e0e:	46c0      	nop			; (mov r8, r8)
     e10:	20000348 	.word	0x20000348
     e14:	20000145 	.word	0x20000145
     e18:	20000018 	.word	0x20000018
     e1c:	20000144 	.word	0x20000144
     e20:	2000013e 	.word	0x2000013e
     e24:	20000140 	.word	0x20000140
     e28:	2000001a 	.word	0x2000001a
     e2c:	20000142 	.word	0x20000142
     e30:	20000010 	.word	0x20000010
     e34:	20000364 	.word	0x20000364
     e38:	00002171 	.word	0x00002171
     e3c:	00003ad1 	.word	0x00003ad1
     e40:	20000014 	.word	0x20000014

00000e44 <configure_dac>:
{
     e44:	b500      	push	{lr}
     e46:	b083      	sub	sp, #12
	dac_get_config_defaults(&config_dac);
     e48:	4668      	mov	r0, sp
     e4a:	4b05      	ldr	r3, [pc, #20]	; (e60 <configure_dac+0x1c>)
     e4c:	4798      	blx	r3
	config_dac.reference = DAC_REFERENCE_AVCC;
     e4e:	2340      	movs	r3, #64	; 0x40
     e50:	466a      	mov	r2, sp
     e52:	7013      	strb	r3, [r2, #0]
	dac_init(&dac_instance, DAC, &config_dac);
     e54:	4903      	ldr	r1, [pc, #12]	; (e64 <configure_dac+0x20>)
     e56:	4804      	ldr	r0, [pc, #16]	; (e68 <configure_dac+0x24>)
     e58:	4b04      	ldr	r3, [pc, #16]	; (e6c <configure_dac+0x28>)
     e5a:	4798      	blx	r3
}
     e5c:	b003      	add	sp, #12
     e5e:	bd00      	pop	{pc}
     e60:	00002059 	.word	0x00002059
     e64:	42004800 	.word	0x42004800
     e68:	20000364 	.word	0x20000364
     e6c:	0000206d 	.word	0x0000206d

00000e70 <configure_dac_channel>:
{
     e70:	b510      	push	{r4, lr}
     e72:	b082      	sub	sp, #8
	dac_chan_get_config_defaults(&config_dac_chan);
     e74:	a801      	add	r0, sp, #4
     e76:	4b07      	ldr	r3, [pc, #28]	; (e94 <configure_dac_channel+0x24>)
     e78:	4798      	blx	r3
	dac_chan_set_config(&dac_instance, DAC_CHANNEL_0, &config_dac_chan);
     e7a:	4c07      	ldr	r4, [pc, #28]	; (e98 <configure_dac_channel+0x28>)
     e7c:	aa01      	add	r2, sp, #4
     e7e:	2100      	movs	r1, #0
     e80:	0020      	movs	r0, r4
     e82:	4b06      	ldr	r3, [pc, #24]	; (e9c <configure_dac_channel+0x2c>)
     e84:	4798      	blx	r3
	dac_chan_enable(&dac_instance, DAC_CHANNEL_0);
     e86:	2100      	movs	r1, #0
     e88:	0020      	movs	r0, r4
     e8a:	4b05      	ldr	r3, [pc, #20]	; (ea0 <configure_dac_channel+0x30>)
     e8c:	4798      	blx	r3
}
     e8e:	b002      	add	sp, #8
     e90:	bd10      	pop	{r4, pc}
     e92:	46c0      	nop			; (mov r8, r8)
     e94:	00002169 	.word	0x00002169
     e98:	20000364 	.word	0x20000364
     e9c:	0000216b 	.word	0x0000216b
     ea0:	0000216d 	.word	0x0000216d

00000ea4 <configure_buzzer_pins>:
{
     ea4:	b500      	push	{lr}
     ea6:	b083      	sub	sp, #12
	config->input_pull = PORT_PIN_PULL_UP;
     ea8:	a901      	add	r1, sp, #4
     eaa:	2301      	movs	r3, #1
     eac:	704b      	strb	r3, [r1, #1]
	config->powersave  = false;
     eae:	2200      	movs	r2, #0
     eb0:	708a      	strb	r2, [r1, #2]
	config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     eb2:	700b      	strb	r3, [r1, #0]
	port_pin_set_config(AUDIO_SDB, &config_port_pin);
     eb4:	2037      	movs	r0, #55	; 0x37
     eb6:	4b02      	ldr	r3, [pc, #8]	; (ec0 <configure_buzzer_pins+0x1c>)
     eb8:	4798      	blx	r3
}
     eba:	b003      	add	sp, #12
     ebc:	bd00      	pop	{pc}
     ebe:	46c0      	nop			; (mov r8, r8)
     ec0:	00002349 	.word	0x00002349

00000ec4 <calculate_initial_count>:
{
     ec4:	b510      	push	{r4, lr}
	count_timer = OPTIMIZE_COUNT/waveform_frequency;
     ec6:	4b04      	ldr	r3, [pc, #16]	; (ed8 <calculate_initial_count+0x14>)
     ec8:	8819      	ldrh	r1, [r3, #0]
     eca:	4804      	ldr	r0, [pc, #16]	; (edc <calculate_initial_count+0x18>)
     ecc:	4b04      	ldr	r3, [pc, #16]	; (ee0 <calculate_initial_count+0x1c>)
     ece:	4798      	blx	r3
	count_timer = MAX_COUNT_VALUE - count_timer; 
     ed0:	43c0      	mvns	r0, r0
     ed2:	4b04      	ldr	r3, [pc, #16]	; (ee4 <calculate_initial_count+0x20>)
     ed4:	8018      	strh	r0, [r3, #0]
}
     ed6:	bd10      	pop	{r4, pc}
     ed8:	20000016 	.word	0x20000016
     edc:	0000562a 	.word	0x0000562a
     ee0:	00005cf9 	.word	0x00005cf9
     ee4:	2000013e 	.word	0x2000013e

00000ee8 <disable_TC5_callback>:
	else if (callback_type == TC_CALLBACK_CC_CHANNEL1) {
		module->hw->COUNT8.INTENCLR.reg = TC_INTFLAG_MC(2);
		module->enable_callback_mask &= ~TC_INTFLAG_MC(2);
	}
	else {
		module->hw->COUNT8.INTENCLR.reg = (1 << callback_type);
     ee8:	4b03      	ldr	r3, [pc, #12]	; (ef8 <disable_TC5_callback+0x10>)
     eea:	2101      	movs	r1, #1
     eec:	681a      	ldr	r2, [r3, #0]
     eee:	7311      	strb	r1, [r2, #12]
		module->enable_callback_mask &= ~(1 << callback_type);
     ef0:	7e5a      	ldrb	r2, [r3, #25]
     ef2:	438a      	bics	r2, r1
     ef4:	765a      	strb	r2, [r3, #25]
}
     ef6:	4770      	bx	lr
     ef8:	20000348 	.word	0x20000348

00000efc <disable_speaker>:
{
     efc:	b510      	push	{r4, lr}
	disable_TC5_callback();
     efe:	4b03      	ldr	r3, [pc, #12]	; (f0c <disable_speaker+0x10>)
     f00:	4798      	blx	r3
		port_base->OUTCLR.reg = pin_mask;
     f02:	2280      	movs	r2, #128	; 0x80
     f04:	0412      	lsls	r2, r2, #16
     f06:	4b02      	ldr	r3, [pc, #8]	; (f10 <disable_speaker+0x14>)
     f08:	615a      	str	r2, [r3, #20]
}
     f0a:	bd10      	pop	{r4, pc}
     f0c:	00000ee9 	.word	0x00000ee9
     f10:	41004480 	.word	0x41004480

00000f14 <configure_tc5>:
{
     f14:	b500      	push	{lr}
     f16:	b08f      	sub	sp, #60	; 0x3c
	config->clock_source               = GCLK_GENERATOR_0;
     f18:	aa01      	add	r2, sp, #4
     f1a:	2300      	movs	r3, #0
     f1c:	2100      	movs	r1, #0
     f1e:	7013      	strb	r3, [r2, #0]
	config->counter_size               = TC_COUNTER_SIZE_16BIT;
     f20:	7093      	strb	r3, [r2, #2]
	config->wave_generation            = TC_WAVE_GENERATION_NORMAL_FREQ;
     f22:	7193      	strb	r3, [r2, #6]
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
     f24:	8113      	strh	r3, [r2, #8]
	config->run_in_standby             = false;
     f26:	2000      	movs	r0, #0
     f28:	7050      	strb	r0, [r2, #1]
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
     f2a:	7291      	strb	r1, [r2, #10]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
     f2c:	72d1      	strb	r1, [r2, #11]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
     f2e:	7311      	strb	r1, [r2, #12]
	config->count_direction            = TC_COUNT_DIRECTION_UP;
     f30:	7391      	strb	r1, [r2, #14]
	config->oneshot                    = false;
     f32:	7351      	strb	r1, [r2, #13]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = false;
     f34:	7411      	strb	r1, [r2, #16]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_out = 0;
     f36:	6153      	str	r3, [r2, #20]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_mux = 0;
     f38:	6193      	str	r3, [r2, #24]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
     f3a:	7711      	strb	r1, [r2, #28]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
     f3c:	6213      	str	r3, [r2, #32]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;
     f3e:	6253      	str	r3, [r2, #36]	; 0x24
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
     f40:	8553      	strh	r3, [r2, #42]	; 0x2a
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
     f42:	8593      	strh	r3, [r2, #44]	; 0x2c
	config_tc.clock_prescaler = TC_CLOCK_PRESCALER_DIV64; //64
     f44:	23a0      	movs	r3, #160	; 0xa0
     f46:	00db      	lsls	r3, r3, #3
     f48:	8093      	strh	r3, [r2, #4]
	config_tc.counter_16_bit.value =  0xA9D5; // 1KHz ramp waveform
     f4a:	4b04      	ldr	r3, [pc, #16]	; (f5c <configure_tc5+0x48>)
     f4c:	8513      	strh	r3, [r2, #40]	; 0x28
	tc_init(&tc_instance5, TC5, &config_tc);
     f4e:	4904      	ldr	r1, [pc, #16]	; (f60 <configure_tc5+0x4c>)
     f50:	4804      	ldr	r0, [pc, #16]	; (f64 <configure_tc5+0x50>)
     f52:	4b05      	ldr	r3, [pc, #20]	; (f68 <configure_tc5+0x54>)
     f54:	4798      	blx	r3
}
     f56:	b00f      	add	sp, #60	; 0x3c
     f58:	bd00      	pop	{pc}
     f5a:	46c0      	nop			; (mov r8, r8)
     f5c:	ffffa9d5 	.word	0xffffa9d5
     f60:	42003400 	.word	0x42003400
     f64:	20000348 	.word	0x20000348
     f68:	00003895 	.word	0x00003895

00000f6c <configure_TC5_callback>:

void configure_TC5_callback()
{
     f6c:	b510      	push	{r4, lr}
	tc_register_callback(&tc_instance5, TC5_OV_callback,TC_CALLBACK_OVERFLOW);
     f6e:	4c0c      	ldr	r4, [pc, #48]	; (fa0 <configure_TC5_callback+0x34>)
     f70:	2200      	movs	r2, #0
     f72:	490c      	ldr	r1, [pc, #48]	; (fa4 <configure_TC5_callback+0x38>)
     f74:	0020      	movs	r0, r4
     f76:	4b0c      	ldr	r3, [pc, #48]	; (fa8 <configure_TC5_callback+0x3c>)
     f78:	4798      	blx	r3
	system_interrupt_enable(_tc_interrupt_get_interrupt_vector(_tc_get_inst_index(module->hw)));
     f7a:	6820      	ldr	r0, [r4, #0]
     f7c:	4b0b      	ldr	r3, [pc, #44]	; (fac <configure_TC5_callback+0x40>)
     f7e:	4798      	blx	r3
	return (enum system_interrupt_vector)tc_interrupt_vectors[inst_num];
     f80:	4b0b      	ldr	r3, [pc, #44]	; (fb0 <configure_TC5_callback+0x44>)
     f82:	5c1a      	ldrb	r2, [r3, r0]
     f84:	231f      	movs	r3, #31
     f86:	4013      	ands	r3, r2
     f88:	2201      	movs	r2, #1
     f8a:	0011      	movs	r1, r2
     f8c:	4099      	lsls	r1, r3
     f8e:	4b09      	ldr	r3, [pc, #36]	; (fb4 <configure_TC5_callback+0x48>)
     f90:	6019      	str	r1, [r3, #0]
		module->enable_callback_mask |= (1 << callback_type);
     f92:	7e63      	ldrb	r3, [r4, #25]
     f94:	2101      	movs	r1, #1
     f96:	430b      	orrs	r3, r1
     f98:	7663      	strb	r3, [r4, #25]
		module->hw->COUNT8.INTENSET.reg = (1 << callback_type);
     f9a:	6823      	ldr	r3, [r4, #0]
     f9c:	735a      	strb	r2, [r3, #13]
	tc_enable_callback(&tc_instance5, TC_CALLBACK_OVERFLOW);
}
     f9e:	bd10      	pop	{r4, pc}
     fa0:	20000348 	.word	0x20000348
     fa4:	00000d39 	.word	0x00000d39
     fa8:	00003789 	.word	0x00003789
     fac:	0000385d 	.word	0x0000385d
     fb0:	00007db8 	.word	0x00007db8
     fb4:	e000e100 	.word	0xe000e100

00000fb8 <enable_speaker>:
	configure_TC5_callback();
}


void enable_speaker()
{
     fb8:	b510      	push	{r4, lr}
	configure_TC5_callback();
     fba:	4b0a      	ldr	r3, [pc, #40]	; (fe4 <enable_speaker+0x2c>)
     fbc:	4798      	blx	r3
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
     fbe:	4b0a      	ldr	r3, [pc, #40]	; (fe8 <enable_speaker+0x30>)
     fc0:	681a      	ldr	r2, [r3, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     fc2:	7bd3      	ldrb	r3, [r2, #15]
	while (tc_is_syncing(module_inst)) {
     fc4:	b25b      	sxtb	r3, r3
     fc6:	2b00      	cmp	r3, #0
     fc8:	dbfb      	blt.n	fc2 <enable_speaker+0xa>
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
     fca:	8813      	ldrh	r3, [r2, #0]
     fcc:	2102      	movs	r1, #2
     fce:	430b      	orrs	r3, r1
     fd0:	8013      	strh	r3, [r2, #0]
	
	configure_dac_callbacks();
	tc_enable(&tc_instance5);
	dac_enable(&dac_instance);
     fd2:	4806      	ldr	r0, [pc, #24]	; (fec <enable_speaker+0x34>)
     fd4:	4b06      	ldr	r3, [pc, #24]	; (ff0 <enable_speaker+0x38>)
     fd6:	4798      	blx	r3
		port_base->OUTSET.reg = pin_mask;
     fd8:	2280      	movs	r2, #128	; 0x80
     fda:	0412      	lsls	r2, r2, #16
     fdc:	4b05      	ldr	r3, [pc, #20]	; (ff4 <enable_speaker+0x3c>)
     fde:	619a      	str	r2, [r3, #24]
	port_pin_set_output_level(AUDIO_SDB, true);
	
}
     fe0:	bd10      	pop	{r4, pc}
     fe2:	46c0      	nop			; (mov r8, r8)
     fe4:	00000f6d 	.word	0x00000f6d
     fe8:	20000348 	.word	0x20000348
     fec:	20000364 	.word	0x20000364
     ff0:	0000212d 	.word	0x0000212d
     ff4:	41004480 	.word	0x41004480

00000ff8 <write_sound>:
{
     ff8:	b510      	push	{r4, lr}
	waveform_frequency = waveform_frequency_temp;
     ffa:	4b0b      	ldr	r3, [pc, #44]	; (1028 <write_sound+0x30>)
     ffc:	8019      	strh	r1, [r3, #0]
	waveform_type = waveform_type_temp;
     ffe:	4b0b      	ldr	r3, [pc, #44]	; (102c <write_sound+0x34>)
    1000:	7018      	strb	r0, [r3, #0]
	waveform_volume = waveform_volume_temp;
    1002:	4b0b      	ldr	r3, [pc, #44]	; (1030 <write_sound+0x38>)
    1004:	801a      	strh	r2, [r3, #0]
	if((waveform_frequency > 0) && (waveform_volume > 0))
    1006:	2900      	cmp	r1, #0
    1008:	d001      	beq.n	100e <write_sound+0x16>
    100a:	2a00      	cmp	r2, #0
    100c:	d102      	bne.n	1014 <write_sound+0x1c>
		disable_speaker();
    100e:	4b09      	ldr	r3, [pc, #36]	; (1034 <write_sound+0x3c>)
    1010:	4798      	blx	r3
}
    1012:	bd10      	pop	{r4, pc}
		 update_sound = true;
    1014:	2201      	movs	r2, #1
    1016:	4b08      	ldr	r3, [pc, #32]	; (1038 <write_sound+0x40>)
    1018:	701a      	strb	r2, [r3, #0]
		 calculate_initial_count(waveform_frequency_temp);
    101a:	0008      	movs	r0, r1
    101c:	4b07      	ldr	r3, [pc, #28]	; (103c <write_sound+0x44>)
    101e:	4798      	blx	r3
		 enable_speaker();	
    1020:	4b07      	ldr	r3, [pc, #28]	; (1040 <write_sound+0x48>)
    1022:	4798      	blx	r3
    1024:	e7f5      	b.n	1012 <write_sound+0x1a>
    1026:	46c0      	nop			; (mov r8, r8)
    1028:	20000016 	.word	0x20000016
    102c:	20000018 	.word	0x20000018
    1030:	2000001a 	.word	0x2000001a
    1034:	00000efd 	.word	0x00000efd
    1038:	20000145 	.word	0x20000145
    103c:	00000ec5 	.word	0x00000ec5
    1040:	00000fb9 	.word	0x00000fb9

00001044 <configure_buzzer_modules>:
void configure_buzzer_modules()
{
    1044:	b510      	push	{r4, lr}
	configure_dac();
    1046:	4b03      	ldr	r3, [pc, #12]	; (1054 <configure_buzzer_modules+0x10>)
    1048:	4798      	blx	r3
	configure_dac_channel();
    104a:	4b03      	ldr	r3, [pc, #12]	; (1058 <configure_buzzer_modules+0x14>)
    104c:	4798      	blx	r3
	configure_tc5();
    104e:	4b03      	ldr	r3, [pc, #12]	; (105c <configure_buzzer_modules+0x18>)
    1050:	4798      	blx	r3
}
    1052:	bd10      	pop	{r4, pc}
    1054:	00000e45 	.word	0x00000e45
    1058:	00000e71 	.word	0x00000e71
    105c:	00000f15 	.word	0x00000f15

00001060 <configure_buzzer>:
void configure_buzzer()
{
    1060:	b510      	push	{r4, lr}
	configure_buzzer_pins();
    1062:	4b02      	ldr	r3, [pc, #8]	; (106c <configure_buzzer+0xc>)
    1064:	4798      	blx	r3
	configure_buzzer_modules();
    1066:	4b02      	ldr	r3, [pc, #8]	; (1070 <configure_buzzer+0x10>)
    1068:	4798      	blx	r3
	//enable_speaker();	
    106a:	bd10      	pop	{r4, pc}
    106c:	00000ea5 	.word	0x00000ea5
    1070:	00001045 	.word	0x00001045

00001074 <ui_init>:

void ui_init(void)
{
	/* Initialize LEDs */
	//LED_On(LED_0_PIN);
}
    1074:	4770      	bx	lr

00001076 <ui_powerdown>:

void ui_powerdown(void)
{
	//LED_Off(LED_0_PIN);
}
    1076:	4770      	bx	lr

00001078 <ui_wakeup_enable>:


void ui_wakeup_enable(void)
{

}
    1078:	4770      	bx	lr

0000107a <ui_wakeup_disable>:

void ui_wakeup_disable(void)
{

}
    107a:	4770      	bx	lr

0000107c <ui_wakeup>:

void ui_wakeup(void)
{
	//LED_On(LED_0_PIN);
}
    107c:	4770      	bx	lr

0000107e <ui_process>:
	if (b_btn_state != btn0_last_state) {
		ui_hid_report[0] = b_btn_state;
		udi_hid_generic_send_report_in(ui_hid_report);
		btn0_last_state = b_btn_state;
	}*/
}
    107e:	4770      	bx	lr

00001080 <ui_handle_report>:

void ui_handle_report(uint8_t *report)
{
    1080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1082:	0004      	movs	r4, r0
	uint16_t buzz_volume;

	char* echo_distance;
	
	int i;
	count++;
    1084:	4b58      	ldr	r3, [pc, #352]	; (11e8 <ui_handle_report+0x168>)
    1086:	681b      	ldr	r3, [r3, #0]
    1088:	3301      	adds	r3, #1
	if(count > 255)
    108a:	2bff      	cmp	r3, #255	; 0xff
    108c:	dc0a      	bgt.n	10a4 <ui_handle_report+0x24>
	count++;
    108e:	4a56      	ldr	r2, [pc, #344]	; (11e8 <ui_handle_report+0x168>)
    1090:	6013      	str	r3, [r2, #0]
		count = 0;
		

	// HID Reports are 8 bytes long. The first byte specifies the function of that report (set motors, get light sensor values, etc).
	switch(report[0]) {
    1092:	7823      	ldrb	r3, [r4, #0]
    1094:	3b41      	subs	r3, #65	; 0x41
    1096:	b2da      	uxtb	r2, r3
    1098:	2a39      	cmp	r2, #57	; 0x39
    109a:	d814      	bhi.n	10c6 <ui_handle_report+0x46>
    109c:	0093      	lsls	r3, r2, #2
    109e:	4a53      	ldr	r2, [pc, #332]	; (11ec <ui_handle_report+0x16c>)
    10a0:	58d3      	ldr	r3, [r2, r3]
    10a2:	469f      	mov	pc, r3
		count = 0;
    10a4:	2200      	movs	r2, #0
    10a6:	4b50      	ldr	r3, [pc, #320]	; (11e8 <ui_handle_report+0x168>)
    10a8:	601a      	str	r2, [r3, #0]
    10aa:	e7f2      	b.n	1092 <ui_handle_report+0x12>
		// If O, set the LED using bytes 1-3 of the HID report
		// ASCII value for O --
		case 'O':
			red = report[1];
    10ac:	7865      	ldrb	r5, [r4, #1]
			green = report[2];
    10ae:	78a6      	ldrb	r6, [r4, #2]
			blue = report[3];
    10b0:	78e7      	ldrb	r7, [r4, #3]
			set_led_left_new(red, green, blue);
    10b2:	003a      	movs	r2, r7
    10b4:	0031      	movs	r1, r6
    10b6:	0028      	movs	r0, r5
    10b8:	4b4d      	ldr	r3, [pc, #308]	; (11f0 <ui_handle_report+0x170>)
    10ba:	4798      	blx	r3
			set_led_right_new(red, green, blue);
    10bc:	003a      	movs	r2, r7
    10be:	0031      	movs	r1, r6
    10c0:	0028      	movs	r0, r5
    10c2:	4b4c      	ldr	r3, [pc, #304]	; (11f4 <ui_handle_report+0x174>)
    10c4:	4798      	blx	r3
		//exit_count = 0;
		break;
		default:
		break;
	}
	report[0] = 0x00;
    10c6:	2300      	movs	r3, #0
    10c8:	7023      	strb	r3, [r4, #0]
	// Sets last byte of outgoing report to last byte of incoming report so an outgoing report can be matched to its incoming request
	ui_hid_report[7]= report[7];
    10ca:	79e3      	ldrb	r3, [r4, #7]
    10cc:	484a      	ldr	r0, [pc, #296]	; (11f8 <ui_handle_report+0x178>)
    10ce:	71c3      	strb	r3, [r0, #7]
	udi_hid_generic_send_report_in(ui_hid_report);
    10d0:	4b4a      	ldr	r3, [pc, #296]	; (11fc <ui_handle_report+0x17c>)
    10d2:	4798      	blx	r3
			case '1':
			ui_b_led_blink = true;
			break;
		}
	}*/
}
    10d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			ui_hid_report[0] = adc_start_read_result(LEFT_LIGHT);
    10d6:	200b      	movs	r0, #11
    10d8:	4e49      	ldr	r6, [pc, #292]	; (1200 <ui_handle_report+0x180>)
    10da:	47b0      	blx	r6
    10dc:	4d46      	ldr	r5, [pc, #280]	; (11f8 <ui_handle_report+0x178>)
    10de:	7028      	strb	r0, [r5, #0]
			ui_hid_report[1] = adc_start_read_result(RIGHT_LIGHT);
    10e0:	2003      	movs	r0, #3
    10e2:	47b0      	blx	r6
    10e4:	7068      	strb	r0, [r5, #1]
		break;
    10e6:	e7ee      	b.n	10c6 <ui_handle_report+0x46>
static inline void system_voltage_reference_enable(
		const enum system_voltage_reference vref)
{
	switch (vref) {
		case SYSTEM_VOLTAGE_REFERENCE_TEMPSENSE:
			SYSCTRL->VREF.reg |= SYSCTRL_VREF_TSEN;
    10e8:	4a46      	ldr	r2, [pc, #280]	; (1204 <ui_handle_report+0x184>)
    10ea:	6c13      	ldr	r3, [r2, #64]	; 0x40
    10ec:	2102      	movs	r1, #2
    10ee:	430b      	orrs	r3, r1
    10f0:	6413      	str	r3, [r2, #64]	; 0x40
			configure_adc_temp();
    10f2:	4b45      	ldr	r3, [pc, #276]	; (1208 <ui_handle_report+0x188>)
    10f4:	4798      	blx	r3
			load_calibration_data();
    10f6:	4b45      	ldr	r3, [pc, #276]	; (120c <ui_handle_report+0x18c>)
    10f8:	4798      	blx	r3
			ui_hid_report[0] = calculate_temperature(adc_start_read_result(ADC_POSITIVE_INPUT_TEMP));
    10fa:	2018      	movs	r0, #24
    10fc:	4b40      	ldr	r3, [pc, #256]	; (1200 <ui_handle_report+0x180>)
    10fe:	4798      	blx	r3
    1100:	b280      	uxth	r0, r0
    1102:	4b43      	ldr	r3, [pc, #268]	; (1210 <ui_handle_report+0x190>)
    1104:	4798      	blx	r3
    1106:	4b43      	ldr	r3, [pc, #268]	; (1214 <ui_handle_report+0x194>)
    1108:	4798      	blx	r3
    110a:	4b3b      	ldr	r3, [pc, #236]	; (11f8 <ui_handle_report+0x178>)
    110c:	7018      	strb	r0, [r3, #0]
			configure_adc();
    110e:	4b42      	ldr	r3, [pc, #264]	; (1218 <ui_handle_report+0x198>)
    1110:	4798      	blx	r3
		break;
    1112:	e7d8      	b.n	10c6 <ui_handle_report+0x46>
		if(report[2] == 0 && report[4] == 0)
    1114:	78a3      	ldrb	r3, [r4, #2]
    1116:	2b00      	cmp	r3, #0
    1118:	d102      	bne.n	1120 <ui_handle_report+0xa0>
    111a:	7923      	ldrb	r3, [r4, #4]
    111c:	2b00      	cmp	r3, #0
    111e:	d008      	beq.n	1132 <ui_handle_report+0xb2>
		set_motor_left(report[1], report[2]); // directions and speed are inputs
    1120:	78a1      	ldrb	r1, [r4, #2]
    1122:	7860      	ldrb	r0, [r4, #1]
    1124:	4b3d      	ldr	r3, [pc, #244]	; (121c <ui_handle_report+0x19c>)
    1126:	4798      	blx	r3
		set_motor_right(report[3], report[4]);
    1128:	7921      	ldrb	r1, [r4, #4]
    112a:	78e0      	ldrb	r0, [r4, #3]
    112c:	4b3c      	ldr	r3, [pc, #240]	; (1220 <ui_handle_report+0x1a0>)
    112e:	4798      	blx	r3
		break;
    1130:	e7c9      	b.n	10c6 <ui_handle_report+0x46>
			turn_off_motors();
    1132:	4b3c      	ldr	r3, [pc, #240]	; (1224 <ui_handle_report+0x1a4>)
    1134:	4798      	blx	r3
    1136:	e7f3      	b.n	1120 <ui_handle_report+0xa0>
		buzz_volume    =  (report[4]<<8) + report[5];
    1138:	7923      	ldrb	r3, [r4, #4]
    113a:	021b      	lsls	r3, r3, #8
    113c:	7962      	ldrb	r2, [r4, #5]
    113e:	18d2      	adds	r2, r2, r3
		write_sound(buzz_type,buzz_frequency,buzz_volume);
    1140:	b292      	uxth	r2, r2
		buzz_frequency =  (report[2]<<8) + report[3];
    1142:	78a3      	ldrb	r3, [r4, #2]
    1144:	021b      	lsls	r3, r3, #8
    1146:	78e1      	ldrb	r1, [r4, #3]
    1148:	18c9      	adds	r1, r1, r3
		write_sound(buzz_type,buzz_frequency,buzz_volume);
    114a:	b289      	uxth	r1, r1
    114c:	7860      	ldrb	r0, [r4, #1]
    114e:	4b36      	ldr	r3, [pc, #216]	; (1228 <ui_handle_report+0x1a8>)
    1150:	4798      	blx	r3
		break;
    1152:	e7b8      	b.n	10c6 <ui_handle_report+0x46>
		get_accel_data();
    1154:	4b35      	ldr	r3, [pc, #212]	; (122c <ui_handle_report+0x1ac>)
    1156:	4798      	blx	r3
		while((bufferReceive[0] & 0b01000000) | (bufferReceive[1] & 0b01000000) | (bufferReceive[2] & 0b01000000) | (bufferReceive[3] & 0b01000000)) {
    1158:	4a35      	ldr	r2, [pc, #212]	; (1230 <ui_handle_report+0x1b0>)
    115a:	7813      	ldrb	r3, [r2, #0]
    115c:	7851      	ldrb	r1, [r2, #1]
    115e:	430b      	orrs	r3, r1
    1160:	7891      	ldrb	r1, [r2, #2]
    1162:	430b      	orrs	r3, r1
    1164:	78d2      	ldrb	r2, [r2, #3]
    1166:	4313      	orrs	r3, r2
    1168:	065b      	lsls	r3, r3, #25
    116a:	d50c      	bpl.n	1186 <ui_handle_report+0x106>
			get_accel_data();
    116c:	4f2f      	ldr	r7, [pc, #188]	; (122c <ui_handle_report+0x1ac>)
		while((bufferReceive[0] & 0b01000000) | (bufferReceive[1] & 0b01000000) | (bufferReceive[2] & 0b01000000) | (bufferReceive[3] & 0b01000000)) {
    116e:	4d30      	ldr	r5, [pc, #192]	; (1230 <ui_handle_report+0x1b0>)
    1170:	2640      	movs	r6, #64	; 0x40
			get_accel_data();
    1172:	47b8      	blx	r7
		while((bufferReceive[0] & 0b01000000) | (bufferReceive[1] & 0b01000000) | (bufferReceive[2] & 0b01000000) | (bufferReceive[3] & 0b01000000)) {
    1174:	782b      	ldrb	r3, [r5, #0]
    1176:	786a      	ldrb	r2, [r5, #1]
    1178:	4313      	orrs	r3, r2
    117a:	78aa      	ldrb	r2, [r5, #2]
    117c:	4313      	orrs	r3, r2
    117e:	78ea      	ldrb	r2, [r5, #3]
    1180:	4313      	orrs	r3, r2
    1182:	421e      	tst	r6, r3
    1184:	d1f5      	bne.n	1172 <ui_handle_report+0xf2>
		ui_hid_report[0] = 153; // legacy reasons 
    1186:	4b1c      	ldr	r3, [pc, #112]	; (11f8 <ui_handle_report+0x178>)
    1188:	2299      	movs	r2, #153	; 0x99
    118a:	701a      	strb	r2, [r3, #0]
			ui_hid_report[i] = bufferReceive[i-1];
    118c:	4a28      	ldr	r2, [pc, #160]	; (1230 <ui_handle_report+0x1b0>)
    118e:	7811      	ldrb	r1, [r2, #0]
    1190:	7059      	strb	r1, [r3, #1]
    1192:	7851      	ldrb	r1, [r2, #1]
    1194:	7099      	strb	r1, [r3, #2]
    1196:	7891      	ldrb	r1, [r2, #2]
    1198:	70d9      	strb	r1, [r3, #3]
    119a:	78d2      	ldrb	r2, [r2, #3]
    119c:	711a      	strb	r2, [r3, #4]
    119e:	e792      	b.n	10c6 <ui_handle_report+0x46>
		ui_hid_report[0] = read_left_ir();
    11a0:	4b24      	ldr	r3, [pc, #144]	; (1234 <ui_handle_report+0x1b4>)
    11a2:	4798      	blx	r3
    11a4:	4d14      	ldr	r5, [pc, #80]	; (11f8 <ui_handle_report+0x178>)
    11a6:	7028      	strb	r0, [r5, #0]
		ui_hid_report[1] = read_right_ir();
    11a8:	4b23      	ldr	r3, [pc, #140]	; (1238 <ui_handle_report+0x1b8>)
    11aa:	4798      	blx	r3
    11ac:	7068      	strb	r0, [r5, #1]
		break;
    11ae:	e78a      	b.n	10c6 <ui_handle_report+0x46>
		ui_hid_report[0] = adc_start_read_result(LINE_FOLLOWER);
    11b0:	2002      	movs	r0, #2
    11b2:	4b13      	ldr	r3, [pc, #76]	; (1200 <ui_handle_report+0x180>)
    11b4:	4798      	blx	r3
    11b6:	4b10      	ldr	r3, [pc, #64]	; (11f8 <ui_handle_report+0x178>)
    11b8:	7018      	strb	r0, [r3, #0]
		break;
    11ba:	e784      	b.n	10c6 <ui_handle_report+0x46>
		echo_distance = get_ultrasound_distance();
    11bc:	4b1f      	ldr	r3, [pc, #124]	; (123c <ui_handle_report+0x1bc>)
    11be:	4798      	blx	r3
		ui_hid_report[0] = *echo_distance++;
    11c0:	7802      	ldrb	r2, [r0, #0]
    11c2:	4b0d      	ldr	r3, [pc, #52]	; (11f8 <ui_handle_report+0x178>)
    11c4:	701a      	strb	r2, [r3, #0]
		ui_hid_report[1] = *echo_distance;
    11c6:	7842      	ldrb	r2, [r0, #1]
    11c8:	705a      	strb	r2, [r3, #1]
		break;
    11ca:	e77c      	b.n	10c6 <ui_handle_report+0x46>
		ui_hid_report[0] = count;
    11cc:	4b06      	ldr	r3, [pc, #24]	; (11e8 <ui_handle_report+0x168>)
    11ce:	681b      	ldr	r3, [r3, #0]
    11d0:	4a09      	ldr	r2, [pc, #36]	; (11f8 <ui_handle_report+0x178>)
    11d2:	7013      	strb	r3, [r2, #0]
		count++;
    11d4:	3301      	adds	r3, #1
		if(count > 255) {
    11d6:	2bff      	cmp	r3, #255	; 0xff
    11d8:	dd03      	ble.n	11e2 <ui_handle_report+0x162>
			count = 0;
    11da:	2200      	movs	r2, #0
    11dc:	4b02      	ldr	r3, [pc, #8]	; (11e8 <ui_handle_report+0x168>)
    11de:	601a      	str	r2, [r3, #0]
    11e0:	e771      	b.n	10c6 <ui_handle_report+0x46>
		count++;
    11e2:	4a01      	ldr	r2, [pc, #4]	; (11e8 <ui_handle_report+0x168>)
    11e4:	6013      	str	r3, [r2, #0]
    11e6:	e76e      	b.n	10c6 <ui_handle_report+0x46>
    11e8:	20000148 	.word	0x20000148
    11ec:	00007dbc 	.word	0x00007dbc
    11f0:	0000048d 	.word	0x0000048d
    11f4:	000004a1 	.word	0x000004a1
    11f8:	2000014c 	.word	0x2000014c
    11fc:	0000135d 	.word	0x0000135d
    1200:	00005825 	.word	0x00005825
    1204:	40000800 	.word	0x40000800
    1208:	000058d5 	.word	0x000058d5
    120c:	00005a65 	.word	0x00005a65
    1210:	0000593d 	.word	0x0000593d
    1214:	00006061 	.word	0x00006061
    1218:	000057bd 	.word	0x000057bd
    121c:	00000bc9 	.word	0x00000bc9
    1220:	00000c6d 	.word	0x00000c6d
    1224:	00000d11 	.word	0x00000d11
    1228:	00000ff9 	.word	0x00000ff9
    122c:	00000969 	.word	0x00000969
    1230:	20000298 	.word	0x20000298
    1234:	00000b2d 	.word	0x00000b2d
    1238:	00000b3d 	.word	0x00000b3d
    123c:	000008ad 	.word	0x000008ad

00001240 <udi_hid_generic_getsetting>:


uint8_t udi_hid_generic_getsetting(void)
{
	return 0;
}
    1240:	2000      	movs	r0, #0
    1242:	4770      	bx	lr

00001244 <udi_hid_generic_setreport>:


static bool udi_hid_generic_setreport(void)
{
	if ((USB_HID_REPORT_TYPE_FEATURE == (udd_g_ctrlreq.req.wValue >> 8))
    1244:	4b0b      	ldr	r3, [pc, #44]	; (1274 <udi_hid_generic_setreport+0x30>)
    1246:	885b      	ldrh	r3, [r3, #2]
    1248:	0a1a      	lsrs	r2, r3, #8
		udd_g_ctrlreq.callback = udi_hid_generic_setfeature_valid;
		udd_g_ctrlreq.payload_size =
				sizeof(udi_hid_generic_report_feature);
		return true;
	}
	return false;
    124a:	2000      	movs	r0, #0
	if ((USB_HID_REPORT_TYPE_FEATURE == (udd_g_ctrlreq.req.wValue >> 8))
    124c:	2a03      	cmp	r2, #3
    124e:	d000      	beq.n	1252 <udi_hid_generic_setreport+0xe>
}
    1250:	4770      	bx	lr
			&& (0 == (0xFF & udd_g_ctrlreq.req.wValue))
    1252:	32fc      	adds	r2, #252	; 0xfc
    1254:	421a      	tst	r2, r3
    1256:	d1fb      	bne.n	1250 <udi_hid_generic_setreport+0xc>
					udd_g_ctrlreq.req.wLength)) {
    1258:	4b06      	ldr	r3, [pc, #24]	; (1274 <udi_hid_generic_setreport+0x30>)
			&& (sizeof(udi_hid_generic_report_feature) ==
    125a:	88db      	ldrh	r3, [r3, #6]
    125c:	2b04      	cmp	r3, #4
    125e:	d1f7      	bne.n	1250 <udi_hid_generic_setreport+0xc>
		udd_g_ctrlreq.payload =
    1260:	4b04      	ldr	r3, [pc, #16]	; (1274 <udi_hid_generic_setreport+0x30>)
    1262:	4a05      	ldr	r2, [pc, #20]	; (1278 <udi_hid_generic_setreport+0x34>)
    1264:	609a      	str	r2, [r3, #8]
		udd_g_ctrlreq.callback = udi_hid_generic_setfeature_valid;
    1266:	4a05      	ldr	r2, [pc, #20]	; (127c <udi_hid_generic_setreport+0x38>)
    1268:	611a      	str	r2, [r3, #16]
		udd_g_ctrlreq.payload_size =
    126a:	2204      	movs	r2, #4
    126c:	819a      	strh	r2, [r3, #12]
		return true;
    126e:	3001      	adds	r0, #1
    1270:	e7ee      	b.n	1250 <udi_hid_generic_setreport+0xc>
    1272:	46c0      	nop			; (mov r8, r8)
    1274:	200005cc 	.word	0x200005cc
    1278:	20000160 	.word	0x20000160
    127c:	0000133d 	.word	0x0000133d

00001280 <udi_hid_generic_report_in_sent>:
		iram_size_t nb_sent, udd_ep_id_t ep)
{
	UNUSED(status);
	UNUSED(nb_sent);
	UNUSED(ep);
	udi_hid_generic_b_report_in_free = true;
    1280:	2201      	movs	r2, #1
    1282:	4b01      	ldr	r3, [pc, #4]	; (1288 <udi_hid_generic_report_in_sent+0x8>)
    1284:	701a      	strb	r2, [r3, #0]
}
    1286:	4770      	bx	lr
    1288:	20000154 	.word	0x20000154

0000128c <udi_hid_generic_report_out_enable>:
{
    128c:	b510      	push	{r4, lr}
    128e:	b082      	sub	sp, #8
	return udd_ep_run(UDI_HID_GENERIC_EP_OUT,
    1290:	4b04      	ldr	r3, [pc, #16]	; (12a4 <udi_hid_generic_report_out_enable+0x18>)
    1292:	9300      	str	r3, [sp, #0]
    1294:	2308      	movs	r3, #8
    1296:	4a04      	ldr	r2, [pc, #16]	; (12a8 <udi_hid_generic_report_out_enable+0x1c>)
    1298:	2100      	movs	r1, #0
    129a:	2002      	movs	r0, #2
    129c:	4c03      	ldr	r4, [pc, #12]	; (12ac <udi_hid_generic_report_out_enable+0x20>)
    129e:	47a0      	blx	r4
}
    12a0:	b002      	add	sp, #8
    12a2:	bd10      	pop	{r4, pc}
    12a4:	000012e9 	.word	0x000012e9
    12a8:	2000016c 	.word	0x2000016c
    12ac:	00004559 	.word	0x00004559

000012b0 <udi_hid_generic_enable>:
{
    12b0:	b510      	push	{r4, lr}
	udi_hid_generic_rate = 0;
    12b2:	2300      	movs	r3, #0
    12b4:	4a07      	ldr	r2, [pc, #28]	; (12d4 <udi_hid_generic_enable+0x24>)
    12b6:	7013      	strb	r3, [r2, #0]
	udi_hid_generic_protocol = 0;
    12b8:	4a07      	ldr	r2, [pc, #28]	; (12d8 <udi_hid_generic_enable+0x28>)
    12ba:	7013      	strb	r3, [r2, #0]
	udi_hid_generic_b_report_in_free = true;
    12bc:	2201      	movs	r2, #1
    12be:	4b07      	ldr	r3, [pc, #28]	; (12dc <udi_hid_generic_enable+0x2c>)
    12c0:	701a      	strb	r2, [r3, #0]
	if (!udi_hid_generic_report_out_enable())
    12c2:	4b07      	ldr	r3, [pc, #28]	; (12e0 <udi_hid_generic_enable+0x30>)
    12c4:	4798      	blx	r3
    12c6:	2800      	cmp	r0, #0
    12c8:	d100      	bne.n	12cc <udi_hid_generic_enable+0x1c>
}
    12ca:	bd10      	pop	{r4, pc}
	return UDI_HID_GENERIC_ENABLE_EXT();
    12cc:	4b05      	ldr	r3, [pc, #20]	; (12e4 <udi_hid_generic_enable+0x34>)
    12ce:	4798      	blx	r3
    12d0:	e7fb      	b.n	12ca <udi_hid_generic_enable+0x1a>
    12d2:	46c0      	nop			; (mov r8, r8)
    12d4:	2000015c 	.word	0x2000015c
    12d8:	20000158 	.word	0x20000158
    12dc:	20000154 	.word	0x20000154
    12e0:	0000128d 	.word	0x0000128d
    12e4:	00005cd9 	.word	0x00005cd9

000012e8 <udi_hid_generic_report_out_received>:
{
    12e8:	b510      	push	{r4, lr}
	if (UDD_EP_TRANSFER_OK != status)
    12ea:	2800      	cmp	r0, #0
    12ec:	d103      	bne.n	12f6 <udi_hid_generic_report_out_received+0xe>
	if (sizeof(udi_hid_generic_report_out) == nb_received) {
    12ee:	2908      	cmp	r1, #8
    12f0:	d002      	beq.n	12f8 <udi_hid_generic_report_out_received+0x10>
	udi_hid_generic_report_out_enable();
    12f2:	4b03      	ldr	r3, [pc, #12]	; (1300 <udi_hid_generic_report_out_received+0x18>)
    12f4:	4798      	blx	r3
}
    12f6:	bd10      	pop	{r4, pc}
		UDI_HID_GENERIC_REPORT_OUT(udi_hid_generic_report_out);
    12f8:	4802      	ldr	r0, [pc, #8]	; (1304 <udi_hid_generic_report_out_received+0x1c>)
    12fa:	4b03      	ldr	r3, [pc, #12]	; (1308 <udi_hid_generic_report_out_received+0x20>)
    12fc:	4798      	blx	r3
    12fe:	e7f8      	b.n	12f2 <udi_hid_generic_report_out_received+0xa>
    1300:	0000128d 	.word	0x0000128d
    1304:	2000016c 	.word	0x2000016c
    1308:	00001081 	.word	0x00001081

0000130c <udi_hid_generic_disable>:
{
    130c:	b510      	push	{r4, lr}
	UDI_HID_GENERIC_DISABLE_EXT();
    130e:	4b01      	ldr	r3, [pc, #4]	; (1314 <udi_hid_generic_disable+0x8>)
    1310:	4798      	blx	r3
}
    1312:	bd10      	pop	{r4, pc}
    1314:	00005ce9 	.word	0x00005ce9

00001318 <udi_hid_generic_setup>:
{
    1318:	b510      	push	{r4, lr}
	return udi_hid_setup(&udi_hid_generic_rate,
    131a:	4b03      	ldr	r3, [pc, #12]	; (1328 <udi_hid_generic_setup+0x10>)
    131c:	4a03      	ldr	r2, [pc, #12]	; (132c <udi_hid_generic_setup+0x14>)
    131e:	4904      	ldr	r1, [pc, #16]	; (1330 <udi_hid_generic_setup+0x18>)
    1320:	4804      	ldr	r0, [pc, #16]	; (1334 <udi_hid_generic_setup+0x1c>)
    1322:	4c05      	ldr	r4, [pc, #20]	; (1338 <udi_hid_generic_setup+0x20>)
    1324:	47a0      	blx	r4
}
    1326:	bd10      	pop	{r4, pc}
    1328:	00001245 	.word	0x00001245
    132c:	20000030 	.word	0x20000030
    1330:	20000158 	.word	0x20000158
    1334:	2000015c 	.word	0x2000015c
    1338:	000013e5 	.word	0x000013e5

0000133c <udi_hid_generic_setfeature_valid>:
{
    133c:	b510      	push	{r4, lr}
	if (sizeof(udi_hid_generic_report_feature) != udd_g_ctrlreq.payload_size)
    133e:	4b04      	ldr	r3, [pc, #16]	; (1350 <udi_hid_generic_setfeature_valid+0x14>)
    1340:	899b      	ldrh	r3, [r3, #12]
    1342:	2b04      	cmp	r3, #4
    1344:	d000      	beq.n	1348 <udi_hid_generic_setfeature_valid+0xc>
}
    1346:	bd10      	pop	{r4, pc}
	UDI_HID_GENERIC_SET_FEATURE(udi_hid_generic_report_feature);
    1348:	4802      	ldr	r0, [pc, #8]	; (1354 <udi_hid_generic_setfeature_valid+0x18>)
    134a:	4b03      	ldr	r3, [pc, #12]	; (1358 <udi_hid_generic_setfeature_valid+0x1c>)
    134c:	4798      	blx	r3
    134e:	e7fa      	b.n	1346 <udi_hid_generic_setfeature_valid+0xa>
    1350:	200005cc 	.word	0x200005cc
    1354:	20000160 	.word	0x20000160
    1358:	00005cf5 	.word	0x00005cf5

0000135c <udi_hid_generic_send_report_in>:
{
    135c:	b570      	push	{r4, r5, r6, lr}
    135e:	b082      	sub	sp, #8
    1360:	0005      	movs	r5, r0
	if (!udi_hid_generic_b_report_in_free)
    1362:	4b19      	ldr	r3, [pc, #100]	; (13c8 <udi_hid_generic_send_report_in+0x6c>)
    1364:	7818      	ldrb	r0, [r3, #0]
    1366:	2800      	cmp	r0, #0
    1368:	d101      	bne.n	136e <udi_hid_generic_send_report_in+0x12>
}
    136a:	b002      	add	sp, #8
    136c:	bd70      	pop	{r4, r5, r6, pc}
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    136e:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
    1372:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
    1374:	f3bf 8f5f 	dmb	sy
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = cpu_irq_is_enabled();
	cpu_irq_disable();
    1378:	2200      	movs	r2, #0
    137a:	4b14      	ldr	r3, [pc, #80]	; (13cc <udi_hid_generic_send_report_in+0x70>)
    137c:	701a      	strb	r2, [r3, #0]
	memset(&udi_hid_generic_report_in, 0,
    137e:	4e14      	ldr	r6, [pc, #80]	; (13d0 <udi_hid_generic_send_report_in+0x74>)
    1380:	3208      	adds	r2, #8
    1382:	2100      	movs	r1, #0
    1384:	0030      	movs	r0, r6
    1386:	4b13      	ldr	r3, [pc, #76]	; (13d4 <udi_hid_generic_send_report_in+0x78>)
    1388:	4798      	blx	r3
	memcpy(&udi_hid_generic_report_in, data,
    138a:	2208      	movs	r2, #8
    138c:	0029      	movs	r1, r5
    138e:	0030      	movs	r0, r6
    1390:	4b11      	ldr	r3, [pc, #68]	; (13d8 <udi_hid_generic_send_report_in+0x7c>)
    1392:	4798      	blx	r3
			!udd_ep_run(UDI_HID_GENERIC_EP_IN,
    1394:	4b11      	ldr	r3, [pc, #68]	; (13dc <udi_hid_generic_send_report_in+0x80>)
    1396:	9300      	str	r3, [sp, #0]
    1398:	2308      	movs	r3, #8
    139a:	0032      	movs	r2, r6
    139c:	2100      	movs	r1, #0
    139e:	2081      	movs	r0, #129	; 0x81
    13a0:	4d0f      	ldr	r5, [pc, #60]	; (13e0 <udi_hid_generic_send_report_in+0x84>)
    13a2:	47a8      	blx	r5
							udi_hid_generic_report_in_sent);
    13a4:	2301      	movs	r3, #1
    13a6:	4058      	eors	r0, r3
	udi_hid_generic_b_report_in_free =
    13a8:	4b07      	ldr	r3, [pc, #28]	; (13c8 <udi_hid_generic_send_report_in+0x6c>)
    13aa:	7018      	strb	r0, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
    13ac:	2c00      	cmp	r4, #0
    13ae:	d105      	bne.n	13bc <udi_hid_generic_send_report_in+0x60>
		cpu_irq_enable();
    13b0:	2201      	movs	r2, #1
    13b2:	4b06      	ldr	r3, [pc, #24]	; (13cc <udi_hid_generic_send_report_in+0x70>)
    13b4:	701a      	strb	r2, [r3, #0]
    13b6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    13ba:	b662      	cpsie	i
	return !udi_hid_generic_b_report_in_free;
    13bc:	4b02      	ldr	r3, [pc, #8]	; (13c8 <udi_hid_generic_send_report_in+0x6c>)
    13be:	7818      	ldrb	r0, [r3, #0]
    13c0:	2301      	movs	r3, #1
    13c2:	4058      	eors	r0, r3
    13c4:	e7d1      	b.n	136a <udi_hid_generic_send_report_in+0xe>
    13c6:	46c0      	nop			; (mov r8, r8)
    13c8:	20000154 	.word	0x20000154
    13cc:	20000116 	.word	0x20000116
    13d0:	20000164 	.word	0x20000164
    13d4:	00007d93 	.word	0x00007d93
    13d8:	00007d81 	.word	0x00007d81
    13dc:	00001281 	.word	0x00001281
    13e0:	00004559 	.word	0x00004559

000013e4 <udi_hid_setup>:
    13e4:	b570      	push	{r4, r5, r6, lr}
    13e6:	0005      	movs	r5, r0
    13e8:	0014      	movs	r4, r2
    13ea:	4a3b      	ldr	r2, [pc, #236]	; (14d8 <udi_hid_setup+0xf4>)
    13ec:	7812      	ldrb	r2, [r2, #0]
    13ee:	b250      	sxtb	r0, r2
    13f0:	2800      	cmp	r0, #0
    13f2:	db05      	blt.n	1400 <udi_hid_setup+0x1c>
    13f4:	2460      	movs	r4, #96	; 0x60
    13f6:	4022      	ands	r2, r4
    13f8:	2000      	movs	r0, #0
    13fa:	2a20      	cmp	r2, #32
    13fc:	d04f      	beq.n	149e <udi_hid_setup+0xba>
    13fe:	bd70      	pop	{r4, r5, r6, pc}
    1400:	2060      	movs	r0, #96	; 0x60
    1402:	4002      	ands	r2, r0
    1404:	d103      	bne.n	140e <udi_hid_setup+0x2a>
    1406:	4834      	ldr	r0, [pc, #208]	; (14d8 <udi_hid_setup+0xf4>)
    1408:	7840      	ldrb	r0, [r0, #1]
    140a:	2806      	cmp	r0, #6
    140c:	d00d      	beq.n	142a <udi_hid_setup+0x46>
    140e:	2000      	movs	r0, #0
    1410:	2a20      	cmp	r2, #32
    1412:	d1f4      	bne.n	13fe <udi_hid_setup+0x1a>
    1414:	4a30      	ldr	r2, [pc, #192]	; (14d8 <udi_hid_setup+0xf4>)
    1416:	7852      	ldrb	r2, [r2, #1]
    1418:	2a02      	cmp	r2, #2
    141a:	d034      	beq.n	1486 <udi_hid_setup+0xa2>
    141c:	2a03      	cmp	r2, #3
    141e:	d038      	beq.n	1492 <udi_hid_setup+0xae>
    1420:	2000      	movs	r0, #0
    1422:	2a01      	cmp	r2, #1
    1424:	d1eb      	bne.n	13fe <udi_hid_setup+0x1a>
    1426:	4798      	blx	r3
    1428:	e7e9      	b.n	13fe <udi_hid_setup+0x1a>
    142a:	4b2c      	ldr	r3, [pc, #176]	; (14dc <udi_hid_setup+0xf8>)
    142c:	4798      	blx	r3
    142e:	0003      	movs	r3, r0
    1430:	7a82      	ldrb	r2, [r0, #10]
    1432:	2000      	movs	r0, #0
    1434:	2a21      	cmp	r2, #33	; 0x21
    1436:	d1e2      	bne.n	13fe <udi_hid_setup+0x1a>
    1438:	4a27      	ldr	r2, [pc, #156]	; (14d8 <udi_hid_setup+0xf4>)
    143a:	8852      	ldrh	r2, [r2, #2]
    143c:	0a12      	lsrs	r2, r2, #8
    143e:	2a21      	cmp	r2, #33	; 0x21
    1440:	d013      	beq.n	146a <udi_hid_setup+0x86>
    1442:	7bd9      	ldrb	r1, [r3, #15]
    1444:	2000      	movs	r0, #0
    1446:	4291      	cmp	r1, r2
    1448:	d1d9      	bne.n	13fe <udi_hid_setup+0x1a>
    144a:	4a23      	ldr	r2, [pc, #140]	; (14d8 <udi_hid_setup+0xf4>)
    144c:	6094      	str	r4, [r2, #8]
    144e:	7c19      	ldrb	r1, [r3, #16]
    1450:	3309      	adds	r3, #9
    1452:	7a1b      	ldrb	r3, [r3, #8]
    1454:	021b      	lsls	r3, r3, #8
    1456:	430b      	orrs	r3, r1
    1458:	88d0      	ldrh	r0, [r2, #6]
    145a:	1c19      	adds	r1, r3, #0
    145c:	b29b      	uxth	r3, r3
    145e:	4283      	cmp	r3, r0
    1460:	d900      	bls.n	1464 <udi_hid_setup+0x80>
    1462:	1c01      	adds	r1, r0, #0
    1464:	8191      	strh	r1, [r2, #12]
    1466:	2001      	movs	r0, #1
    1468:	e7c9      	b.n	13fe <udi_hid_setup+0x1a>
    146a:	4a1b      	ldr	r2, [pc, #108]	; (14d8 <udi_hid_setup+0xf4>)
    146c:	0019      	movs	r1, r3
    146e:	3109      	adds	r1, #9
    1470:	6091      	str	r1, [r2, #8]
    1472:	7a5b      	ldrb	r3, [r3, #9]
    1474:	88d0      	ldrh	r0, [r2, #6]
    1476:	1c19      	adds	r1, r3, #0
    1478:	b29b      	uxth	r3, r3
    147a:	4283      	cmp	r3, r0
    147c:	d900      	bls.n	1480 <udi_hid_setup+0x9c>
    147e:	1c01      	adds	r1, r0, #0
    1480:	8191      	strh	r1, [r2, #12]
    1482:	2001      	movs	r0, #1
    1484:	e7bb      	b.n	13fe <udi_hid_setup+0x1a>
    1486:	4b14      	ldr	r3, [pc, #80]	; (14d8 <udi_hid_setup+0xf4>)
    1488:	609d      	str	r5, [r3, #8]
    148a:	2201      	movs	r2, #1
    148c:	819a      	strh	r2, [r3, #12]
    148e:	2001      	movs	r0, #1
    1490:	e7b5      	b.n	13fe <udi_hid_setup+0x1a>
    1492:	4b11      	ldr	r3, [pc, #68]	; (14d8 <udi_hid_setup+0xf4>)
    1494:	6099      	str	r1, [r3, #8]
    1496:	2201      	movs	r2, #1
    1498:	819a      	strh	r2, [r3, #12]
    149a:	2001      	movs	r0, #1
    149c:	e7af      	b.n	13fe <udi_hid_setup+0x1a>
    149e:	4a0e      	ldr	r2, [pc, #56]	; (14d8 <udi_hid_setup+0xf4>)
    14a0:	7852      	ldrb	r2, [r2, #1]
    14a2:	2a0a      	cmp	r2, #10
    14a4:	d006      	beq.n	14b4 <udi_hid_setup+0xd0>
    14a6:	2a0b      	cmp	r2, #11
    14a8:	d00a      	beq.n	14c0 <udi_hid_setup+0xdc>
    14aa:	2000      	movs	r0, #0
    14ac:	2a09      	cmp	r2, #9
    14ae:	d1a6      	bne.n	13fe <udi_hid_setup+0x1a>
    14b0:	4798      	blx	r3
    14b2:	e7a4      	b.n	13fe <udi_hid_setup+0x1a>
    14b4:	4b08      	ldr	r3, [pc, #32]	; (14d8 <udi_hid_setup+0xf4>)
    14b6:	885b      	ldrh	r3, [r3, #2]
    14b8:	0a1b      	lsrs	r3, r3, #8
    14ba:	702b      	strb	r3, [r5, #0]
    14bc:	2001      	movs	r0, #1
    14be:	e79e      	b.n	13fe <udi_hid_setup+0x1a>
    14c0:	4b05      	ldr	r3, [pc, #20]	; (14d8 <udi_hid_setup+0xf4>)
    14c2:	88db      	ldrh	r3, [r3, #6]
    14c4:	2000      	movs	r0, #0
    14c6:	2b00      	cmp	r3, #0
    14c8:	d000      	beq.n	14cc <udi_hid_setup+0xe8>
    14ca:	e798      	b.n	13fe <udi_hid_setup+0x1a>
    14cc:	4b02      	ldr	r3, [pc, #8]	; (14d8 <udi_hid_setup+0xf4>)
    14ce:	885b      	ldrh	r3, [r3, #2]
    14d0:	700b      	strb	r3, [r1, #0]
    14d2:	3001      	adds	r0, #1
    14d4:	e793      	b.n	13fe <udi_hid_setup+0x1a>
    14d6:	46c0      	nop			; (mov r8, r8)
    14d8:	200005cc 	.word	0x200005cc
    14dc:	0000167d 	.word	0x0000167d

000014e0 <udc_next_desc_in_iface>:
    14e0:	b510      	push	{r4, lr}
    14e2:	4b11      	ldr	r3, [pc, #68]	; (1528 <udc_next_desc_in_iface+0x48>)
    14e4:	681b      	ldr	r3, [r3, #0]
    14e6:	681a      	ldr	r2, [r3, #0]
    14e8:	7894      	ldrb	r4, [r2, #2]
    14ea:	78d3      	ldrb	r3, [r2, #3]
    14ec:	021b      	lsls	r3, r3, #8
    14ee:	4323      	orrs	r3, r4
    14f0:	18d2      	adds	r2, r2, r3
    14f2:	7803      	ldrb	r3, [r0, #0]
    14f4:	18c0      	adds	r0, r0, r3
    14f6:	4290      	cmp	r0, r2
    14f8:	d210      	bcs.n	151c <udc_next_desc_in_iface+0x3c>
    14fa:	7843      	ldrb	r3, [r0, #1]
    14fc:	2b04      	cmp	r3, #4
    14fe:	d00f      	beq.n	1520 <udc_next_desc_in_iface+0x40>
    1500:	428b      	cmp	r3, r1
    1502:	d00a      	beq.n	151a <udc_next_desc_in_iface+0x3a>
    1504:	7803      	ldrb	r3, [r0, #0]
    1506:	18c0      	adds	r0, r0, r3
    1508:	4290      	cmp	r0, r2
    150a:	d205      	bcs.n	1518 <udc_next_desc_in_iface+0x38>
    150c:	7843      	ldrb	r3, [r0, #1]
    150e:	2b04      	cmp	r3, #4
    1510:	d008      	beq.n	1524 <udc_next_desc_in_iface+0x44>
    1512:	428b      	cmp	r3, r1
    1514:	d1f6      	bne.n	1504 <udc_next_desc_in_iface+0x24>
    1516:	e000      	b.n	151a <udc_next_desc_in_iface+0x3a>
    1518:	2000      	movs	r0, #0
    151a:	bd10      	pop	{r4, pc}
    151c:	2000      	movs	r0, #0
    151e:	e7fc      	b.n	151a <udc_next_desc_in_iface+0x3a>
    1520:	2000      	movs	r0, #0
    1522:	e7fa      	b.n	151a <udc_next_desc_in_iface+0x3a>
    1524:	2000      	movs	r0, #0
    1526:	e7f8      	b.n	151a <udc_next_desc_in_iface+0x3a>
    1528:	20000180 	.word	0x20000180

0000152c <udc_valid_address>:
    152c:	b510      	push	{r4, lr}
    152e:	4b03      	ldr	r3, [pc, #12]	; (153c <udc_valid_address+0x10>)
    1530:	885b      	ldrh	r3, [r3, #2]
    1532:	207f      	movs	r0, #127	; 0x7f
    1534:	4018      	ands	r0, r3
    1536:	4b02      	ldr	r3, [pc, #8]	; (1540 <udc_valid_address+0x14>)
    1538:	4798      	blx	r3
    153a:	bd10      	pop	{r4, pc}
    153c:	200005cc 	.word	0x200005cc
    1540:	00004729 	.word	0x00004729

00001544 <udc_update_iface_desc>:
    1544:	b570      	push	{r4, r5, r6, lr}
    1546:	4b19      	ldr	r3, [pc, #100]	; (15ac <udc_update_iface_desc+0x68>)
    1548:	781b      	ldrb	r3, [r3, #0]
    154a:	2200      	movs	r2, #0
    154c:	2b00      	cmp	r3, #0
    154e:	d029      	beq.n	15a4 <udc_update_iface_desc+0x60>
    1550:	4b17      	ldr	r3, [pc, #92]	; (15b0 <udc_update_iface_desc+0x6c>)
    1552:	681b      	ldr	r3, [r3, #0]
    1554:	681b      	ldr	r3, [r3, #0]
    1556:	791c      	ldrb	r4, [r3, #4]
    1558:	4284      	cmp	r4, r0
    155a:	d923      	bls.n	15a4 <udc_update_iface_desc+0x60>
    155c:	4a15      	ldr	r2, [pc, #84]	; (15b4 <udc_update_iface_desc+0x70>)
    155e:	6013      	str	r3, [r2, #0]
    1560:	789a      	ldrb	r2, [r3, #2]
    1562:	78dc      	ldrb	r4, [r3, #3]
    1564:	0224      	lsls	r4, r4, #8
    1566:	4314      	orrs	r4, r2
    1568:	191c      	adds	r4, r3, r4
    156a:	42a3      	cmp	r3, r4
    156c:	d21c      	bcs.n	15a8 <udc_update_iface_desc+0x64>
    156e:	2500      	movs	r5, #0
    1570:	2601      	movs	r6, #1
    1572:	e007      	b.n	1584 <udc_update_iface_desc+0x40>
    1574:	4a0f      	ldr	r2, [pc, #60]	; (15b4 <udc_update_iface_desc+0x70>)
    1576:	6013      	str	r3, [r2, #0]
    1578:	e00f      	b.n	159a <udc_update_iface_desc+0x56>
    157a:	781a      	ldrb	r2, [r3, #0]
    157c:	189b      	adds	r3, r3, r2
    157e:	0035      	movs	r5, r6
    1580:	42a3      	cmp	r3, r4
    1582:	d20c      	bcs.n	159e <udc_update_iface_desc+0x5a>
    1584:	785a      	ldrb	r2, [r3, #1]
    1586:	2a04      	cmp	r2, #4
    1588:	d1f7      	bne.n	157a <udc_update_iface_desc+0x36>
    158a:	789a      	ldrb	r2, [r3, #2]
    158c:	4282      	cmp	r2, r0
    158e:	d1f4      	bne.n	157a <udc_update_iface_desc+0x36>
    1590:	78da      	ldrb	r2, [r3, #3]
    1592:	428a      	cmp	r2, r1
    1594:	d1f1      	bne.n	157a <udc_update_iface_desc+0x36>
    1596:	2d00      	cmp	r5, #0
    1598:	d1ec      	bne.n	1574 <udc_update_iface_desc+0x30>
    159a:	2201      	movs	r2, #1
    159c:	e002      	b.n	15a4 <udc_update_iface_desc+0x60>
    159e:	4a05      	ldr	r2, [pc, #20]	; (15b4 <udc_update_iface_desc+0x70>)
    15a0:	6013      	str	r3, [r2, #0]
    15a2:	2200      	movs	r2, #0
    15a4:	0010      	movs	r0, r2
    15a6:	bd70      	pop	{r4, r5, r6, pc}
    15a8:	2200      	movs	r2, #0
    15aa:	e7fb      	b.n	15a4 <udc_update_iface_desc+0x60>
    15ac:	2000017c 	.word	0x2000017c
    15b0:	20000180 	.word	0x20000180
    15b4:	20000184 	.word	0x20000184

000015b8 <udc_iface_disable>:
    15b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    15ba:	46c6      	mov	lr, r8
    15bc:	b500      	push	{lr}
    15be:	0004      	movs	r4, r0
    15c0:	2100      	movs	r1, #0
    15c2:	4b13      	ldr	r3, [pc, #76]	; (1610 <udc_iface_disable+0x58>)
    15c4:	4798      	blx	r3
    15c6:	1e05      	subs	r5, r0, #0
    15c8:	d103      	bne.n	15d2 <udc_iface_disable+0x1a>
    15ca:	0028      	movs	r0, r5
    15cc:	bc04      	pop	{r2}
    15ce:	4690      	mov	r8, r2
    15d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    15d2:	4b10      	ldr	r3, [pc, #64]	; (1614 <udc_iface_disable+0x5c>)
    15d4:	681b      	ldr	r3, [r3, #0]
    15d6:	685b      	ldr	r3, [r3, #4]
    15d8:	00a2      	lsls	r2, r4, #2
    15da:	58d3      	ldr	r3, [r2, r3]
    15dc:	4698      	mov	r8, r3
    15de:	68db      	ldr	r3, [r3, #12]
    15e0:	4798      	blx	r3
    15e2:	0001      	movs	r1, r0
    15e4:	0020      	movs	r0, r4
    15e6:	4b0a      	ldr	r3, [pc, #40]	; (1610 <udc_iface_disable+0x58>)
    15e8:	4798      	blx	r3
    15ea:	1e05      	subs	r5, r0, #0
    15ec:	d0ed      	beq.n	15ca <udc_iface_disable+0x12>
    15ee:	4b0a      	ldr	r3, [pc, #40]	; (1618 <udc_iface_disable+0x60>)
    15f0:	681c      	ldr	r4, [r3, #0]
    15f2:	4e0a      	ldr	r6, [pc, #40]	; (161c <udc_iface_disable+0x64>)
    15f4:	4f0a      	ldr	r7, [pc, #40]	; (1620 <udc_iface_disable+0x68>)
    15f6:	2105      	movs	r1, #5
    15f8:	0020      	movs	r0, r4
    15fa:	47b0      	blx	r6
    15fc:	1e04      	subs	r4, r0, #0
    15fe:	d002      	beq.n	1606 <udc_iface_disable+0x4e>
    1600:	7880      	ldrb	r0, [r0, #2]
    1602:	47b8      	blx	r7
    1604:	e7f7      	b.n	15f6 <udc_iface_disable+0x3e>
    1606:	4643      	mov	r3, r8
    1608:	685b      	ldr	r3, [r3, #4]
    160a:	4798      	blx	r3
    160c:	e7dd      	b.n	15ca <udc_iface_disable+0x12>
    160e:	46c0      	nop			; (mov r8, r8)
    1610:	00001545 	.word	0x00001545
    1614:	20000180 	.word	0x20000180
    1618:	20000184 	.word	0x20000184
    161c:	000014e1 	.word	0x000014e1
    1620:	00004271 	.word	0x00004271

00001624 <udc_iface_enable>:
    1624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1626:	0005      	movs	r5, r0
    1628:	4b0f      	ldr	r3, [pc, #60]	; (1668 <udc_iface_enable+0x44>)
    162a:	4798      	blx	r3
    162c:	2800      	cmp	r0, #0
    162e:	d019      	beq.n	1664 <udc_iface_enable+0x40>
    1630:	4b0e      	ldr	r3, [pc, #56]	; (166c <udc_iface_enable+0x48>)
    1632:	681c      	ldr	r4, [r3, #0]
    1634:	4e0e      	ldr	r6, [pc, #56]	; (1670 <udc_iface_enable+0x4c>)
    1636:	4f0f      	ldr	r7, [pc, #60]	; (1674 <udc_iface_enable+0x50>)
    1638:	2105      	movs	r1, #5
    163a:	0020      	movs	r0, r4
    163c:	47b0      	blx	r6
    163e:	1e04      	subs	r4, r0, #0
    1640:	d009      	beq.n	1656 <udc_iface_enable+0x32>
    1642:	7903      	ldrb	r3, [r0, #4]
    1644:	7942      	ldrb	r2, [r0, #5]
    1646:	0212      	lsls	r2, r2, #8
    1648:	431a      	orrs	r2, r3
    164a:	78c1      	ldrb	r1, [r0, #3]
    164c:	7880      	ldrb	r0, [r0, #2]
    164e:	47b8      	blx	r7
    1650:	2800      	cmp	r0, #0
    1652:	d1f1      	bne.n	1638 <udc_iface_enable+0x14>
    1654:	e006      	b.n	1664 <udc_iface_enable+0x40>
    1656:	4b08      	ldr	r3, [pc, #32]	; (1678 <udc_iface_enable+0x54>)
    1658:	681b      	ldr	r3, [r3, #0]
    165a:	685b      	ldr	r3, [r3, #4]
    165c:	00ad      	lsls	r5, r5, #2
    165e:	58eb      	ldr	r3, [r5, r3]
    1660:	681b      	ldr	r3, [r3, #0]
    1662:	4798      	blx	r3
    1664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1666:	46c0      	nop			; (mov r8, r8)
    1668:	00001545 	.word	0x00001545
    166c:	20000184 	.word	0x20000184
    1670:	000014e1 	.word	0x000014e1
    1674:	000042c9 	.word	0x000042c9
    1678:	20000180 	.word	0x20000180

0000167c <udc_get_interface_desc>:
    167c:	4b01      	ldr	r3, [pc, #4]	; (1684 <udc_get_interface_desc+0x8>)
    167e:	6818      	ldr	r0, [r3, #0]
    1680:	4770      	bx	lr
    1682:	46c0      	nop			; (mov r8, r8)
    1684:	20000184 	.word	0x20000184

00001688 <udc_start>:
    1688:	b510      	push	{r4, lr}
    168a:	4b01      	ldr	r3, [pc, #4]	; (1690 <udc_start+0x8>)
    168c:	4798      	blx	r3
    168e:	bd10      	pop	{r4, pc}
    1690:	000047d9 	.word	0x000047d9

00001694 <udc_reset>:
    1694:	b570      	push	{r4, r5, r6, lr}
    1696:	4b12      	ldr	r3, [pc, #72]	; (16e0 <udc_reset+0x4c>)
    1698:	781b      	ldrb	r3, [r3, #0]
    169a:	2b00      	cmp	r3, #0
    169c:	d011      	beq.n	16c2 <udc_reset+0x2e>
    169e:	4b11      	ldr	r3, [pc, #68]	; (16e4 <udc_reset+0x50>)
    16a0:	681b      	ldr	r3, [r3, #0]
    16a2:	681b      	ldr	r3, [r3, #0]
    16a4:	791b      	ldrb	r3, [r3, #4]
    16a6:	2b00      	cmp	r3, #0
    16a8:	d00b      	beq.n	16c2 <udc_reset+0x2e>
    16aa:	2400      	movs	r4, #0
    16ac:	4e0e      	ldr	r6, [pc, #56]	; (16e8 <udc_reset+0x54>)
    16ae:	4d0d      	ldr	r5, [pc, #52]	; (16e4 <udc_reset+0x50>)
    16b0:	0020      	movs	r0, r4
    16b2:	47b0      	blx	r6
    16b4:	3401      	adds	r4, #1
    16b6:	b2e4      	uxtb	r4, r4
    16b8:	682b      	ldr	r3, [r5, #0]
    16ba:	681b      	ldr	r3, [r3, #0]
    16bc:	791b      	ldrb	r3, [r3, #4]
    16be:	42a3      	cmp	r3, r4
    16c0:	d8f6      	bhi.n	16b0 <udc_reset+0x1c>
    16c2:	2200      	movs	r2, #0
    16c4:	4b06      	ldr	r3, [pc, #24]	; (16e0 <udc_reset+0x4c>)
    16c6:	701a      	strb	r2, [r3, #0]
    16c8:	4b08      	ldr	r3, [pc, #32]	; (16ec <udc_reset+0x58>)
    16ca:	881b      	ldrh	r3, [r3, #0]
    16cc:	079b      	lsls	r3, r3, #30
    16ce:	d403      	bmi.n	16d8 <udc_reset+0x44>
    16d0:	2200      	movs	r2, #0
    16d2:	4b06      	ldr	r3, [pc, #24]	; (16ec <udc_reset+0x58>)
    16d4:	801a      	strh	r2, [r3, #0]
    16d6:	bd70      	pop	{r4, r5, r6, pc}
    16d8:	4b05      	ldr	r3, [pc, #20]	; (16f0 <udc_reset+0x5c>)
    16da:	4798      	blx	r3
    16dc:	e7f8      	b.n	16d0 <udc_reset+0x3c>
    16de:	46c0      	nop			; (mov r8, r8)
    16e0:	2000017c 	.word	0x2000017c
    16e4:	20000180 	.word	0x20000180
    16e8:	000015b9 	.word	0x000015b9
    16ec:	20000174 	.word	0x20000174
    16f0:	00005ccd 	.word	0x00005ccd

000016f4 <udc_sof_notify>:
    16f4:	b570      	push	{r4, r5, r6, lr}
    16f6:	4b0e      	ldr	r3, [pc, #56]	; (1730 <udc_sof_notify+0x3c>)
    16f8:	781b      	ldrb	r3, [r3, #0]
    16fa:	2b00      	cmp	r3, #0
    16fc:	d017      	beq.n	172e <udc_sof_notify+0x3a>
    16fe:	4b0d      	ldr	r3, [pc, #52]	; (1734 <udc_sof_notify+0x40>)
    1700:	681b      	ldr	r3, [r3, #0]
    1702:	681a      	ldr	r2, [r3, #0]
    1704:	7912      	ldrb	r2, [r2, #4]
    1706:	2a00      	cmp	r2, #0
    1708:	d011      	beq.n	172e <udc_sof_notify+0x3a>
    170a:	2400      	movs	r4, #0
    170c:	4d09      	ldr	r5, [pc, #36]	; (1734 <udc_sof_notify+0x40>)
    170e:	e006      	b.n	171e <udc_sof_notify+0x2a>
    1710:	3401      	adds	r4, #1
    1712:	b2e4      	uxtb	r4, r4
    1714:	682b      	ldr	r3, [r5, #0]
    1716:	681a      	ldr	r2, [r3, #0]
    1718:	7912      	ldrb	r2, [r2, #4]
    171a:	42a2      	cmp	r2, r4
    171c:	d907      	bls.n	172e <udc_sof_notify+0x3a>
    171e:	685b      	ldr	r3, [r3, #4]
    1720:	00a2      	lsls	r2, r4, #2
    1722:	58d3      	ldr	r3, [r2, r3]
    1724:	691b      	ldr	r3, [r3, #16]
    1726:	2b00      	cmp	r3, #0
    1728:	d0f2      	beq.n	1710 <udc_sof_notify+0x1c>
    172a:	4798      	blx	r3
    172c:	e7f0      	b.n	1710 <udc_sof_notify+0x1c>
    172e:	bd70      	pop	{r4, r5, r6, pc}
    1730:	2000017c 	.word	0x2000017c
    1734:	20000180 	.word	0x20000180

00001738 <udc_process_setup>:
    1738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    173a:	4bb6      	ldr	r3, [pc, #728]	; (1a14 <udc_process_setup+0x2dc>)
    173c:	2200      	movs	r2, #0
    173e:	819a      	strh	r2, [r3, #12]
    1740:	611a      	str	r2, [r3, #16]
    1742:	615a      	str	r2, [r3, #20]
    1744:	781b      	ldrb	r3, [r3, #0]
    1746:	b25a      	sxtb	r2, r3
    1748:	2a00      	cmp	r2, #0
    174a:	db13      	blt.n	1774 <udc_process_setup+0x3c>
    174c:	2260      	movs	r2, #96	; 0x60
    174e:	421a      	tst	r2, r3
    1750:	d100      	bne.n	1754 <udc_process_setup+0x1c>
    1752:	e0d7      	b.n	1904 <udc_process_setup+0x1cc>
    1754:	4baf      	ldr	r3, [pc, #700]	; (1a14 <udc_process_setup+0x2dc>)
    1756:	781a      	ldrb	r2, [r3, #0]
    1758:	231f      	movs	r3, #31
    175a:	4013      	ands	r3, r2
    175c:	2b01      	cmp	r3, #1
    175e:	d100      	bne.n	1762 <udc_process_setup+0x2a>
    1760:	e18e      	b.n	1a80 <udc_process_setup+0x348>
    1762:	4bac      	ldr	r3, [pc, #688]	; (1a14 <udc_process_setup+0x2dc>)
    1764:	781a      	ldrb	r2, [r3, #0]
    1766:	231f      	movs	r3, #31
    1768:	4013      	ands	r3, r2
    176a:	2000      	movs	r0, #0
    176c:	2b02      	cmp	r3, #2
    176e:	d100      	bne.n	1772 <udc_process_setup+0x3a>
    1770:	e1df      	b.n	1b32 <udc_process_setup+0x3fa>
    1772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1774:	4aa7      	ldr	r2, [pc, #668]	; (1a14 <udc_process_setup+0x2dc>)
    1776:	88d2      	ldrh	r2, [r2, #6]
    1778:	2000      	movs	r0, #0
    177a:	2a00      	cmp	r2, #0
    177c:	d0f9      	beq.n	1772 <udc_process_setup+0x3a>
    177e:	2160      	movs	r1, #96	; 0x60
    1780:	4219      	tst	r1, r3
    1782:	d1e7      	bne.n	1754 <udc_process_setup+0x1c>
    1784:	211f      	movs	r1, #31
    1786:	400b      	ands	r3, r1
    1788:	d108      	bne.n	179c <udc_process_setup+0x64>
    178a:	49a2      	ldr	r1, [pc, #648]	; (1a14 <udc_process_setup+0x2dc>)
    178c:	7849      	ldrb	r1, [r1, #1]
    178e:	2906      	cmp	r1, #6
    1790:	d023      	beq.n	17da <udc_process_setup+0xa2>
    1792:	2908      	cmp	r1, #8
    1794:	d100      	bne.n	1798 <udc_process_setup+0x60>
    1796:	e084      	b.n	18a2 <udc_process_setup+0x16a>
    1798:	2900      	cmp	r1, #0
    179a:	d017      	beq.n	17cc <udc_process_setup+0x94>
    179c:	2b01      	cmp	r3, #1
    179e:	d100      	bne.n	17a2 <udc_process_setup+0x6a>
    17a0:	e087      	b.n	18b2 <udc_process_setup+0x17a>
    17a2:	2b02      	cmp	r3, #2
    17a4:	d1d6      	bne.n	1754 <udc_process_setup+0x1c>
    17a6:	4b9b      	ldr	r3, [pc, #620]	; (1a14 <udc_process_setup+0x2dc>)
    17a8:	785b      	ldrb	r3, [r3, #1]
    17aa:	2000      	movs	r0, #0
    17ac:	2b00      	cmp	r3, #0
    17ae:	d000      	beq.n	17b2 <udc_process_setup+0x7a>
    17b0:	e12b      	b.n	1a0a <udc_process_setup+0x2d2>
    17b2:	2a02      	cmp	r2, #2
    17b4:	d1d5      	bne.n	1762 <udc_process_setup+0x2a>
    17b6:	4b97      	ldr	r3, [pc, #604]	; (1a14 <udc_process_setup+0x2dc>)
    17b8:	7918      	ldrb	r0, [r3, #4]
    17ba:	4b97      	ldr	r3, [pc, #604]	; (1a18 <udc_process_setup+0x2e0>)
    17bc:	4798      	blx	r3
    17be:	4b97      	ldr	r3, [pc, #604]	; (1a1c <udc_process_setup+0x2e4>)
    17c0:	8018      	strh	r0, [r3, #0]
    17c2:	2102      	movs	r1, #2
    17c4:	0018      	movs	r0, r3
    17c6:	4b96      	ldr	r3, [pc, #600]	; (1a20 <udc_process_setup+0x2e8>)
    17c8:	4798      	blx	r3
    17ca:	e0fd      	b.n	19c8 <udc_process_setup+0x290>
    17cc:	2a02      	cmp	r2, #2
    17ce:	d1c8      	bne.n	1762 <udc_process_setup+0x2a>
    17d0:	3102      	adds	r1, #2
    17d2:	4894      	ldr	r0, [pc, #592]	; (1a24 <udc_process_setup+0x2ec>)
    17d4:	4b92      	ldr	r3, [pc, #584]	; (1a20 <udc_process_setup+0x2e8>)
    17d6:	4798      	blx	r3
    17d8:	e0f6      	b.n	19c8 <udc_process_setup+0x290>
    17da:	4b8e      	ldr	r3, [pc, #568]	; (1a14 <udc_process_setup+0x2dc>)
    17dc:	885a      	ldrh	r2, [r3, #2]
    17de:	0a13      	lsrs	r3, r2, #8
    17e0:	2b02      	cmp	r3, #2
    17e2:	d023      	beq.n	182c <udc_process_setup+0xf4>
    17e4:	b2d9      	uxtb	r1, r3
    17e6:	2902      	cmp	r1, #2
    17e8:	d90f      	bls.n	180a <udc_process_setup+0xd2>
    17ea:	2b03      	cmp	r3, #3
    17ec:	d034      	beq.n	1858 <udc_process_setup+0x120>
    17ee:	2b0f      	cmp	r3, #15
    17f0:	d000      	beq.n	17f4 <udc_process_setup+0xbc>
    17f2:	e19c      	b.n	1b2e <udc_process_setup+0x3f6>
    17f4:	4b8c      	ldr	r3, [pc, #560]	; (1a28 <udc_process_setup+0x2f0>)
    17f6:	6898      	ldr	r0, [r3, #8]
    17f8:	2800      	cmp	r0, #0
    17fa:	d0b2      	beq.n	1762 <udc_process_setup+0x2a>
    17fc:	7883      	ldrb	r3, [r0, #2]
    17fe:	78c1      	ldrb	r1, [r0, #3]
    1800:	0209      	lsls	r1, r1, #8
    1802:	4319      	orrs	r1, r3
    1804:	4b86      	ldr	r3, [pc, #536]	; (1a20 <udc_process_setup+0x2e8>)
    1806:	4798      	blx	r3
    1808:	e007      	b.n	181a <udc_process_setup+0xe2>
    180a:	2b01      	cmp	r3, #1
    180c:	d000      	beq.n	1810 <udc_process_setup+0xd8>
    180e:	e18e      	b.n	1b2e <udc_process_setup+0x3f6>
    1810:	4b85      	ldr	r3, [pc, #532]	; (1a28 <udc_process_setup+0x2f0>)
    1812:	6818      	ldr	r0, [r3, #0]
    1814:	7801      	ldrb	r1, [r0, #0]
    1816:	4b82      	ldr	r3, [pc, #520]	; (1a20 <udc_process_setup+0x2e8>)
    1818:	4798      	blx	r3
    181a:	4b7e      	ldr	r3, [pc, #504]	; (1a14 <udc_process_setup+0x2dc>)
    181c:	88da      	ldrh	r2, [r3, #6]
    181e:	899b      	ldrh	r3, [r3, #12]
    1820:	4293      	cmp	r3, r2
    1822:	d800      	bhi.n	1826 <udc_process_setup+0xee>
    1824:	e0d0      	b.n	19c8 <udc_process_setup+0x290>
    1826:	4b7b      	ldr	r3, [pc, #492]	; (1a14 <udc_process_setup+0x2dc>)
    1828:	819a      	strh	r2, [r3, #12]
    182a:	e0cd      	b.n	19c8 <udc_process_setup+0x290>
    182c:	b2d2      	uxtb	r2, r2
    182e:	4b7e      	ldr	r3, [pc, #504]	; (1a28 <udc_process_setup+0x2f0>)
    1830:	681b      	ldr	r3, [r3, #0]
    1832:	7c5b      	ldrb	r3, [r3, #17]
    1834:	4293      	cmp	r3, r2
    1836:	d800      	bhi.n	183a <udc_process_setup+0x102>
    1838:	e793      	b.n	1762 <udc_process_setup+0x2a>
    183a:	4b7b      	ldr	r3, [pc, #492]	; (1a28 <udc_process_setup+0x2f0>)
    183c:	685b      	ldr	r3, [r3, #4]
    183e:	00d2      	lsls	r2, r2, #3
    1840:	58d0      	ldr	r0, [r2, r3]
    1842:	7883      	ldrb	r3, [r0, #2]
    1844:	78c1      	ldrb	r1, [r0, #3]
    1846:	0209      	lsls	r1, r1, #8
    1848:	4319      	orrs	r1, r3
    184a:	4b75      	ldr	r3, [pc, #468]	; (1a20 <udc_process_setup+0x2e8>)
    184c:	4798      	blx	r3
    184e:	4b71      	ldr	r3, [pc, #452]	; (1a14 <udc_process_setup+0x2dc>)
    1850:	689b      	ldr	r3, [r3, #8]
    1852:	2202      	movs	r2, #2
    1854:	705a      	strb	r2, [r3, #1]
    1856:	e7e0      	b.n	181a <udc_process_setup+0xe2>
    1858:	23ff      	movs	r3, #255	; 0xff
    185a:	401a      	ands	r2, r3
    185c:	2a01      	cmp	r2, #1
    185e:	d01d      	beq.n	189c <udc_process_setup+0x164>
    1860:	2a00      	cmp	r2, #0
    1862:	d016      	beq.n	1892 <udc_process_setup+0x15a>
    1864:	2a02      	cmp	r2, #2
    1866:	d000      	beq.n	186a <udc_process_setup+0x132>
    1868:	e774      	b.n	1754 <udc_process_setup+0x1c>
    186a:	4c70      	ldr	r4, [pc, #448]	; (1a2c <udc_process_setup+0x2f4>)
    186c:	2109      	movs	r1, #9
    186e:	4a70      	ldr	r2, [pc, #448]	; (1a30 <udc_process_setup+0x2f8>)
    1870:	3202      	adds	r2, #2
    1872:	2300      	movs	r3, #0
    1874:	5ce0      	ldrb	r0, [r4, r3]
    1876:	8010      	strh	r0, [r2, #0]
    1878:	3301      	adds	r3, #1
    187a:	3202      	adds	r2, #2
    187c:	b2d8      	uxtb	r0, r3
    187e:	4288      	cmp	r0, r1
    1880:	d3f8      	bcc.n	1874 <udc_process_setup+0x13c>
    1882:	0049      	lsls	r1, r1, #1
    1884:	3102      	adds	r1, #2
    1886:	486a      	ldr	r0, [pc, #424]	; (1a30 <udc_process_setup+0x2f8>)
    1888:	7001      	strb	r1, [r0, #0]
    188a:	b289      	uxth	r1, r1
    188c:	4b64      	ldr	r3, [pc, #400]	; (1a20 <udc_process_setup+0x2e8>)
    188e:	4798      	blx	r3
    1890:	e7c3      	b.n	181a <udc_process_setup+0xe2>
    1892:	2104      	movs	r1, #4
    1894:	4867      	ldr	r0, [pc, #412]	; (1a34 <udc_process_setup+0x2fc>)
    1896:	4b62      	ldr	r3, [pc, #392]	; (1a20 <udc_process_setup+0x2e8>)
    1898:	4798      	blx	r3
    189a:	e7be      	b.n	181a <udc_process_setup+0xe2>
    189c:	4c66      	ldr	r4, [pc, #408]	; (1a38 <udc_process_setup+0x300>)
    189e:	2116      	movs	r1, #22
    18a0:	e7e5      	b.n	186e <udc_process_setup+0x136>
    18a2:	2a01      	cmp	r2, #1
    18a4:	d000      	beq.n	18a8 <udc_process_setup+0x170>
    18a6:	e75c      	b.n	1762 <udc_process_setup+0x2a>
    18a8:	2101      	movs	r1, #1
    18aa:	4864      	ldr	r0, [pc, #400]	; (1a3c <udc_process_setup+0x304>)
    18ac:	4b5c      	ldr	r3, [pc, #368]	; (1a20 <udc_process_setup+0x2e8>)
    18ae:	4798      	blx	r3
    18b0:	e08a      	b.n	19c8 <udc_process_setup+0x290>
    18b2:	4958      	ldr	r1, [pc, #352]	; (1a14 <udc_process_setup+0x2dc>)
    18b4:	7849      	ldrb	r1, [r1, #1]
    18b6:	290a      	cmp	r1, #10
    18b8:	d000      	beq.n	18bc <udc_process_setup+0x184>
    18ba:	e772      	b.n	17a2 <udc_process_setup+0x6a>
    18bc:	2a01      	cmp	r2, #1
    18be:	d000      	beq.n	18c2 <udc_process_setup+0x18a>
    18c0:	e0de      	b.n	1a80 <udc_process_setup+0x348>
    18c2:	4b5e      	ldr	r3, [pc, #376]	; (1a3c <udc_process_setup+0x304>)
    18c4:	781b      	ldrb	r3, [r3, #0]
    18c6:	2b00      	cmp	r3, #0
    18c8:	d100      	bne.n	18cc <udc_process_setup+0x194>
    18ca:	e0d9      	b.n	1a80 <udc_process_setup+0x348>
    18cc:	4b51      	ldr	r3, [pc, #324]	; (1a14 <udc_process_setup+0x2dc>)
    18ce:	791c      	ldrb	r4, [r3, #4]
    18d0:	4b5b      	ldr	r3, [pc, #364]	; (1a40 <udc_process_setup+0x308>)
    18d2:	681d      	ldr	r5, [r3, #0]
    18d4:	682b      	ldr	r3, [r5, #0]
    18d6:	791b      	ldrb	r3, [r3, #4]
    18d8:	42a3      	cmp	r3, r4
    18da:	d800      	bhi.n	18de <udc_process_setup+0x1a6>
    18dc:	e0d0      	b.n	1a80 <udc_process_setup+0x348>
    18de:	2100      	movs	r1, #0
    18e0:	0020      	movs	r0, r4
    18e2:	4b58      	ldr	r3, [pc, #352]	; (1a44 <udc_process_setup+0x30c>)
    18e4:	4798      	blx	r3
    18e6:	2800      	cmp	r0, #0
    18e8:	d100      	bne.n	18ec <udc_process_setup+0x1b4>
    18ea:	e733      	b.n	1754 <udc_process_setup+0x1c>
    18ec:	686b      	ldr	r3, [r5, #4]
    18ee:	00a4      	lsls	r4, r4, #2
    18f0:	58e3      	ldr	r3, [r4, r3]
    18f2:	68db      	ldr	r3, [r3, #12]
    18f4:	4798      	blx	r3
    18f6:	4b54      	ldr	r3, [pc, #336]	; (1a48 <udc_process_setup+0x310>)
    18f8:	7018      	strb	r0, [r3, #0]
    18fa:	2101      	movs	r1, #1
    18fc:	0018      	movs	r0, r3
    18fe:	4b48      	ldr	r3, [pc, #288]	; (1a20 <udc_process_setup+0x2e8>)
    1900:	4798      	blx	r3
    1902:	e061      	b.n	19c8 <udc_process_setup+0x290>
    1904:	221f      	movs	r2, #31
    1906:	4013      	ands	r3, r2
    1908:	d172      	bne.n	19f0 <udc_process_setup+0x2b8>
    190a:	4a42      	ldr	r2, [pc, #264]	; (1a14 <udc_process_setup+0x2dc>)
    190c:	7852      	ldrb	r2, [r2, #1]
    190e:	2a03      	cmp	r2, #3
    1910:	d05c      	beq.n	19cc <udc_process_setup+0x294>
    1912:	b2d1      	uxtb	r1, r2
    1914:	2903      	cmp	r1, #3
    1916:	d93b      	bls.n	1990 <udc_process_setup+0x258>
    1918:	2a05      	cmp	r2, #5
    191a:	d04d      	beq.n	19b8 <udc_process_setup+0x280>
    191c:	2a09      	cmp	r2, #9
    191e:	d167      	bne.n	19f0 <udc_process_setup+0x2b8>
    1920:	4b3c      	ldr	r3, [pc, #240]	; (1a14 <udc_process_setup+0x2dc>)
    1922:	88db      	ldrh	r3, [r3, #6]
    1924:	2b00      	cmp	r3, #0
    1926:	d000      	beq.n	192a <udc_process_setup+0x1f2>
    1928:	e71b      	b.n	1762 <udc_process_setup+0x2a>
    192a:	4b48      	ldr	r3, [pc, #288]	; (1a4c <udc_process_setup+0x314>)
    192c:	4798      	blx	r3
    192e:	2800      	cmp	r0, #0
    1930:	d100      	bne.n	1934 <udc_process_setup+0x1fc>
    1932:	e70f      	b.n	1754 <udc_process_setup+0x1c>
    1934:	4b37      	ldr	r3, [pc, #220]	; (1a14 <udc_process_setup+0x2dc>)
    1936:	789a      	ldrb	r2, [r3, #2]
    1938:	4b3b      	ldr	r3, [pc, #236]	; (1a28 <udc_process_setup+0x2f0>)
    193a:	681b      	ldr	r3, [r3, #0]
    193c:	7c5b      	ldrb	r3, [r3, #17]
    193e:	429a      	cmp	r2, r3
    1940:	dd00      	ble.n	1944 <udc_process_setup+0x20c>
    1942:	e707      	b.n	1754 <udc_process_setup+0x1c>
    1944:	4b42      	ldr	r3, [pc, #264]	; (1a50 <udc_process_setup+0x318>)
    1946:	4798      	blx	r3
    1948:	4b32      	ldr	r3, [pc, #200]	; (1a14 <udc_process_setup+0x2dc>)
    194a:	789b      	ldrb	r3, [r3, #2]
    194c:	4a3b      	ldr	r2, [pc, #236]	; (1a3c <udc_process_setup+0x304>)
    194e:	7013      	strb	r3, [r2, #0]
    1950:	2b00      	cmp	r3, #0
    1952:	d039      	beq.n	19c8 <udc_process_setup+0x290>
    1954:	4a3f      	ldr	r2, [pc, #252]	; (1a54 <udc_process_setup+0x31c>)
    1956:	4694      	mov	ip, r2
    1958:	4463      	add	r3, ip
    195a:	00db      	lsls	r3, r3, #3
    195c:	4a32      	ldr	r2, [pc, #200]	; (1a28 <udc_process_setup+0x2f0>)
    195e:	6852      	ldr	r2, [r2, #4]
    1960:	18d3      	adds	r3, r2, r3
    1962:	4a37      	ldr	r2, [pc, #220]	; (1a40 <udc_process_setup+0x308>)
    1964:	6013      	str	r3, [r2, #0]
    1966:	681b      	ldr	r3, [r3, #0]
    1968:	791b      	ldrb	r3, [r3, #4]
    196a:	2b00      	cmp	r3, #0
    196c:	d02c      	beq.n	19c8 <udc_process_setup+0x290>
    196e:	2400      	movs	r4, #0
    1970:	4d39      	ldr	r5, [pc, #228]	; (1a58 <udc_process_setup+0x320>)
    1972:	0016      	movs	r6, r2
    1974:	2100      	movs	r1, #0
    1976:	0020      	movs	r0, r4
    1978:	47a8      	blx	r5
    197a:	2800      	cmp	r0, #0
    197c:	d100      	bne.n	1980 <udc_process_setup+0x248>
    197e:	e6e9      	b.n	1754 <udc_process_setup+0x1c>
    1980:	3401      	adds	r4, #1
    1982:	b2e4      	uxtb	r4, r4
    1984:	6833      	ldr	r3, [r6, #0]
    1986:	681b      	ldr	r3, [r3, #0]
    1988:	791b      	ldrb	r3, [r3, #4]
    198a:	42a3      	cmp	r3, r4
    198c:	d8f2      	bhi.n	1974 <udc_process_setup+0x23c>
    198e:	e01b      	b.n	19c8 <udc_process_setup+0x290>
    1990:	2a01      	cmp	r2, #1
    1992:	d12d      	bne.n	19f0 <udc_process_setup+0x2b8>
    1994:	4b1f      	ldr	r3, [pc, #124]	; (1a14 <udc_process_setup+0x2dc>)
    1996:	88db      	ldrh	r3, [r3, #6]
    1998:	2b00      	cmp	r3, #0
    199a:	d000      	beq.n	199e <udc_process_setup+0x266>
    199c:	e6e1      	b.n	1762 <udc_process_setup+0x2a>
    199e:	4b1d      	ldr	r3, [pc, #116]	; (1a14 <udc_process_setup+0x2dc>)
    19a0:	885b      	ldrh	r3, [r3, #2]
    19a2:	2b01      	cmp	r3, #1
    19a4:	d000      	beq.n	19a8 <udc_process_setup+0x270>
    19a6:	e6dc      	b.n	1762 <udc_process_setup+0x2a>
    19a8:	4a1e      	ldr	r2, [pc, #120]	; (1a24 <udc_process_setup+0x2ec>)
    19aa:	8813      	ldrh	r3, [r2, #0]
    19ac:	2102      	movs	r1, #2
    19ae:	438b      	bics	r3, r1
    19b0:	8013      	strh	r3, [r2, #0]
    19b2:	4b2a      	ldr	r3, [pc, #168]	; (1a5c <udc_process_setup+0x324>)
    19b4:	4798      	blx	r3
    19b6:	e007      	b.n	19c8 <udc_process_setup+0x290>
    19b8:	4b16      	ldr	r3, [pc, #88]	; (1a14 <udc_process_setup+0x2dc>)
    19ba:	88db      	ldrh	r3, [r3, #6]
    19bc:	2b00      	cmp	r3, #0
    19be:	d000      	beq.n	19c2 <udc_process_setup+0x28a>
    19c0:	e6cf      	b.n	1762 <udc_process_setup+0x2a>
    19c2:	4a27      	ldr	r2, [pc, #156]	; (1a60 <udc_process_setup+0x328>)
    19c4:	4b13      	ldr	r3, [pc, #76]	; (1a14 <udc_process_setup+0x2dc>)
    19c6:	611a      	str	r2, [r3, #16]
    19c8:	2001      	movs	r0, #1
    19ca:	e6d2      	b.n	1772 <udc_process_setup+0x3a>
    19cc:	4b11      	ldr	r3, [pc, #68]	; (1a14 <udc_process_setup+0x2dc>)
    19ce:	88db      	ldrh	r3, [r3, #6]
    19d0:	2b00      	cmp	r3, #0
    19d2:	d000      	beq.n	19d6 <udc_process_setup+0x29e>
    19d4:	e6c5      	b.n	1762 <udc_process_setup+0x2a>
    19d6:	4b0f      	ldr	r3, [pc, #60]	; (1a14 <udc_process_setup+0x2dc>)
    19d8:	885b      	ldrh	r3, [r3, #2]
    19da:	2000      	movs	r0, #0
    19dc:	2b01      	cmp	r3, #1
    19de:	d114      	bne.n	1a0a <udc_process_setup+0x2d2>
    19e0:	4a10      	ldr	r2, [pc, #64]	; (1a24 <udc_process_setup+0x2ec>)
    19e2:	8813      	ldrh	r3, [r2, #0]
    19e4:	2102      	movs	r1, #2
    19e6:	430b      	orrs	r3, r1
    19e8:	8013      	strh	r3, [r2, #0]
    19ea:	4b1e      	ldr	r3, [pc, #120]	; (1a64 <udc_process_setup+0x32c>)
    19ec:	4798      	blx	r3
    19ee:	e7eb      	b.n	19c8 <udc_process_setup+0x290>
    19f0:	2b01      	cmp	r3, #1
    19f2:	d039      	beq.n	1a68 <udc_process_setup+0x330>
    19f4:	2b02      	cmp	r3, #2
    19f6:	d000      	beq.n	19fa <udc_process_setup+0x2c2>
    19f8:	e6ac      	b.n	1754 <udc_process_setup+0x1c>
    19fa:	4b06      	ldr	r3, [pc, #24]	; (1a14 <udc_process_setup+0x2dc>)
    19fc:	785b      	ldrb	r3, [r3, #1]
    19fe:	2b01      	cmp	r3, #1
    1a00:	d074      	beq.n	1aec <udc_process_setup+0x3b4>
    1a02:	2b03      	cmp	r3, #3
    1a04:	d100      	bne.n	1a08 <udc_process_setup+0x2d0>
    1a06:	e080      	b.n	1b0a <udc_process_setup+0x3d2>
    1a08:	2000      	movs	r0, #0
    1a0a:	2800      	cmp	r0, #0
    1a0c:	d000      	beq.n	1a10 <udc_process_setup+0x2d8>
    1a0e:	e6b0      	b.n	1772 <udc_process_setup+0x3a>
    1a10:	e6a0      	b.n	1754 <udc_process_setup+0x1c>
    1a12:	46c0      	nop			; (mov r8, r8)
    1a14:	200005cc 	.word	0x200005cc
    1a18:	000043d1 	.word	0x000043d1
    1a1c:	20000176 	.word	0x20000176
    1a20:	00004749 	.word	0x00004749
    1a24:	20000174 	.word	0x20000174
    1a28:	20000068 	.word	0x20000068
    1a2c:	2000010c 	.word	0x2000010c
    1a30:	200000c0 	.word	0x200000c0
    1a34:	200000f0 	.word	0x200000f0
    1a38:	200000f4 	.word	0x200000f4
    1a3c:	2000017c 	.word	0x2000017c
    1a40:	20000180 	.word	0x20000180
    1a44:	00001545 	.word	0x00001545
    1a48:	20000178 	.word	0x20000178
    1a4c:	00004739 	.word	0x00004739
    1a50:	00001695 	.word	0x00001695
    1a54:	1fffffff 	.word	0x1fffffff
    1a58:	00001625 	.word	0x00001625
    1a5c:	00005ccd 	.word	0x00005ccd
    1a60:	0000152d 	.word	0x0000152d
    1a64:	00005cc1 	.word	0x00005cc1
    1a68:	4a46      	ldr	r2, [pc, #280]	; (1b84 <udc_process_setup+0x44c>)
    1a6a:	7852      	ldrb	r2, [r2, #1]
    1a6c:	2a0b      	cmp	r2, #11
    1a6e:	d1c1      	bne.n	19f4 <udc_process_setup+0x2bc>
    1a70:	4b44      	ldr	r3, [pc, #272]	; (1b84 <udc_process_setup+0x44c>)
    1a72:	88db      	ldrh	r3, [r3, #6]
    1a74:	2b00      	cmp	r3, #0
    1a76:	d103      	bne.n	1a80 <udc_process_setup+0x348>
    1a78:	4b43      	ldr	r3, [pc, #268]	; (1b88 <udc_process_setup+0x450>)
    1a7a:	781b      	ldrb	r3, [r3, #0]
    1a7c:	2b00      	cmp	r3, #0
    1a7e:	d127      	bne.n	1ad0 <udc_process_setup+0x398>
    1a80:	4b41      	ldr	r3, [pc, #260]	; (1b88 <udc_process_setup+0x450>)
    1a82:	781b      	ldrb	r3, [r3, #0]
    1a84:	2000      	movs	r0, #0
    1a86:	2b00      	cmp	r3, #0
    1a88:	d100      	bne.n	1a8c <udc_process_setup+0x354>
    1a8a:	e672      	b.n	1772 <udc_process_setup+0x3a>
    1a8c:	4b3d      	ldr	r3, [pc, #244]	; (1b84 <udc_process_setup+0x44c>)
    1a8e:	791c      	ldrb	r4, [r3, #4]
    1a90:	4b3e      	ldr	r3, [pc, #248]	; (1b8c <udc_process_setup+0x454>)
    1a92:	681d      	ldr	r5, [r3, #0]
    1a94:	682b      	ldr	r3, [r5, #0]
    1a96:	791b      	ldrb	r3, [r3, #4]
    1a98:	42a3      	cmp	r3, r4
    1a9a:	d800      	bhi.n	1a9e <udc_process_setup+0x366>
    1a9c:	e669      	b.n	1772 <udc_process_setup+0x3a>
    1a9e:	2100      	movs	r1, #0
    1aa0:	0020      	movs	r0, r4
    1aa2:	4b3b      	ldr	r3, [pc, #236]	; (1b90 <udc_process_setup+0x458>)
    1aa4:	4798      	blx	r3
    1aa6:	2800      	cmp	r0, #0
    1aa8:	d100      	bne.n	1aac <udc_process_setup+0x374>
    1aaa:	e65a      	b.n	1762 <udc_process_setup+0x2a>
    1aac:	686b      	ldr	r3, [r5, #4]
    1aae:	00a2      	lsls	r2, r4, #2
    1ab0:	58d5      	ldr	r5, [r2, r3]
    1ab2:	68eb      	ldr	r3, [r5, #12]
    1ab4:	4798      	blx	r3
    1ab6:	0001      	movs	r1, r0
    1ab8:	0020      	movs	r0, r4
    1aba:	4b35      	ldr	r3, [pc, #212]	; (1b90 <udc_process_setup+0x458>)
    1abc:	4798      	blx	r3
    1abe:	2800      	cmp	r0, #0
    1ac0:	d100      	bne.n	1ac4 <udc_process_setup+0x38c>
    1ac2:	e64e      	b.n	1762 <udc_process_setup+0x2a>
    1ac4:	68ab      	ldr	r3, [r5, #8]
    1ac6:	4798      	blx	r3
    1ac8:	2800      	cmp	r0, #0
    1aca:	d000      	beq.n	1ace <udc_process_setup+0x396>
    1acc:	e651      	b.n	1772 <udc_process_setup+0x3a>
    1ace:	e648      	b.n	1762 <udc_process_setup+0x2a>
    1ad0:	4b2c      	ldr	r3, [pc, #176]	; (1b84 <udc_process_setup+0x44c>)
    1ad2:	791d      	ldrb	r5, [r3, #4]
    1ad4:	885c      	ldrh	r4, [r3, #2]
    1ad6:	0028      	movs	r0, r5
    1ad8:	4b2e      	ldr	r3, [pc, #184]	; (1b94 <udc_process_setup+0x45c>)
    1ada:	4798      	blx	r3
    1adc:	2800      	cmp	r0, #0
    1ade:	d100      	bne.n	1ae2 <udc_process_setup+0x3aa>
    1ae0:	e638      	b.n	1754 <udc_process_setup+0x1c>
    1ae2:	b2e1      	uxtb	r1, r4
    1ae4:	0028      	movs	r0, r5
    1ae6:	4b2c      	ldr	r3, [pc, #176]	; (1b98 <udc_process_setup+0x460>)
    1ae8:	4798      	blx	r3
    1aea:	e78e      	b.n	1a0a <udc_process_setup+0x2d2>
    1aec:	4b25      	ldr	r3, [pc, #148]	; (1b84 <udc_process_setup+0x44c>)
    1aee:	88db      	ldrh	r3, [r3, #6]
    1af0:	2b00      	cmp	r3, #0
    1af2:	d000      	beq.n	1af6 <udc_process_setup+0x3be>
    1af4:	e635      	b.n	1762 <udc_process_setup+0x2a>
    1af6:	4b23      	ldr	r3, [pc, #140]	; (1b84 <udc_process_setup+0x44c>)
    1af8:	885b      	ldrh	r3, [r3, #2]
    1afa:	2b00      	cmp	r3, #0
    1afc:	d000      	beq.n	1b00 <udc_process_setup+0x3c8>
    1afe:	e630      	b.n	1762 <udc_process_setup+0x2a>
    1b00:	4b20      	ldr	r3, [pc, #128]	; (1b84 <udc_process_setup+0x44c>)
    1b02:	7918      	ldrb	r0, [r3, #4]
    1b04:	4b25      	ldr	r3, [pc, #148]	; (1b9c <udc_process_setup+0x464>)
    1b06:	4798      	blx	r3
    1b08:	e77f      	b.n	1a0a <udc_process_setup+0x2d2>
    1b0a:	4b1e      	ldr	r3, [pc, #120]	; (1b84 <udc_process_setup+0x44c>)
    1b0c:	88db      	ldrh	r3, [r3, #6]
    1b0e:	2b00      	cmp	r3, #0
    1b10:	d000      	beq.n	1b14 <udc_process_setup+0x3dc>
    1b12:	e626      	b.n	1762 <udc_process_setup+0x2a>
    1b14:	4b1b      	ldr	r3, [pc, #108]	; (1b84 <udc_process_setup+0x44c>)
    1b16:	885b      	ldrh	r3, [r3, #2]
    1b18:	2b00      	cmp	r3, #0
    1b1a:	d000      	beq.n	1b1e <udc_process_setup+0x3e6>
    1b1c:	e621      	b.n	1762 <udc_process_setup+0x2a>
    1b1e:	4c19      	ldr	r4, [pc, #100]	; (1b84 <udc_process_setup+0x44c>)
    1b20:	7920      	ldrb	r0, [r4, #4]
    1b22:	4b1f      	ldr	r3, [pc, #124]	; (1ba0 <udc_process_setup+0x468>)
    1b24:	4798      	blx	r3
    1b26:	7920      	ldrb	r0, [r4, #4]
    1b28:	4b1e      	ldr	r3, [pc, #120]	; (1ba4 <udc_process_setup+0x46c>)
    1b2a:	4798      	blx	r3
    1b2c:	e76d      	b.n	1a0a <udc_process_setup+0x2d2>
    1b2e:	2000      	movs	r0, #0
    1b30:	e76b      	b.n	1a0a <udc_process_setup+0x2d2>
    1b32:	4b15      	ldr	r3, [pc, #84]	; (1b88 <udc_process_setup+0x450>)
    1b34:	781b      	ldrb	r3, [r3, #0]
    1b36:	2b00      	cmp	r3, #0
    1b38:	d100      	bne.n	1b3c <udc_process_setup+0x404>
    1b3a:	e61a      	b.n	1772 <udc_process_setup+0x3a>
    1b3c:	4b13      	ldr	r3, [pc, #76]	; (1b8c <udc_process_setup+0x454>)
    1b3e:	681b      	ldr	r3, [r3, #0]
    1b40:	681a      	ldr	r2, [r3, #0]
    1b42:	7912      	ldrb	r2, [r2, #4]
    1b44:	2a00      	cmp	r2, #0
    1b46:	d01a      	beq.n	1b7e <udc_process_setup+0x446>
    1b48:	2500      	movs	r5, #0
    1b4a:	4e11      	ldr	r6, [pc, #68]	; (1b90 <udc_process_setup+0x458>)
    1b4c:	4f0f      	ldr	r7, [pc, #60]	; (1b8c <udc_process_setup+0x454>)
    1b4e:	685b      	ldr	r3, [r3, #4]
    1b50:	00aa      	lsls	r2, r5, #2
    1b52:	58d4      	ldr	r4, [r2, r3]
    1b54:	68e3      	ldr	r3, [r4, #12]
    1b56:	4798      	blx	r3
    1b58:	0001      	movs	r1, r0
    1b5a:	0028      	movs	r0, r5
    1b5c:	47b0      	blx	r6
    1b5e:	2800      	cmp	r0, #0
    1b60:	d100      	bne.n	1b64 <udc_process_setup+0x42c>
    1b62:	e606      	b.n	1772 <udc_process_setup+0x3a>
    1b64:	68a3      	ldr	r3, [r4, #8]
    1b66:	4798      	blx	r3
    1b68:	2800      	cmp	r0, #0
    1b6a:	d000      	beq.n	1b6e <udc_process_setup+0x436>
    1b6c:	e601      	b.n	1772 <udc_process_setup+0x3a>
    1b6e:	3501      	adds	r5, #1
    1b70:	b2ed      	uxtb	r5, r5
    1b72:	683b      	ldr	r3, [r7, #0]
    1b74:	681a      	ldr	r2, [r3, #0]
    1b76:	7912      	ldrb	r2, [r2, #4]
    1b78:	42aa      	cmp	r2, r5
    1b7a:	d8e8      	bhi.n	1b4e <udc_process_setup+0x416>
    1b7c:	e5f9      	b.n	1772 <udc_process_setup+0x3a>
    1b7e:	2000      	movs	r0, #0
    1b80:	e5f7      	b.n	1772 <udc_process_setup+0x3a>
    1b82:	46c0      	nop			; (mov r8, r8)
    1b84:	200005cc 	.word	0x200005cc
    1b88:	2000017c 	.word	0x2000017c
    1b8c:	20000180 	.word	0x20000180
    1b90:	00001545 	.word	0x00001545
    1b94:	000015b9 	.word	0x000015b9
    1b98:	00001625 	.word	0x00001625
    1b9c:	00004515 	.word	0x00004515
    1ba0:	00004225 	.word	0x00004225
    1ba4:	000043e5 	.word	0x000043e5

00001ba8 <cpu_irq_enter_critical>:
    1ba8:	4b0c      	ldr	r3, [pc, #48]	; (1bdc <cpu_irq_enter_critical+0x34>)
    1baa:	681b      	ldr	r3, [r3, #0]
    1bac:	2b00      	cmp	r3, #0
    1bae:	d106      	bne.n	1bbe <cpu_irq_enter_critical+0x16>
    1bb0:	f3ef 8310 	mrs	r3, PRIMASK
    1bb4:	2b00      	cmp	r3, #0
    1bb6:	d007      	beq.n	1bc8 <cpu_irq_enter_critical+0x20>
    1bb8:	2200      	movs	r2, #0
    1bba:	4b09      	ldr	r3, [pc, #36]	; (1be0 <cpu_irq_enter_critical+0x38>)
    1bbc:	701a      	strb	r2, [r3, #0]
    1bbe:	4a07      	ldr	r2, [pc, #28]	; (1bdc <cpu_irq_enter_critical+0x34>)
    1bc0:	6813      	ldr	r3, [r2, #0]
    1bc2:	3301      	adds	r3, #1
    1bc4:	6013      	str	r3, [r2, #0]
    1bc6:	4770      	bx	lr
    1bc8:	b672      	cpsid	i
    1bca:	f3bf 8f5f 	dmb	sy
    1bce:	2200      	movs	r2, #0
    1bd0:	4b04      	ldr	r3, [pc, #16]	; (1be4 <cpu_irq_enter_critical+0x3c>)
    1bd2:	701a      	strb	r2, [r3, #0]
    1bd4:	3201      	adds	r2, #1
    1bd6:	4b02      	ldr	r3, [pc, #8]	; (1be0 <cpu_irq_enter_critical+0x38>)
    1bd8:	701a      	strb	r2, [r3, #0]
    1bda:	e7f0      	b.n	1bbe <cpu_irq_enter_critical+0x16>
    1bdc:	20000188 	.word	0x20000188
    1be0:	2000018c 	.word	0x2000018c
    1be4:	20000116 	.word	0x20000116

00001be8 <cpu_irq_leave_critical>:
    1be8:	4b08      	ldr	r3, [pc, #32]	; (1c0c <cpu_irq_leave_critical+0x24>)
    1bea:	681a      	ldr	r2, [r3, #0]
    1bec:	3a01      	subs	r2, #1
    1bee:	601a      	str	r2, [r3, #0]
    1bf0:	681b      	ldr	r3, [r3, #0]
    1bf2:	2b00      	cmp	r3, #0
    1bf4:	d109      	bne.n	1c0a <cpu_irq_leave_critical+0x22>
    1bf6:	4b06      	ldr	r3, [pc, #24]	; (1c10 <cpu_irq_leave_critical+0x28>)
    1bf8:	781b      	ldrb	r3, [r3, #0]
    1bfa:	2b00      	cmp	r3, #0
    1bfc:	d005      	beq.n	1c0a <cpu_irq_leave_critical+0x22>
    1bfe:	2201      	movs	r2, #1
    1c00:	4b04      	ldr	r3, [pc, #16]	; (1c14 <cpu_irq_leave_critical+0x2c>)
    1c02:	701a      	strb	r2, [r3, #0]
    1c04:	f3bf 8f5f 	dmb	sy
    1c08:	b662      	cpsie	i
    1c0a:	4770      	bx	lr
    1c0c:	20000188 	.word	0x20000188
    1c10:	2000018c 	.word	0x2000018c
    1c14:	20000116 	.word	0x20000116

00001c18 <adc_get_config_defaults>:
    1c18:	b510      	push	{r4, lr}
    1c1a:	2200      	movs	r2, #0
    1c1c:	2300      	movs	r3, #0
    1c1e:	7002      	strb	r2, [r0, #0]
    1c20:	7042      	strb	r2, [r0, #1]
    1c22:	2100      	movs	r1, #0
    1c24:	8042      	strh	r2, [r0, #2]
    1c26:	7101      	strb	r1, [r0, #4]
    1c28:	7603      	strb	r3, [r0, #24]
    1c2a:	6202      	str	r2, [r0, #32]
    1c2c:	61c2      	str	r2, [r0, #28]
    1c2e:	6082      	str	r2, [r0, #8]
    1c30:	7303      	strb	r3, [r0, #12]
    1c32:	24c0      	movs	r4, #192	; 0xc0
    1c34:	0164      	lsls	r4, r4, #5
    1c36:	81c4      	strh	r4, [r0, #14]
    1c38:	7403      	strb	r3, [r0, #16]
    1c3a:	7443      	strb	r3, [r0, #17]
    1c3c:	7483      	strb	r3, [r0, #18]
    1c3e:	74c3      	strb	r3, [r0, #19]
    1c40:	7503      	strb	r3, [r0, #20]
    1c42:	242a      	movs	r4, #42	; 0x2a
    1c44:	5503      	strb	r3, [r0, r4]
    1c46:	7543      	strb	r3, [r0, #21]
    1c48:	7583      	strb	r3, [r0, #22]
    1c4a:	3c06      	subs	r4, #6
    1c4c:	5503      	strb	r3, [r0, r4]
    1c4e:	84c2      	strh	r2, [r0, #38]	; 0x26
    1c50:	8502      	strh	r2, [r0, #40]	; 0x28
    1c52:	75c1      	strb	r1, [r0, #23]
    1c54:	232b      	movs	r3, #43	; 0x2b
    1c56:	54c1      	strb	r1, [r0, r3]
    1c58:	3301      	adds	r3, #1
    1c5a:	54c1      	strb	r1, [r0, r3]
    1c5c:	bd10      	pop	{r4, pc}
	...

00001c60 <adc_init>:
    1c60:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c62:	46d6      	mov	lr, sl
    1c64:	464f      	mov	r7, r9
    1c66:	4646      	mov	r6, r8
    1c68:	b5c0      	push	{r6, r7, lr}
    1c6a:	b096      	sub	sp, #88	; 0x58
    1c6c:	0007      	movs	r7, r0
    1c6e:	0016      	movs	r6, r2
    1c70:	6001      	str	r1, [r0, #0]
    1c72:	4acb      	ldr	r2, [pc, #812]	; (1fa0 <adc_init+0x340>)
    1c74:	6a10      	ldr	r0, [r2, #32]
    1c76:	2380      	movs	r3, #128	; 0x80
    1c78:	025b      	lsls	r3, r3, #9
    1c7a:	4303      	orrs	r3, r0
    1c7c:	6213      	str	r3, [r2, #32]
    1c7e:	780b      	ldrb	r3, [r1, #0]
    1c80:	2005      	movs	r0, #5
    1c82:	07db      	lsls	r3, r3, #31
    1c84:	d505      	bpl.n	1c92 <adc_init+0x32>
    1c86:	b016      	add	sp, #88	; 0x58
    1c88:	bc1c      	pop	{r2, r3, r4}
    1c8a:	4690      	mov	r8, r2
    1c8c:	4699      	mov	r9, r3
    1c8e:	46a2      	mov	sl, r4
    1c90:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1c92:	780b      	ldrb	r3, [r1, #0]
    1c94:	3017      	adds	r0, #23
    1c96:	079b      	lsls	r3, r3, #30
    1c98:	d4f5      	bmi.n	1c86 <adc_init+0x26>
    1c9a:	7873      	ldrb	r3, [r6, #1]
    1c9c:	713b      	strb	r3, [r7, #4]
    1c9e:	2b00      	cmp	r3, #0
    1ca0:	d104      	bne.n	1cac <adc_init+0x4c>
    1ca2:	4ac0      	ldr	r2, [pc, #768]	; (1fa4 <adc_init+0x344>)
    1ca4:	6c13      	ldr	r3, [r2, #64]	; 0x40
    1ca6:	2104      	movs	r1, #4
    1ca8:	430b      	orrs	r3, r1
    1caa:	6413      	str	r3, [r2, #64]	; 0x40
    1cac:	683b      	ldr	r3, [r7, #0]
    1cae:	4698      	mov	r8, r3
    1cb0:	7833      	ldrb	r3, [r6, #0]
    1cb2:	466a      	mov	r2, sp
    1cb4:	7013      	strb	r3, [r2, #0]
    1cb6:	4669      	mov	r1, sp
    1cb8:	201e      	movs	r0, #30
    1cba:	4bbb      	ldr	r3, [pc, #748]	; (1fa8 <adc_init+0x348>)
    1cbc:	4798      	blx	r3
    1cbe:	201e      	movs	r0, #30
    1cc0:	4bba      	ldr	r3, [pc, #744]	; (1fac <adc_init+0x34c>)
    1cc2:	4798      	blx	r3
    1cc4:	232c      	movs	r3, #44	; 0x2c
    1cc6:	5cf2      	ldrb	r2, [r6, r3]
    1cc8:	2a00      	cmp	r2, #0
    1cca:	d054      	beq.n	1d76 <adc_init+0x116>
    1ccc:	3b01      	subs	r3, #1
    1cce:	5cf5      	ldrb	r5, [r6, r3]
    1cd0:	7b33      	ldrb	r3, [r6, #12]
    1cd2:	18eb      	adds	r3, r5, r3
    1cd4:	b2db      	uxtb	r3, r3
    1cd6:	18d1      	adds	r1, r2, r3
    1cd8:	b2c9      	uxtb	r1, r1
    1cda:	428b      	cmp	r3, r1
    1cdc:	d221      	bcs.n	1d22 <adc_init+0xc2>
    1cde:	1952      	adds	r2, r2, r5
    1ce0:	b2d3      	uxtb	r3, r2
    1ce2:	4699      	mov	r9, r3
    1ce4:	4bb2      	ldr	r3, [pc, #712]	; (1fb0 <adc_init+0x350>)
    1ce6:	469a      	mov	sl, r3
    1ce8:	e003      	b.n	1cf2 <adc_init+0x92>
    1cea:	3501      	adds	r5, #1
    1cec:	b2ed      	uxtb	r5, r5
    1cee:	45a9      	cmp	r9, r5
    1cf0:	d017      	beq.n	1d22 <adc_init+0xc2>
    1cf2:	240f      	movs	r4, #15
    1cf4:	402c      	ands	r4, r5
    1cf6:	7b33      	ldrb	r3, [r6, #12]
    1cf8:	18e4      	adds	r4, r4, r3
    1cfa:	2250      	movs	r2, #80	; 0x50
    1cfc:	49ad      	ldr	r1, [pc, #692]	; (1fb4 <adc_init+0x354>)
    1cfe:	a802      	add	r0, sp, #8
    1d00:	47d0      	blx	sl
    1d02:	2c13      	cmp	r4, #19
    1d04:	d8f1      	bhi.n	1cea <adc_init+0x8a>
    1d06:	00a4      	lsls	r4, r4, #2
    1d08:	ab02      	add	r3, sp, #8
    1d0a:	58e0      	ldr	r0, [r4, r3]
    1d0c:	a901      	add	r1, sp, #4
    1d0e:	2300      	movs	r3, #0
    1d10:	704b      	strb	r3, [r1, #1]
    1d12:	70cb      	strb	r3, [r1, #3]
    1d14:	708b      	strb	r3, [r1, #2]
    1d16:	3301      	adds	r3, #1
    1d18:	700b      	strb	r3, [r1, #0]
    1d1a:	b2c0      	uxtb	r0, r0
    1d1c:	4ba6      	ldr	r3, [pc, #664]	; (1fb8 <adc_init+0x358>)
    1d1e:	4798      	blx	r3
    1d20:	e7e3      	b.n	1cea <adc_init+0x8a>
    1d22:	89f4      	ldrh	r4, [r6, #14]
    1d24:	2250      	movs	r2, #80	; 0x50
    1d26:	49a3      	ldr	r1, [pc, #652]	; (1fb4 <adc_init+0x354>)
    1d28:	a802      	add	r0, sp, #8
    1d2a:	4ba1      	ldr	r3, [pc, #644]	; (1fb0 <adc_init+0x350>)
    1d2c:	4798      	blx	r3
    1d2e:	2c13      	cmp	r4, #19
    1d30:	d913      	bls.n	1d5a <adc_init+0xfa>
    1d32:	7d73      	ldrb	r3, [r6, #21]
    1d34:	009b      	lsls	r3, r3, #2
    1d36:	b2db      	uxtb	r3, r3
    1d38:	4642      	mov	r2, r8
    1d3a:	7013      	strb	r3, [r2, #0]
    1d3c:	7db3      	ldrb	r3, [r6, #22]
    1d3e:	01db      	lsls	r3, r3, #7
    1d40:	7872      	ldrb	r2, [r6, #1]
    1d42:	4313      	orrs	r3, r2
    1d44:	b2db      	uxtb	r3, r3
    1d46:	4642      	mov	r2, r8
    1d48:	7053      	strb	r3, [r2, #1]
    1d4a:	7933      	ldrb	r3, [r6, #4]
    1d4c:	2b34      	cmp	r3, #52	; 0x34
    1d4e:	d900      	bls.n	1d52 <adc_init+0xf2>
    1d50:	e178      	b.n	2044 <STACK_SIZE+0x44>
    1d52:	009b      	lsls	r3, r3, #2
    1d54:	4a99      	ldr	r2, [pc, #612]	; (1fbc <adc_init+0x35c>)
    1d56:	58d3      	ldr	r3, [r2, r3]
    1d58:	469f      	mov	pc, r3
    1d5a:	00a4      	lsls	r4, r4, #2
    1d5c:	ab02      	add	r3, sp, #8
    1d5e:	58e0      	ldr	r0, [r4, r3]
    1d60:	a901      	add	r1, sp, #4
    1d62:	2300      	movs	r3, #0
    1d64:	704b      	strb	r3, [r1, #1]
    1d66:	70cb      	strb	r3, [r1, #3]
    1d68:	708b      	strb	r3, [r1, #2]
    1d6a:	3301      	adds	r3, #1
    1d6c:	700b      	strb	r3, [r1, #0]
    1d6e:	b2c0      	uxtb	r0, r0
    1d70:	4b91      	ldr	r3, [pc, #580]	; (1fb8 <adc_init+0x358>)
    1d72:	4798      	blx	r3
    1d74:	e7dd      	b.n	1d32 <adc_init+0xd2>
    1d76:	7b34      	ldrb	r4, [r6, #12]
    1d78:	2250      	movs	r2, #80	; 0x50
    1d7a:	498e      	ldr	r1, [pc, #568]	; (1fb4 <adc_init+0x354>)
    1d7c:	a802      	add	r0, sp, #8
    1d7e:	4b8c      	ldr	r3, [pc, #560]	; (1fb0 <adc_init+0x350>)
    1d80:	4798      	blx	r3
    1d82:	2c13      	cmp	r4, #19
    1d84:	d915      	bls.n	1db2 <adc_init+0x152>
    1d86:	89f4      	ldrh	r4, [r6, #14]
    1d88:	2250      	movs	r2, #80	; 0x50
    1d8a:	498a      	ldr	r1, [pc, #552]	; (1fb4 <adc_init+0x354>)
    1d8c:	a802      	add	r0, sp, #8
    1d8e:	4b88      	ldr	r3, [pc, #544]	; (1fb0 <adc_init+0x350>)
    1d90:	4798      	blx	r3
    1d92:	2c13      	cmp	r4, #19
    1d94:	d8cd      	bhi.n	1d32 <adc_init+0xd2>
    1d96:	00a4      	lsls	r4, r4, #2
    1d98:	ab02      	add	r3, sp, #8
    1d9a:	58e0      	ldr	r0, [r4, r3]
    1d9c:	a901      	add	r1, sp, #4
    1d9e:	2300      	movs	r3, #0
    1da0:	704b      	strb	r3, [r1, #1]
    1da2:	70cb      	strb	r3, [r1, #3]
    1da4:	708b      	strb	r3, [r1, #2]
    1da6:	3301      	adds	r3, #1
    1da8:	700b      	strb	r3, [r1, #0]
    1daa:	b2c0      	uxtb	r0, r0
    1dac:	4b82      	ldr	r3, [pc, #520]	; (1fb8 <adc_init+0x358>)
    1dae:	4798      	blx	r3
    1db0:	e7bf      	b.n	1d32 <adc_init+0xd2>
    1db2:	00a4      	lsls	r4, r4, #2
    1db4:	ab02      	add	r3, sp, #8
    1db6:	58e0      	ldr	r0, [r4, r3]
    1db8:	a901      	add	r1, sp, #4
    1dba:	2300      	movs	r3, #0
    1dbc:	704b      	strb	r3, [r1, #1]
    1dbe:	70cb      	strb	r3, [r1, #3]
    1dc0:	708b      	strb	r3, [r1, #2]
    1dc2:	3301      	adds	r3, #1
    1dc4:	700b      	strb	r3, [r1, #0]
    1dc6:	b2c0      	uxtb	r0, r0
    1dc8:	4b7b      	ldr	r3, [pc, #492]	; (1fb8 <adc_init+0x358>)
    1dca:	4798      	blx	r3
    1dcc:	e7db      	b.n	1d86 <adc_init+0x126>
    1dce:	2304      	movs	r3, #4
    1dd0:	2410      	movs	r4, #16
    1dd2:	2102      	movs	r1, #2
    1dd4:	e01a      	b.n	1e0c <adc_init+0x1ac>
    1dd6:	7c71      	ldrb	r1, [r6, #17]
    1dd8:	7c33      	ldrb	r3, [r6, #16]
    1dda:	2410      	movs	r4, #16
    1ddc:	e016      	b.n	1e0c <adc_init+0x1ac>
    1dde:	2306      	movs	r3, #6
    1de0:	2410      	movs	r4, #16
    1de2:	2101      	movs	r1, #1
    1de4:	e012      	b.n	1e0c <adc_init+0x1ac>
    1de6:	2308      	movs	r3, #8
    1de8:	2410      	movs	r4, #16
    1dea:	2100      	movs	r1, #0
    1dec:	e00e      	b.n	1e0c <adc_init+0x1ac>
    1dee:	2300      	movs	r3, #0
    1df0:	2430      	movs	r4, #48	; 0x30
    1df2:	2100      	movs	r1, #0
    1df4:	e00a      	b.n	1e0c <adc_init+0x1ac>
    1df6:	2300      	movs	r3, #0
    1df8:	2420      	movs	r4, #32
    1dfa:	2100      	movs	r1, #0
    1dfc:	e006      	b.n	1e0c <adc_init+0x1ac>
    1dfe:	2300      	movs	r3, #0
    1e00:	2400      	movs	r4, #0
    1e02:	2100      	movs	r1, #0
    1e04:	e002      	b.n	1e0c <adc_init+0x1ac>
    1e06:	2302      	movs	r3, #2
    1e08:	2410      	movs	r4, #16
    1e0a:	2101      	movs	r1, #1
    1e0c:	0109      	lsls	r1, r1, #4
    1e0e:	2270      	movs	r2, #112	; 0x70
    1e10:	400a      	ands	r2, r1
    1e12:	4313      	orrs	r3, r2
    1e14:	4642      	mov	r2, r8
    1e16:	7093      	strb	r3, [r2, #2]
    1e18:	7df3      	ldrb	r3, [r6, #23]
    1e1a:	2017      	movs	r0, #23
    1e1c:	2b3f      	cmp	r3, #63	; 0x3f
    1e1e:	d900      	bls.n	1e22 <adc_init+0x1c2>
    1e20:	e731      	b.n	1c86 <adc_init+0x26>
    1e22:	70d3      	strb	r3, [r2, #3]
    1e24:	683a      	ldr	r2, [r7, #0]
    1e26:	7e53      	ldrb	r3, [r2, #25]
    1e28:	b25b      	sxtb	r3, r3
    1e2a:	2b00      	cmp	r3, #0
    1e2c:	dbfb      	blt.n	1e26 <adc_init+0x1c6>
    1e2e:	7cf3      	ldrb	r3, [r6, #19]
    1e30:	8872      	ldrh	r2, [r6, #2]
    1e32:	4313      	orrs	r3, r2
    1e34:	2224      	movs	r2, #36	; 0x24
    1e36:	5cb2      	ldrb	r2, [r6, r2]
    1e38:	00d2      	lsls	r2, r2, #3
    1e3a:	4313      	orrs	r3, r2
    1e3c:	7d32      	ldrb	r2, [r6, #20]
    1e3e:	0092      	lsls	r2, r2, #2
    1e40:	4313      	orrs	r3, r2
    1e42:	7cb2      	ldrb	r2, [r6, #18]
    1e44:	0052      	lsls	r2, r2, #1
    1e46:	4313      	orrs	r3, r2
    1e48:	4323      	orrs	r3, r4
    1e4a:	4642      	mov	r2, r8
    1e4c:	8093      	strh	r3, [r2, #4]
    1e4e:	7e33      	ldrb	r3, [r6, #24]
    1e50:	2b00      	cmp	r3, #0
    1e52:	d020      	beq.n	1e96 <adc_init+0x236>
    1e54:	2c10      	cmp	r4, #16
    1e56:	d100      	bne.n	1e5a <adc_init+0x1fa>
    1e58:	e0d6      	b.n	2008 <STACK_SIZE+0x8>
    1e5a:	d800      	bhi.n	1e5e <adc_init+0x1fe>
    1e5c:	e080      	b.n	1f60 <adc_init+0x300>
    1e5e:	2c20      	cmp	r4, #32
    1e60:	d100      	bne.n	1e64 <adc_init+0x204>
    1e62:	e0b3      	b.n	1fcc <adc_init+0x36c>
    1e64:	2c30      	cmp	r4, #48	; 0x30
    1e66:	d116      	bne.n	1e96 <adc_init+0x236>
    1e68:	7cf2      	ldrb	r2, [r6, #19]
    1e6a:	2a00      	cmp	r2, #0
    1e6c:	d00a      	beq.n	1e84 <adc_init+0x224>
    1e6e:	69f2      	ldr	r2, [r6, #28]
    1e70:	3280      	adds	r2, #128	; 0x80
    1e72:	2017      	movs	r0, #23
    1e74:	2aff      	cmp	r2, #255	; 0xff
    1e76:	d900      	bls.n	1e7a <adc_init+0x21a>
    1e78:	e705      	b.n	1c86 <adc_init+0x26>
    1e7a:	6a32      	ldr	r2, [r6, #32]
    1e7c:	3280      	adds	r2, #128	; 0x80
    1e7e:	2aff      	cmp	r2, #255	; 0xff
    1e80:	d900      	bls.n	1e84 <adc_init+0x224>
    1e82:	e700      	b.n	1c86 <adc_init+0x26>
    1e84:	2017      	movs	r0, #23
    1e86:	69f2      	ldr	r2, [r6, #28]
    1e88:	2aff      	cmp	r2, #255	; 0xff
    1e8a:	dd00      	ble.n	1e8e <adc_init+0x22e>
    1e8c:	e6fb      	b.n	1c86 <adc_init+0x26>
    1e8e:	6a32      	ldr	r2, [r6, #32]
    1e90:	2aff      	cmp	r2, #255	; 0xff
    1e92:	dd00      	ble.n	1e96 <adc_init+0x236>
    1e94:	e6f7      	b.n	1c86 <adc_init+0x26>
    1e96:	6839      	ldr	r1, [r7, #0]
    1e98:	7e4a      	ldrb	r2, [r1, #25]
    1e9a:	b252      	sxtb	r2, r2
    1e9c:	2a00      	cmp	r2, #0
    1e9e:	dbfb      	blt.n	1e98 <adc_init+0x238>
    1ea0:	4642      	mov	r2, r8
    1ea2:	7213      	strb	r3, [r2, #8]
    1ea4:	683a      	ldr	r2, [r7, #0]
    1ea6:	7e53      	ldrb	r3, [r2, #25]
    1ea8:	b25b      	sxtb	r3, r3
    1eaa:	2b00      	cmp	r3, #0
    1eac:	dbfb      	blt.n	1ea6 <adc_init+0x246>
    1eae:	8bb3      	ldrh	r3, [r6, #28]
    1eb0:	4642      	mov	r2, r8
    1eb2:	8393      	strh	r3, [r2, #28]
    1eb4:	683a      	ldr	r2, [r7, #0]
    1eb6:	7e53      	ldrb	r3, [r2, #25]
    1eb8:	b25b      	sxtb	r3, r3
    1eba:	2b00      	cmp	r3, #0
    1ebc:	dbfb      	blt.n	1eb6 <adc_init+0x256>
    1ebe:	8c33      	ldrh	r3, [r6, #32]
    1ec0:	4642      	mov	r2, r8
    1ec2:	8413      	strh	r3, [r2, #32]
    1ec4:	232c      	movs	r3, #44	; 0x2c
    1ec6:	5cf3      	ldrb	r3, [r6, r3]
    1ec8:	2b00      	cmp	r3, #0
    1eca:	d005      	beq.n	1ed8 <adc_init+0x278>
    1ecc:	3b01      	subs	r3, #1
    1ece:	b2db      	uxtb	r3, r3
    1ed0:	2017      	movs	r0, #23
    1ed2:	2b0f      	cmp	r3, #15
    1ed4:	d900      	bls.n	1ed8 <adc_init+0x278>
    1ed6:	e6d6      	b.n	1c86 <adc_init+0x26>
    1ed8:	222b      	movs	r2, #43	; 0x2b
    1eda:	5cb1      	ldrb	r1, [r6, r2]
    1edc:	2017      	movs	r0, #23
    1ede:	290f      	cmp	r1, #15
    1ee0:	d900      	bls.n	1ee4 <adc_init+0x284>
    1ee2:	e6d0      	b.n	1c86 <adc_init+0x26>
    1ee4:	6838      	ldr	r0, [r7, #0]
    1ee6:	7e42      	ldrb	r2, [r0, #25]
    1ee8:	b252      	sxtb	r2, r2
    1eea:	2a00      	cmp	r2, #0
    1eec:	dbfb      	blt.n	1ee6 <adc_init+0x286>
    1eee:	89f2      	ldrh	r2, [r6, #14]
    1ef0:	7b30      	ldrb	r0, [r6, #12]
    1ef2:	4302      	orrs	r2, r0
    1ef4:	68b0      	ldr	r0, [r6, #8]
    1ef6:	4302      	orrs	r2, r0
    1ef8:	0509      	lsls	r1, r1, #20
    1efa:	430a      	orrs	r2, r1
    1efc:	041b      	lsls	r3, r3, #16
    1efe:	4313      	orrs	r3, r2
    1f00:	4642      	mov	r2, r8
    1f02:	6113      	str	r3, [r2, #16]
    1f04:	232a      	movs	r3, #42	; 0x2a
    1f06:	5cf3      	ldrb	r3, [r6, r3]
    1f08:	7513      	strb	r3, [r2, #20]
    1f0a:	230f      	movs	r3, #15
    1f0c:	7593      	strb	r3, [r2, #22]
    1f0e:	3315      	adds	r3, #21
    1f10:	5cf3      	ldrb	r3, [r6, r3]
    1f12:	2b00      	cmp	r3, #0
    1f14:	d012      	beq.n	1f3c <adc_init+0x2dc>
    1f16:	8cf3      	ldrh	r3, [r6, #38]	; 0x26
    1f18:	4a29      	ldr	r2, [pc, #164]	; (1fc0 <adc_init+0x360>)
    1f1a:	2017      	movs	r0, #23
    1f1c:	4293      	cmp	r3, r2
    1f1e:	d900      	bls.n	1f22 <adc_init+0x2c2>
    1f20:	e6b1      	b.n	1c86 <adc_init+0x26>
    1f22:	4642      	mov	r2, r8
    1f24:	8493      	strh	r3, [r2, #36]	; 0x24
    1f26:	8d32      	ldrh	r2, [r6, #40]	; 0x28
    1f28:	2380      	movs	r3, #128	; 0x80
    1f2a:	011b      	lsls	r3, r3, #4
    1f2c:	18d3      	adds	r3, r2, r3
    1f2e:	4924      	ldr	r1, [pc, #144]	; (1fc0 <adc_init+0x360>)
    1f30:	b29b      	uxth	r3, r3
    1f32:	428b      	cmp	r3, r1
    1f34:	d900      	bls.n	1f38 <adc_init+0x2d8>
    1f36:	e6a6      	b.n	1c86 <adc_init+0x26>
    1f38:	4643      	mov	r3, r8
    1f3a:	84da      	strh	r2, [r3, #38]	; 0x26
    1f3c:	4b21      	ldr	r3, [pc, #132]	; (1fc4 <adc_init+0x364>)
    1f3e:	681b      	ldr	r3, [r3, #0]
    1f40:	015b      	lsls	r3, r3, #5
    1f42:	22e0      	movs	r2, #224	; 0xe0
    1f44:	00d2      	lsls	r2, r2, #3
    1f46:	4013      	ands	r3, r2
    1f48:	4a1f      	ldr	r2, [pc, #124]	; (1fc8 <adc_init+0x368>)
    1f4a:	6851      	ldr	r1, [r2, #4]
    1f4c:	0149      	lsls	r1, r1, #5
    1f4e:	6812      	ldr	r2, [r2, #0]
    1f50:	0ed2      	lsrs	r2, r2, #27
    1f52:	430a      	orrs	r2, r1
    1f54:	b2d2      	uxtb	r2, r2
    1f56:	4313      	orrs	r3, r2
    1f58:	4642      	mov	r2, r8
    1f5a:	8513      	strh	r3, [r2, #40]	; 0x28
    1f5c:	2000      	movs	r0, #0
    1f5e:	e692      	b.n	1c86 <adc_init+0x26>
    1f60:	2c00      	cmp	r4, #0
    1f62:	d198      	bne.n	1e96 <adc_init+0x236>
    1f64:	7cf2      	ldrb	r2, [r6, #19]
    1f66:	2a00      	cmp	r2, #0
    1f68:	d00f      	beq.n	1f8a <adc_init+0x32a>
    1f6a:	69f2      	ldr	r2, [r6, #28]
    1f6c:	2180      	movs	r1, #128	; 0x80
    1f6e:	0109      	lsls	r1, r1, #4
    1f70:	468c      	mov	ip, r1
    1f72:	4462      	add	r2, ip
    1f74:	4912      	ldr	r1, [pc, #72]	; (1fc0 <adc_init+0x360>)
    1f76:	2017      	movs	r0, #23
    1f78:	428a      	cmp	r2, r1
    1f7a:	d900      	bls.n	1f7e <adc_init+0x31e>
    1f7c:	e683      	b.n	1c86 <adc_init+0x26>
    1f7e:	6a32      	ldr	r2, [r6, #32]
    1f80:	4462      	add	r2, ip
    1f82:	490f      	ldr	r1, [pc, #60]	; (1fc0 <adc_init+0x360>)
    1f84:	428a      	cmp	r2, r1
    1f86:	d900      	bls.n	1f8a <adc_init+0x32a>
    1f88:	e67d      	b.n	1c86 <adc_init+0x26>
    1f8a:	4a0d      	ldr	r2, [pc, #52]	; (1fc0 <adc_init+0x360>)
    1f8c:	2017      	movs	r0, #23
    1f8e:	69f1      	ldr	r1, [r6, #28]
    1f90:	4291      	cmp	r1, r2
    1f92:	dd00      	ble.n	1f96 <adc_init+0x336>
    1f94:	e677      	b.n	1c86 <adc_init+0x26>
    1f96:	6a31      	ldr	r1, [r6, #32]
    1f98:	4291      	cmp	r1, r2
    1f9a:	dd00      	ble.n	1f9e <adc_init+0x33e>
    1f9c:	e673      	b.n	1c86 <adc_init+0x26>
    1f9e:	e77a      	b.n	1e96 <adc_init+0x236>
    1fa0:	40000400 	.word	0x40000400
    1fa4:	40000800 	.word	0x40000800
    1fa8:	00002fd5 	.word	0x00002fd5
    1fac:	00002f49 	.word	0x00002f49
    1fb0:	00007d81 	.word	0x00007d81
    1fb4:	00007f78 	.word	0x00007f78
    1fb8:	000030cd 	.word	0x000030cd
    1fbc:	00007ea4 	.word	0x00007ea4
    1fc0:	00000fff 	.word	0x00000fff
    1fc4:	00806024 	.word	0x00806024
    1fc8:	00806020 	.word	0x00806020
    1fcc:	7cf2      	ldrb	r2, [r6, #19]
    1fce:	2a00      	cmp	r2, #0
    1fd0:	d00f      	beq.n	1ff2 <adc_init+0x392>
    1fd2:	69f2      	ldr	r2, [r6, #28]
    1fd4:	2180      	movs	r1, #128	; 0x80
    1fd6:	0089      	lsls	r1, r1, #2
    1fd8:	468c      	mov	ip, r1
    1fda:	4462      	add	r2, ip
    1fdc:	491a      	ldr	r1, [pc, #104]	; (2048 <STACK_SIZE+0x48>)
    1fde:	2017      	movs	r0, #23
    1fe0:	428a      	cmp	r2, r1
    1fe2:	d900      	bls.n	1fe6 <adc_init+0x386>
    1fe4:	e64f      	b.n	1c86 <adc_init+0x26>
    1fe6:	6a32      	ldr	r2, [r6, #32]
    1fe8:	4462      	add	r2, ip
    1fea:	4917      	ldr	r1, [pc, #92]	; (2048 <STACK_SIZE+0x48>)
    1fec:	428a      	cmp	r2, r1
    1fee:	d900      	bls.n	1ff2 <adc_init+0x392>
    1ff0:	e649      	b.n	1c86 <adc_init+0x26>
    1ff2:	4a15      	ldr	r2, [pc, #84]	; (2048 <STACK_SIZE+0x48>)
    1ff4:	2017      	movs	r0, #23
    1ff6:	69f1      	ldr	r1, [r6, #28]
    1ff8:	4291      	cmp	r1, r2
    1ffa:	dd00      	ble.n	1ffe <adc_init+0x39e>
    1ffc:	e643      	b.n	1c86 <adc_init+0x26>
    1ffe:	6a31      	ldr	r1, [r6, #32]
    2000:	4291      	cmp	r1, r2
    2002:	dd00      	ble.n	2006 <STACK_SIZE+0x6>
    2004:	e63f      	b.n	1c86 <adc_init+0x26>
    2006:	e746      	b.n	1e96 <adc_init+0x236>
    2008:	7cf2      	ldrb	r2, [r6, #19]
    200a:	2a00      	cmp	r2, #0
    200c:	d00f      	beq.n	202e <STACK_SIZE+0x2e>
    200e:	69f2      	ldr	r2, [r6, #28]
    2010:	2180      	movs	r1, #128	; 0x80
    2012:	0209      	lsls	r1, r1, #8
    2014:	468c      	mov	ip, r1
    2016:	4462      	add	r2, ip
    2018:	490c      	ldr	r1, [pc, #48]	; (204c <STACK_SIZE+0x4c>)
    201a:	2017      	movs	r0, #23
    201c:	428a      	cmp	r2, r1
    201e:	d900      	bls.n	2022 <STACK_SIZE+0x22>
    2020:	e631      	b.n	1c86 <adc_init+0x26>
    2022:	6a32      	ldr	r2, [r6, #32]
    2024:	4462      	add	r2, ip
    2026:	4909      	ldr	r1, [pc, #36]	; (204c <STACK_SIZE+0x4c>)
    2028:	428a      	cmp	r2, r1
    202a:	d900      	bls.n	202e <STACK_SIZE+0x2e>
    202c:	e62b      	b.n	1c86 <adc_init+0x26>
    202e:	4a07      	ldr	r2, [pc, #28]	; (204c <STACK_SIZE+0x4c>)
    2030:	2017      	movs	r0, #23
    2032:	69f1      	ldr	r1, [r6, #28]
    2034:	4291      	cmp	r1, r2
    2036:	dd00      	ble.n	203a <STACK_SIZE+0x3a>
    2038:	e625      	b.n	1c86 <adc_init+0x26>
    203a:	6a31      	ldr	r1, [r6, #32]
    203c:	4291      	cmp	r1, r2
    203e:	dd00      	ble.n	2042 <STACK_SIZE+0x42>
    2040:	e621      	b.n	1c86 <adc_init+0x26>
    2042:	e728      	b.n	1e96 <adc_init+0x236>
    2044:	2017      	movs	r0, #23
    2046:	e61e      	b.n	1c86 <adc_init+0x26>
    2048:	000003ff 	.word	0x000003ff
    204c:	0000ffff 	.word	0x0000ffff

00002050 <dac_is_syncing>:
    2050:	6803      	ldr	r3, [r0, #0]
    2052:	79d8      	ldrb	r0, [r3, #7]
    2054:	09c0      	lsrs	r0, r0, #7
    2056:	4770      	bx	lr

00002058 <dac_get_config_defaults>:
    2058:	2300      	movs	r3, #0
    205a:	7003      	strb	r3, [r0, #0]
    205c:	2201      	movs	r2, #1
    205e:	7042      	strb	r2, [r0, #1]
    2060:	7083      	strb	r3, [r0, #2]
    2062:	7103      	strb	r3, [r0, #4]
    2064:	7143      	strb	r3, [r0, #5]
    2066:	70c3      	strb	r3, [r0, #3]
    2068:	7183      	strb	r3, [r0, #6]
    206a:	4770      	bx	lr

0000206c <dac_init>:
    206c:	b5f0      	push	{r4, r5, r6, r7, lr}
    206e:	46c6      	mov	lr, r8
    2070:	b500      	push	{lr}
    2072:	b082      	sub	sp, #8
    2074:	0005      	movs	r5, r0
    2076:	0014      	movs	r4, r2
    2078:	6001      	str	r1, [r0, #0]
    207a:	4a27      	ldr	r2, [pc, #156]	; (2118 <dac_init+0xac>)
    207c:	6a10      	ldr	r0, [r2, #32]
    207e:	2380      	movs	r3, #128	; 0x80
    2080:	02db      	lsls	r3, r3, #11
    2082:	4303      	orrs	r3, r0
    2084:	6213      	str	r3, [r2, #32]
    2086:	780b      	ldrb	r3, [r1, #0]
    2088:	201c      	movs	r0, #28
    208a:	079b      	lsls	r3, r3, #30
    208c:	d503      	bpl.n	2096 <dac_init+0x2a>
    208e:	b002      	add	sp, #8
    2090:	bc04      	pop	{r2}
    2092:	4690      	mov	r8, r2
    2094:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2096:	780b      	ldrb	r3, [r1, #0]
    2098:	3817      	subs	r0, #23
    209a:	07db      	lsls	r3, r3, #31
    209c:	d4f7      	bmi.n	208e <dac_init+0x22>
    209e:	a901      	add	r1, sp, #4
    20a0:	78e3      	ldrb	r3, [r4, #3]
    20a2:	700b      	strb	r3, [r1, #0]
    20a4:	301c      	adds	r0, #28
    20a6:	4b1d      	ldr	r3, [pc, #116]	; (211c <dac_init+0xb0>)
    20a8:	4798      	blx	r3
    20aa:	2021      	movs	r0, #33	; 0x21
    20ac:	4b1c      	ldr	r3, [pc, #112]	; (2120 <dac_init+0xb4>)
    20ae:	4798      	blx	r3
    20b0:	2600      	movs	r6, #0
    20b2:	466b      	mov	r3, sp
    20b4:	705e      	strb	r6, [r3, #1]
    20b6:	70de      	strb	r6, [r3, #3]
    20b8:	2301      	movs	r3, #1
    20ba:	466a      	mov	r2, sp
    20bc:	7013      	strb	r3, [r2, #0]
    20be:	7096      	strb	r6, [r2, #2]
    20c0:	4669      	mov	r1, sp
    20c2:	2002      	movs	r0, #2
    20c4:	4b17      	ldr	r3, [pc, #92]	; (2124 <dac_init+0xb8>)
    20c6:	4798      	blx	r3
    20c8:	682b      	ldr	r3, [r5, #0]
    20ca:	4698      	mov	r8, r3
    20cc:	7863      	ldrb	r3, [r4, #1]
    20ce:	712b      	strb	r3, [r5, #4]
    20d0:	71ae      	strb	r6, [r5, #6]
    20d2:	79a3      	ldrb	r3, [r4, #6]
    20d4:	1e5a      	subs	r2, r3, #1
    20d6:	4193      	sbcs	r3, r2
    20d8:	009b      	lsls	r3, r3, #2
    20da:	7826      	ldrb	r6, [r4, #0]
    20dc:	78a2      	ldrb	r2, [r4, #2]
    20de:	2a00      	cmp	r2, #0
    20e0:	d001      	beq.n	20e6 <dac_init+0x7a>
    20e2:	2204      	movs	r2, #4
    20e4:	4316      	orrs	r6, r2
    20e6:	7922      	ldrb	r2, [r4, #4]
    20e8:	2a00      	cmp	r2, #0
    20ea:	d001      	beq.n	20f0 <dac_init+0x84>
    20ec:	2210      	movs	r2, #16
    20ee:	4316      	orrs	r6, r2
    20f0:	7962      	ldrb	r2, [r4, #5]
    20f2:	2a00      	cmp	r2, #0
    20f4:	d001      	beq.n	20fa <dac_init+0x8e>
    20f6:	2208      	movs	r2, #8
    20f8:	4316      	orrs	r6, r2
    20fa:	b2db      	uxtb	r3, r3
    20fc:	4642      	mov	r2, r8
    20fe:	7013      	strb	r3, [r2, #0]
    2100:	4f09      	ldr	r7, [pc, #36]	; (2128 <dac_init+0xbc>)
    2102:	0028      	movs	r0, r5
    2104:	47b8      	blx	r7
    2106:	2800      	cmp	r0, #0
    2108:	d1fb      	bne.n	2102 <dac_init+0x96>
    210a:	b2f6      	uxtb	r6, r6
    210c:	4643      	mov	r3, r8
    210e:	705e      	strb	r6, [r3, #1]
    2110:	7823      	ldrb	r3, [r4, #0]
    2112:	716b      	strb	r3, [r5, #5]
    2114:	e7bb      	b.n	208e <dac_init+0x22>
    2116:	46c0      	nop			; (mov r8, r8)
    2118:	40000400 	.word	0x40000400
    211c:	00002fd5 	.word	0x00002fd5
    2120:	00002f49 	.word	0x00002f49
    2124:	000030cd 	.word	0x000030cd
    2128:	00002051 	.word	0x00002051

0000212c <dac_enable>:
    212c:	b570      	push	{r4, r5, r6, lr}
    212e:	0004      	movs	r4, r0
    2130:	6806      	ldr	r6, [r0, #0]
    2132:	7873      	ldrb	r3, [r6, #1]
    2134:	7902      	ldrb	r2, [r0, #4]
    2136:	4313      	orrs	r3, r2
    2138:	7073      	strb	r3, [r6, #1]
    213a:	4d09      	ldr	r5, [pc, #36]	; (2160 <dac_enable+0x34>)
    213c:	0020      	movs	r0, r4
    213e:	47a8      	blx	r5
    2140:	2800      	cmp	r0, #0
    2142:	d1fb      	bne.n	213c <dac_enable+0x10>
    2144:	7833      	ldrb	r3, [r6, #0]
    2146:	2202      	movs	r2, #2
    2148:	4313      	orrs	r3, r2
    214a:	7033      	strb	r3, [r6, #0]
    214c:	7963      	ldrb	r3, [r4, #5]
    214e:	2b00      	cmp	r3, #0
    2150:	d104      	bne.n	215c <dac_enable+0x30>
    2152:	4a04      	ldr	r2, [pc, #16]	; (2164 <dac_enable+0x38>)
    2154:	6c13      	ldr	r3, [r2, #64]	; 0x40
    2156:	2104      	movs	r1, #4
    2158:	430b      	orrs	r3, r1
    215a:	6413      	str	r3, [r2, #64]	; 0x40
    215c:	bd70      	pop	{r4, r5, r6, pc}
    215e:	46c0      	nop			; (mov r8, r8)
    2160:	00002051 	.word	0x00002051
    2164:	40000800 	.word	0x40000800

00002168 <dac_chan_get_config_defaults>:
    2168:	4770      	bx	lr

0000216a <dac_chan_set_config>:
    216a:	4770      	bx	lr

0000216c <dac_chan_enable>:
    216c:	4770      	bx	lr
	...

00002170 <dac_chan_write>:
    2170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2172:	0004      	movs	r4, r0
    2174:	0017      	movs	r7, r2
    2176:	6806      	ldr	r6, [r0, #0]
    2178:	4d06      	ldr	r5, [pc, #24]	; (2194 <dac_chan_write+0x24>)
    217a:	0020      	movs	r0, r4
    217c:	47a8      	blx	r5
    217e:	2800      	cmp	r0, #0
    2180:	d1fb      	bne.n	217a <dac_chan_write+0xa>
    2182:	79a3      	ldrb	r3, [r4, #6]
    2184:	2b00      	cmp	r3, #0
    2186:	d102      	bne.n	218e <dac_chan_write+0x1e>
    2188:	8137      	strh	r7, [r6, #8]
    218a:	2000      	movs	r0, #0
    218c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    218e:	81b7      	strh	r7, [r6, #12]
    2190:	e7fb      	b.n	218a <dac_chan_write+0x1a>
    2192:	46c0      	nop			; (mov r8, r8)
    2194:	00002051 	.word	0x00002051

00002198 <extint_register_callback>:
    2198:	2317      	movs	r3, #23
    219a:	2a00      	cmp	r2, #0
    219c:	d001      	beq.n	21a2 <extint_register_callback+0xa>
    219e:	0018      	movs	r0, r3
    21a0:	4770      	bx	lr
    21a2:	008b      	lsls	r3, r1, #2
    21a4:	4a06      	ldr	r2, [pc, #24]	; (21c0 <extint_register_callback+0x28>)
    21a6:	589b      	ldr	r3, [r3, r2]
    21a8:	2b00      	cmp	r3, #0
    21aa:	d003      	beq.n	21b4 <extint_register_callback+0x1c>
    21ac:	4283      	cmp	r3, r0
    21ae:	d005      	beq.n	21bc <extint_register_callback+0x24>
    21b0:	231d      	movs	r3, #29
    21b2:	e7f4      	b.n	219e <extint_register_callback+0x6>
    21b4:	0089      	lsls	r1, r1, #2
    21b6:	5088      	str	r0, [r1, r2]
    21b8:	2300      	movs	r3, #0
    21ba:	e7f0      	b.n	219e <extint_register_callback+0x6>
    21bc:	2300      	movs	r3, #0
    21be:	e7ee      	b.n	219e <extint_register_callback+0x6>
    21c0:	20000374 	.word	0x20000374

000021c4 <extint_chan_enable_callback>:
    21c4:	2317      	movs	r3, #23
    21c6:	2900      	cmp	r1, #0
    21c8:	d001      	beq.n	21ce <extint_chan_enable_callback+0xa>
    21ca:	0018      	movs	r0, r3
    21cc:	4770      	bx	lr
    21ce:	2200      	movs	r2, #0
    21d0:	281f      	cmp	r0, #31
    21d2:	d800      	bhi.n	21d6 <extint_chan_enable_callback+0x12>
    21d4:	4a02      	ldr	r2, [pc, #8]	; (21e0 <extint_chan_enable_callback+0x1c>)
    21d6:	2301      	movs	r3, #1
    21d8:	4083      	lsls	r3, r0
    21da:	60d3      	str	r3, [r2, #12]
    21dc:	2300      	movs	r3, #0
    21de:	e7f4      	b.n	21ca <extint_chan_enable_callback+0x6>
    21e0:	40001800 	.word	0x40001800

000021e4 <EIC_Handler>:
    21e4:	b570      	push	{r4, r5, r6, lr}
    21e6:	2200      	movs	r2, #0
    21e8:	4b10      	ldr	r3, [pc, #64]	; (222c <EIC_Handler+0x48>)
    21ea:	701a      	strb	r2, [r3, #0]
    21ec:	2300      	movs	r3, #0
    21ee:	4910      	ldr	r1, [pc, #64]	; (2230 <EIC_Handler+0x4c>)
    21f0:	251f      	movs	r5, #31
    21f2:	4e10      	ldr	r6, [pc, #64]	; (2234 <EIC_Handler+0x50>)
    21f4:	4c0d      	ldr	r4, [pc, #52]	; (222c <EIC_Handler+0x48>)
    21f6:	e00a      	b.n	220e <EIC_Handler+0x2a>
    21f8:	490d      	ldr	r1, [pc, #52]	; (2230 <EIC_Handler+0x4c>)
    21fa:	e008      	b.n	220e <EIC_Handler+0x2a>
    21fc:	7823      	ldrb	r3, [r4, #0]
    21fe:	3301      	adds	r3, #1
    2200:	b2db      	uxtb	r3, r3
    2202:	7023      	strb	r3, [r4, #0]
    2204:	2b0f      	cmp	r3, #15
    2206:	d810      	bhi.n	222a <EIC_Handler+0x46>
    2208:	2100      	movs	r1, #0
    220a:	2b1f      	cmp	r3, #31
    220c:	d9f4      	bls.n	21f8 <EIC_Handler+0x14>
    220e:	0028      	movs	r0, r5
    2210:	4018      	ands	r0, r3
    2212:	2201      	movs	r2, #1
    2214:	4082      	lsls	r2, r0
    2216:	6908      	ldr	r0, [r1, #16]
    2218:	4210      	tst	r0, r2
    221a:	d0ef      	beq.n	21fc <EIC_Handler+0x18>
    221c:	610a      	str	r2, [r1, #16]
    221e:	009b      	lsls	r3, r3, #2
    2220:	599b      	ldr	r3, [r3, r6]
    2222:	2b00      	cmp	r3, #0
    2224:	d0ea      	beq.n	21fc <EIC_Handler+0x18>
    2226:	4798      	blx	r3
    2228:	e7e8      	b.n	21fc <EIC_Handler+0x18>
    222a:	bd70      	pop	{r4, r5, r6, pc}
    222c:	20000371 	.word	0x20000371
    2230:	40001800 	.word	0x40001800
    2234:	20000374 	.word	0x20000374

00002238 <_extint_enable>:
    2238:	4a04      	ldr	r2, [pc, #16]	; (224c <_extint_enable+0x14>)
    223a:	7813      	ldrb	r3, [r2, #0]
    223c:	2102      	movs	r1, #2
    223e:	430b      	orrs	r3, r1
    2240:	7013      	strb	r3, [r2, #0]
    2242:	7853      	ldrb	r3, [r2, #1]
    2244:	b25b      	sxtb	r3, r3
    2246:	2b00      	cmp	r3, #0
    2248:	dbfb      	blt.n	2242 <_extint_enable+0xa>
    224a:	4770      	bx	lr
    224c:	40001800 	.word	0x40001800

00002250 <_system_extint_init>:
    2250:	b500      	push	{lr}
    2252:	b083      	sub	sp, #12
    2254:	4a12      	ldr	r2, [pc, #72]	; (22a0 <_system_extint_init+0x50>)
    2256:	6993      	ldr	r3, [r2, #24]
    2258:	2140      	movs	r1, #64	; 0x40
    225a:	430b      	orrs	r3, r1
    225c:	6193      	str	r3, [r2, #24]
    225e:	a901      	add	r1, sp, #4
    2260:	2300      	movs	r3, #0
    2262:	700b      	strb	r3, [r1, #0]
    2264:	2005      	movs	r0, #5
    2266:	4b0f      	ldr	r3, [pc, #60]	; (22a4 <_system_extint_init+0x54>)
    2268:	4798      	blx	r3
    226a:	2005      	movs	r0, #5
    226c:	4b0e      	ldr	r3, [pc, #56]	; (22a8 <_system_extint_init+0x58>)
    226e:	4798      	blx	r3
    2270:	4a0e      	ldr	r2, [pc, #56]	; (22ac <_system_extint_init+0x5c>)
    2272:	7813      	ldrb	r3, [r2, #0]
    2274:	2101      	movs	r1, #1
    2276:	430b      	orrs	r3, r1
    2278:	7013      	strb	r3, [r2, #0]
    227a:	7853      	ldrb	r3, [r2, #1]
    227c:	b25b      	sxtb	r3, r3
    227e:	2b00      	cmp	r3, #0
    2280:	dbfb      	blt.n	227a <_system_extint_init+0x2a>
    2282:	4b0b      	ldr	r3, [pc, #44]	; (22b0 <_system_extint_init+0x60>)
    2284:	0019      	movs	r1, r3
    2286:	3140      	adds	r1, #64	; 0x40
    2288:	2200      	movs	r2, #0
    228a:	c304      	stmia	r3!, {r2}
    228c:	4299      	cmp	r1, r3
    228e:	d1fc      	bne.n	228a <_system_extint_init+0x3a>
    2290:	2210      	movs	r2, #16
    2292:	4b08      	ldr	r3, [pc, #32]	; (22b4 <_system_extint_init+0x64>)
    2294:	601a      	str	r2, [r3, #0]
    2296:	4b08      	ldr	r3, [pc, #32]	; (22b8 <_system_extint_init+0x68>)
    2298:	4798      	blx	r3
    229a:	b003      	add	sp, #12
    229c:	bd00      	pop	{pc}
    229e:	46c0      	nop			; (mov r8, r8)
    22a0:	40000400 	.word	0x40000400
    22a4:	00002fd5 	.word	0x00002fd5
    22a8:	00002f49 	.word	0x00002f49
    22ac:	40001800 	.word	0x40001800
    22b0:	20000374 	.word	0x20000374
    22b4:	e000e100 	.word	0xe000e100
    22b8:	00002239 	.word	0x00002239

000022bc <extint_chan_get_config_defaults>:
    22bc:	2300      	movs	r3, #0
    22be:	6003      	str	r3, [r0, #0]
    22c0:	6043      	str	r3, [r0, #4]
    22c2:	2201      	movs	r2, #1
    22c4:	7202      	strb	r2, [r0, #8]
    22c6:	7242      	strb	r2, [r0, #9]
    22c8:	7283      	strb	r3, [r0, #10]
    22ca:	3302      	adds	r3, #2
    22cc:	72c3      	strb	r3, [r0, #11]
    22ce:	4770      	bx	lr

000022d0 <extint_chan_set_config>:
    22d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    22d2:	b083      	sub	sp, #12
    22d4:	0005      	movs	r5, r0
    22d6:	000c      	movs	r4, r1
    22d8:	a901      	add	r1, sp, #4
    22da:	2300      	movs	r3, #0
    22dc:	704b      	strb	r3, [r1, #1]
    22de:	70cb      	strb	r3, [r1, #3]
    22e0:	7923      	ldrb	r3, [r4, #4]
    22e2:	700b      	strb	r3, [r1, #0]
    22e4:	7a23      	ldrb	r3, [r4, #8]
    22e6:	708b      	strb	r3, [r1, #2]
    22e8:	7820      	ldrb	r0, [r4, #0]
    22ea:	4b15      	ldr	r3, [pc, #84]	; (2340 <extint_chan_set_config+0x70>)
    22ec:	4798      	blx	r3
    22ee:	2000      	movs	r0, #0
    22f0:	2d1f      	cmp	r5, #31
    22f2:	d800      	bhi.n	22f6 <extint_chan_set_config+0x26>
    22f4:	4813      	ldr	r0, [pc, #76]	; (2344 <extint_chan_set_config+0x74>)
    22f6:	2207      	movs	r2, #7
    22f8:	402a      	ands	r2, r5
    22fa:	0092      	lsls	r2, r2, #2
    22fc:	7ae7      	ldrb	r7, [r4, #11]
    22fe:	7aa3      	ldrb	r3, [r4, #10]
    2300:	2b00      	cmp	r3, #0
    2302:	d001      	beq.n	2308 <extint_chan_set_config+0x38>
    2304:	2308      	movs	r3, #8
    2306:	431f      	orrs	r7, r3
    2308:	08eb      	lsrs	r3, r5, #3
    230a:	009b      	lsls	r3, r3, #2
    230c:	18c3      	adds	r3, r0, r3
    230e:	6999      	ldr	r1, [r3, #24]
    2310:	260f      	movs	r6, #15
    2312:	4096      	lsls	r6, r2
    2314:	43b1      	bics	r1, r6
    2316:	4097      	lsls	r7, r2
    2318:	003a      	movs	r2, r7
    231a:	430a      	orrs	r2, r1
    231c:	619a      	str	r2, [r3, #24]
    231e:	7a63      	ldrb	r3, [r4, #9]
    2320:	2b00      	cmp	r3, #0
    2322:	d106      	bne.n	2332 <extint_chan_set_config+0x62>
    2324:	6943      	ldr	r3, [r0, #20]
    2326:	2201      	movs	r2, #1
    2328:	40aa      	lsls	r2, r5
    232a:	4393      	bics	r3, r2
    232c:	6143      	str	r3, [r0, #20]
    232e:	b003      	add	sp, #12
    2330:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2332:	6942      	ldr	r2, [r0, #20]
    2334:	2301      	movs	r3, #1
    2336:	40ab      	lsls	r3, r5
    2338:	4313      	orrs	r3, r2
    233a:	6143      	str	r3, [r0, #20]
    233c:	e7f7      	b.n	232e <extint_chan_set_config+0x5e>
    233e:	46c0      	nop			; (mov r8, r8)
    2340:	000030cd 	.word	0x000030cd
    2344:	40001800 	.word	0x40001800

00002348 <port_pin_set_config>:
    2348:	b500      	push	{lr}
    234a:	b083      	sub	sp, #12
    234c:	ab01      	add	r3, sp, #4
    234e:	2280      	movs	r2, #128	; 0x80
    2350:	701a      	strb	r2, [r3, #0]
    2352:	780a      	ldrb	r2, [r1, #0]
    2354:	705a      	strb	r2, [r3, #1]
    2356:	784a      	ldrb	r2, [r1, #1]
    2358:	709a      	strb	r2, [r3, #2]
    235a:	788a      	ldrb	r2, [r1, #2]
    235c:	70da      	strb	r2, [r3, #3]
    235e:	0019      	movs	r1, r3
    2360:	4b01      	ldr	r3, [pc, #4]	; (2368 <port_pin_set_config+0x20>)
    2362:	4798      	blx	r3
    2364:	b003      	add	sp, #12
    2366:	bd00      	pop	{pc}
    2368:	000030cd 	.word	0x000030cd

0000236c <_i2c_master_wait_for_sync>:
	SercomI2cm *const i2c_hw = &(module->hw->I2CM);
    236c:	6801      	ldr	r1, [r0, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    236e:	2207      	movs	r2, #7
    2370:	69cb      	ldr	r3, [r1, #28]
	while (i2c_master_is_syncing(module)) {
    2372:	421a      	tst	r2, r3
    2374:	d1fc      	bne.n	2370 <_i2c_master_wait_for_sync+0x4>
}
    2376:	4770      	bx	lr

00002378 <i2c_master_init>:
 */
enum status_code i2c_master_init(
		struct i2c_master_module *const module,
		Sercom *const hw,
		const struct i2c_master_config *const config)
{
    2378:	b5f0      	push	{r4, r5, r6, r7, lr}
    237a:	46c6      	mov	lr, r8
    237c:	b500      	push	{lr}
    237e:	b082      	sub	sp, #8
    2380:	0007      	movs	r7, r0
    2382:	000d      	movs	r5, r1
    2384:	0016      	movs	r6, r2
	Assert(module);
	Assert(hw);
	Assert(config);

	/* Initialize software module */
	module->hw = hw;
    2386:	6039      	str	r1, [r7, #0]

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
    2388:	0008      	movs	r0, r1
    238a:	4b67      	ldr	r3, [pc, #412]	; (2528 <i2c_master_init+0x1b0>)
    238c:	4798      	blx	r3
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
    238e:	4a67      	ldr	r2, [pc, #412]	; (252c <i2c_master_init+0x1b4>)
    2390:	6a11      	ldr	r1, [r2, #32]
		gclk_index   = SERCOM5_GCLK_ID_CORE;
	} else {
		gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
	}
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
    2392:	1c84      	adds	r4, r0, #2
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBD, 1 << pm_index);
	} else {
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
	}
#else
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
    2394:	2301      	movs	r3, #1
    2396:	40a3      	lsls	r3, r4
    2398:	430b      	orrs	r3, r1
    239a:	6213      	str	r3, [r2, #32]
#endif

	/* Set up the GCLK for the module */
	struct system_gclk_chan_config gclk_chan_conf;
	system_gclk_chan_get_config_defaults(&gclk_chan_conf);
	gclk_chan_conf.source_generator = config->generator_source;
    239c:	a901      	add	r1, sp, #4
    239e:	7b33      	ldrb	r3, [r6, #12]
    23a0:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
    23a2:	3014      	adds	r0, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
    23a4:	b2c4      	uxtb	r4, r0
    23a6:	0020      	movs	r0, r4
    23a8:	4b61      	ldr	r3, [pc, #388]	; (2530 <i2c_master_init+0x1b8>)
    23aa:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
    23ac:	0020      	movs	r0, r4
    23ae:	4b61      	ldr	r3, [pc, #388]	; (2534 <i2c_master_init+0x1bc>)
    23b0:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
    23b2:	7b30      	ldrb	r0, [r6, #12]
    23b4:	2100      	movs	r1, #0
    23b6:	4b60      	ldr	r3, [pc, #384]	; (2538 <i2c_master_init+0x1c0>)
    23b8:	4798      	blx	r3

	/* Check if module is enabled. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
    23ba:	682b      	ldr	r3, [r5, #0]
		return STATUS_ERR_DENIED;
    23bc:	201c      	movs	r0, #28
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
    23be:	079b      	lsls	r3, r3, #30
    23c0:	d503      	bpl.n	23ca <i2c_master_init+0x52>
	/* Set sercom module to operate in I2C master mode. */
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);

	/* Set config and return status. */
	return _i2c_master_set_config(module, config);
}
    23c2:	b002      	add	sp, #8
    23c4:	bc04      	pop	{r2}
    23c6:	4690      	mov	r8, r2
    23c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
    23ca:	682b      	ldr	r3, [r5, #0]
		return STATUS_BUSY;
    23cc:	3817      	subs	r0, #23
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
    23ce:	07db      	lsls	r3, r3, #31
    23d0:	d4f7      	bmi.n	23c2 <i2c_master_init+0x4a>
	uint8_t instance_index = _sercom_get_sercom_inst_index(module->hw);
    23d2:	6838      	ldr	r0, [r7, #0]
    23d4:	4b54      	ldr	r3, [pc, #336]	; (2528 <i2c_master_init+0x1b0>)
    23d6:	4698      	mov	r8, r3
    23d8:	4798      	blx	r3
    23da:	0004      	movs	r4, r0
	_sercom_set_handler(instance_index, _i2c_master_interrupt_handler);
    23dc:	4957      	ldr	r1, [pc, #348]	; (253c <i2c_master_init+0x1c4>)
    23de:	4b58      	ldr	r3, [pc, #352]	; (2540 <i2c_master_init+0x1c8>)
    23e0:	4798      	blx	r3
	_sercom_instances[instance_index] = module;
    23e2:	00a4      	lsls	r4, r4, #2
    23e4:	4b57      	ldr	r3, [pc, #348]	; (2544 <i2c_master_init+0x1cc>)
    23e6:	50e7      	str	r7, [r4, r3]
	module->registered_callback = 0;
    23e8:	2300      	movs	r3, #0
    23ea:	763b      	strb	r3, [r7, #24]
	module->enabled_callback = 0;
    23ec:	767b      	strb	r3, [r7, #25]
	module->buffer_length = 0;
    23ee:	2400      	movs	r4, #0
    23f0:	837b      	strh	r3, [r7, #26]
	module->buffer_remaining = 0;
    23f2:	83bb      	strh	r3, [r7, #28]
	module->status = STATUS_OK;
    23f4:	2225      	movs	r2, #37	; 0x25
    23f6:	54bc      	strb	r4, [r7, r2]
	module->buffer = NULL;
    23f8:	623b      	str	r3, [r7, #32]
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);
    23fa:	3314      	adds	r3, #20
    23fc:	602b      	str	r3, [r5, #0]
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    23fe:	683d      	ldr	r5, [r7, #0]
	uint8_t sercom_index = _sercom_get_sercom_inst_index(sercom_hw);
    2400:	0028      	movs	r0, r5
    2402:	47c0      	blx	r8
	config->mux_position = SYSTEM_PINMUX_GPIO;
    2404:	2380      	movs	r3, #128	; 0x80
    2406:	466a      	mov	r2, sp
    2408:	7013      	strb	r3, [r2, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
    240a:	7054      	strb	r4, [r2, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
    240c:	2301      	movs	r3, #1
    240e:	7093      	strb	r3, [r2, #2]
	config->powersave    = false;
    2410:	70d4      	strb	r4, [r2, #3]
	uint32_t pad0 = config->pinmux_pad0;
    2412:	69f0      	ldr	r0, [r6, #28]
	uint32_t pad1 = config->pinmux_pad1;
    2414:	6a34      	ldr	r4, [r6, #32]
	if (pad0 == PINMUX_DEFAULT) {
    2416:	2800      	cmp	r0, #0
    2418:	d070      	beq.n	24fc <i2c_master_init+0x184>
	pin_conf.mux_position = pad0 & 0xFFFF;
    241a:	466b      	mov	r3, sp
    241c:	7018      	strb	r0, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
    241e:	2302      	movs	r3, #2
    2420:	466a      	mov	r2, sp
    2422:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad0 >> 16, &pin_conf);
    2424:	0c00      	lsrs	r0, r0, #16
    2426:	b2c0      	uxtb	r0, r0
    2428:	4669      	mov	r1, sp
    242a:	4b47      	ldr	r3, [pc, #284]	; (2548 <i2c_master_init+0x1d0>)
    242c:	4798      	blx	r3
	if (pad1 == PINMUX_DEFAULT) {
    242e:	2c00      	cmp	r4, #0
    2430:	d069      	beq.n	2506 <i2c_master_init+0x18e>
	pin_conf.mux_position = pad1 & 0xFFFF;
    2432:	466b      	mov	r3, sp
    2434:	701c      	strb	r4, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
    2436:	2302      	movs	r3, #2
    2438:	466a      	mov	r2, sp
    243a:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad1 >> 16, &pin_conf);
    243c:	0c24      	lsrs	r4, r4, #16
    243e:	b2e0      	uxtb	r0, r4
    2440:	4669      	mov	r1, sp
    2442:	4b41      	ldr	r3, [pc, #260]	; (2548 <i2c_master_init+0x1d0>)
    2444:	4798      	blx	r3
	module->unknown_bus_state_timeout = config->unknown_bus_state_timeout;
    2446:	8ab3      	ldrh	r3, [r6, #20]
    2448:	80fb      	strh	r3, [r7, #6]
	module->buffer_timeout = config->buffer_timeout;
    244a:	8af3      	ldrh	r3, [r6, #22]
    244c:	813b      	strh	r3, [r7, #8]
	if (config->run_in_standby || system_is_debugger_present()) {
    244e:	7e33      	ldrb	r3, [r6, #24]
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
    2450:	2280      	movs	r2, #128	; 0x80
	if (config->run_in_standby || system_is_debugger_present()) {
    2452:	2b00      	cmp	r3, #0
    2454:	d104      	bne.n	2460 <i2c_master_init+0xe8>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
    2456:	4b3d      	ldr	r3, [pc, #244]	; (254c <i2c_master_init+0x1d4>)
    2458:	789b      	ldrb	r3, [r3, #2]
    245a:	079b      	lsls	r3, r3, #30
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
    245c:	0fdb      	lsrs	r3, r3, #31
    245e:	01da      	lsls	r2, r3, #7
	tmp_ctrla |= config->transfer_speed;
    2460:	6933      	ldr	r3, [r6, #16]
    2462:	68b1      	ldr	r1, [r6, #8]
    2464:	430b      	orrs	r3, r1
    2466:	4313      	orrs	r3, r2
	if (config->scl_low_timeout) {
    2468:	2224      	movs	r2, #36	; 0x24
    246a:	5cb2      	ldrb	r2, [r6, r2]
    246c:	2a00      	cmp	r2, #0
    246e:	d002      	beq.n	2476 <i2c_master_init+0xfe>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_LOWTOUTEN;
    2470:	2280      	movs	r2, #128	; 0x80
    2472:	05d2      	lsls	r2, r2, #23
    2474:	4313      	orrs	r3, r2
		tmp_ctrla |= config->inactive_timeout;
    2476:	6ab2      	ldr	r2, [r6, #40]	; 0x28
    2478:	4313      	orrs	r3, r2
	if (config->scl_stretch_only_after_ack_bit) {
    247a:	222c      	movs	r2, #44	; 0x2c
    247c:	5cb2      	ldrb	r2, [r6, r2]
    247e:	2a00      	cmp	r2, #0
    2480:	d002      	beq.n	2488 <i2c_master_init+0x110>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SCLSM;
    2482:	2280      	movs	r2, #128	; 0x80
    2484:	0512      	lsls	r2, r2, #20
    2486:	4313      	orrs	r3, r2
	if (config->slave_scl_low_extend_timeout) {
    2488:	222d      	movs	r2, #45	; 0x2d
    248a:	5cb2      	ldrb	r2, [r6, r2]
    248c:	2a00      	cmp	r2, #0
    248e:	d002      	beq.n	2496 <i2c_master_init+0x11e>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SEXTTOEN;
    2490:	2280      	movs	r2, #128	; 0x80
    2492:	0412      	lsls	r2, r2, #16
    2494:	4313      	orrs	r3, r2
	if (config->master_scl_low_extend_timeout) {
    2496:	222e      	movs	r2, #46	; 0x2e
    2498:	5cb2      	ldrb	r2, [r6, r2]
    249a:	2a00      	cmp	r2, #0
    249c:	d002      	beq.n	24a4 <i2c_master_init+0x12c>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_MEXTTOEN;
    249e:	2280      	movs	r2, #128	; 0x80
    24a0:	03d2      	lsls	r2, r2, #15
    24a2:	4313      	orrs	r3, r2
	i2c_module->CTRLA.reg |= tmp_ctrla;
    24a4:	682a      	ldr	r2, [r5, #0]
    24a6:	4313      	orrs	r3, r2
    24a8:	602b      	str	r3, [r5, #0]
	i2c_module->CTRLB.reg = SERCOM_I2CM_CTRLB_SMEN;
    24aa:	2380      	movs	r3, #128	; 0x80
    24ac:	005b      	lsls	r3, r3, #1
    24ae:	606b      	str	r3, [r5, #4]
	uint32_t fscl        = 1000*config->baud_rate;
    24b0:	27fa      	movs	r7, #250	; 0xfa
    24b2:	00bf      	lsls	r7, r7, #2
    24b4:	6833      	ldr	r3, [r6, #0]
    24b6:	435f      	muls	r7, r3
	int32_t  denominator = 2*fscl;
    24b8:	007b      	lsls	r3, r7, #1
    24ba:	4698      	mov	r8, r3
	uint32_t trise       = config->sda_scl_rise_time_ns;
    24bc:	8e30      	ldrh	r0, [r6, #48]	; 0x30
	int32_t  numerator   = fgclk - fscl*(10 + fgclk*trise/1000000000);
    24be:	4c24      	ldr	r4, [pc, #144]	; (2550 <i2c_master_init+0x1d8>)
    24c0:	4360      	muls	r0, r4
    24c2:	4924      	ldr	r1, [pc, #144]	; (2554 <i2c_master_init+0x1dc>)
    24c4:	4b24      	ldr	r3, [pc, #144]	; (2558 <i2c_master_init+0x1e0>)
    24c6:	4798      	blx	r3
    24c8:	300a      	adds	r0, #10
    24ca:	4378      	muls	r0, r7
    24cc:	1a20      	subs	r0, r4, r0
	tmp_baud = (int32_t)(div_ceil(numerator, denominator));
    24ce:	4440      	add	r0, r8
    24d0:	3801      	subs	r0, #1
    24d2:	4641      	mov	r1, r8
    24d4:	4b21      	ldr	r3, [pc, #132]	; (255c <i2c_master_init+0x1e4>)
    24d6:	4798      	blx	r3
    24d8:	0004      	movs	r4, r0
	if (tmp_baud > 255 || tmp_baud < 0) {
    24da:	2040      	movs	r0, #64	; 0x40
    24dc:	2cff      	cmp	r4, #255	; 0xff
    24de:	d900      	bls.n	24e2 <i2c_master_init+0x16a>
    24e0:	e76f      	b.n	23c2 <i2c_master_init+0x4a>
		tmp_baud_hs = (int32_t)(div_ceil(
    24e2:	6873      	ldr	r3, [r6, #4]
    24e4:	21fa      	movs	r1, #250	; 0xfa
    24e6:	00c9      	lsls	r1, r1, #3
    24e8:	4359      	muls	r1, r3
    24ea:	4b1d      	ldr	r3, [pc, #116]	; (2560 <i2c_master_init+0x1e8>)
    24ec:	18c8      	adds	r0, r1, r3
    24ee:	4b1a      	ldr	r3, [pc, #104]	; (2558 <i2c_master_init+0x1e0>)
    24f0:	4798      	blx	r3
				(2000*(config->baud_rate_high_speed))) - 1);
    24f2:	3801      	subs	r0, #1
		if (tmp_baud_hs > 255 || tmp_baud_hs < 0) {
    24f4:	28ff      	cmp	r0, #255	; 0xff
    24f6:	d90c      	bls.n	2512 <i2c_master_init+0x19a>
    24f8:	2040      	movs	r0, #64	; 0x40
    24fa:	e762      	b.n	23c2 <i2c_master_init+0x4a>
		pad0 = _sercom_get_default_pad(sercom_hw, 0);
    24fc:	2100      	movs	r1, #0
    24fe:	0028      	movs	r0, r5
    2500:	4b18      	ldr	r3, [pc, #96]	; (2564 <i2c_master_init+0x1ec>)
    2502:	4798      	blx	r3
    2504:	e789      	b.n	241a <i2c_master_init+0xa2>
		pad1 = _sercom_get_default_pad(sercom_hw, 1);
    2506:	2101      	movs	r1, #1
    2508:	0028      	movs	r0, r5
    250a:	4b16      	ldr	r3, [pc, #88]	; (2564 <i2c_master_init+0x1ec>)
    250c:	4798      	blx	r3
    250e:	0004      	movs	r4, r0
    2510:	e78f      	b.n	2432 <i2c_master_init+0xba>
			SERCOM_I2CM_BAUD_HSBAUD(tmp_baud_hs);
    2512:	0400      	lsls	r0, r0, #16
    2514:	23ff      	movs	r3, #255	; 0xff
    2516:	041b      	lsls	r3, r3, #16
    2518:	4018      	ands	r0, r3
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
    251a:	23ff      	movs	r3, #255	; 0xff
    251c:	4023      	ands	r3, r4
    251e:	4318      	orrs	r0, r3
    2520:	60e8      	str	r0, [r5, #12]
	enum status_code tmp_status_code = STATUS_OK;
    2522:	2000      	movs	r0, #0
    2524:	e74d      	b.n	23c2 <i2c_master_init+0x4a>
    2526:	46c0      	nop			; (mov r8, r8)
    2528:	00002d25 	.word	0x00002d25
    252c:	40000400 	.word	0x40000400
    2530:	00002fd5 	.word	0x00002fd5
    2534:	00002f49 	.word	0x00002f49
    2538:	00002b61 	.word	0x00002b61
    253c:	00002975 	.word	0x00002975
    2540:	00002d61 	.word	0x00002d61
    2544:	200003b4 	.word	0x200003b4
    2548:	000030cd 	.word	0x000030cd
    254c:	41002000 	.word	0x41002000
    2550:	02dc6c00 	.word	0x02dc6c00
    2554:	3b9aca00 	.word	0x3b9aca00
    2558:	00005cf9 	.word	0x00005cf9
    255c:	00005e0d 	.word	0x00005e0d
    2560:	02dc6bff 	.word	0x02dc6bff
    2564:	00002bad 	.word	0x00002bad

00002568 <_i2c_master_address_response>:
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    2568:	6803      	ldr	r3, [r0, #0]

	/* Check for error and ignore bus-error; workaround for BUSSTATE stuck in
	 * BUSY */
	if (i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB) {
    256a:	7e1a      	ldrb	r2, [r3, #24]
    256c:	0792      	lsls	r2, r2, #30
    256e:	d507      	bpl.n	2580 <_i2c_master_address_response+0x18>

		/* Clear write interrupt flag */
		i2c_module->INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    2570:	2202      	movs	r2, #2
    2572:	761a      	strb	r2, [r3, #24]

		/* Check arbitration. */
		if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_ARBLOST) {
    2574:	8b5b      	ldrh	r3, [r3, #26]
    2576:	079b      	lsls	r3, r3, #30
			/* Return packet collision. */
			return STATUS_ERR_PACKET_COLLISION;
    2578:	2041      	movs	r0, #65	; 0x41

		/* Return bad address value. */
		return STATUS_ERR_BAD_ADDRESS;
	}

	return STATUS_OK;
    257a:	17db      	asrs	r3, r3, #31
    257c:	4018      	ands	r0, r3
}
    257e:	4770      	bx	lr
	} else if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
    2580:	8b5a      	ldrh	r2, [r3, #26]
    2582:	0752      	lsls	r2, r2, #29
    2584:	d506      	bpl.n	2594 <_i2c_master_address_response+0x2c>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    2586:	6859      	ldr	r1, [r3, #4]
    2588:	22c0      	movs	r2, #192	; 0xc0
    258a:	0292      	lsls	r2, r2, #10
    258c:	430a      	orrs	r2, r1
    258e:	605a      	str	r2, [r3, #4]
		return STATUS_ERR_BAD_ADDRESS;
    2590:	2018      	movs	r0, #24
    2592:	e7f4      	b.n	257e <_i2c_master_address_response+0x16>
	return STATUS_OK;
    2594:	2000      	movs	r0, #0
    2596:	e7f2      	b.n	257e <_i2c_master_address_response+0x16>

00002598 <_i2c_master_wait_for_bus>:
 * \retval STATUS_ERR_TIMEOUT  If no response was given within specified timeout
 *                             period
 */
enum status_code _i2c_master_wait_for_bus(
		struct i2c_master_module *const module)
{
    2598:	b530      	push	{r4, r5, lr}
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    259a:	6802      	ldr	r2, [r0, #0]

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
    259c:	2300      	movs	r3, #0
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
    259e:	2401      	movs	r4, #1
    25a0:	2502      	movs	r5, #2
    25a2:	7e11      	ldrb	r1, [r2, #24]
    25a4:	4221      	tst	r1, r4
    25a6:	d10b      	bne.n	25c0 <_i2c_master_wait_for_bus+0x28>
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {
    25a8:	7e11      	ldrb	r1, [r2, #24]
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
    25aa:	4229      	tst	r1, r5
    25ac:	d106      	bne.n	25bc <_i2c_master_wait_for_bus+0x24>

		/* Check timeout condition. */
		if (++timeout_counter >= module->buffer_timeout) {
    25ae:	3301      	adds	r3, #1
    25b0:	b29b      	uxth	r3, r3
    25b2:	8901      	ldrh	r1, [r0, #8]
    25b4:	4299      	cmp	r1, r3
    25b6:	d8f4      	bhi.n	25a2 <_i2c_master_wait_for_bus+0xa>
			return STATUS_ERR_TIMEOUT;
    25b8:	2012      	movs	r0, #18
    25ba:	e002      	b.n	25c2 <_i2c_master_wait_for_bus+0x2a>
		}
	}
	return STATUS_OK;
    25bc:	2000      	movs	r0, #0
    25be:	e000      	b.n	25c2 <_i2c_master_wait_for_bus+0x2a>
    25c0:	2000      	movs	r0, #0
}
    25c2:	bd30      	pop	{r4, r5, pc}

000025c4 <_i2c_master_send_hs_master_code>:
 * \retval STATUS_OK           No error happen
 */
enum status_code _i2c_master_send_hs_master_code(
		struct i2c_master_module *const module,
		uint8_t hs_master_code)
{
    25c4:	b510      	push	{r4, lr}
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    25c6:	6804      	ldr	r4, [r0, #0]
	/* Return value. */
	enum status_code tmp_status;

	/* Set NACK for high speed code */
	i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    25c8:	6862      	ldr	r2, [r4, #4]
    25ca:	2380      	movs	r3, #128	; 0x80
    25cc:	02db      	lsls	r3, r3, #11
    25ce:	4313      	orrs	r3, r2
    25d0:	6063      	str	r3, [r4, #4]
	/* Send high speed code */
	i2c_module->ADDR.reg = hs_master_code;
    25d2:	6261      	str	r1, [r4, #36]	; 0x24
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
    25d4:	4b02      	ldr	r3, [pc, #8]	; (25e0 <_i2c_master_send_hs_master_code+0x1c>)
    25d6:	4798      	blx	r3
	/* Clear write interrupt flag */
	i2c_module->INTFLAG.reg = SERCOM_I2CM_INTENCLR_MB;
    25d8:	2301      	movs	r3, #1
    25da:	7623      	strb	r3, [r4, #24]

	return tmp_status;
}
    25dc:	bd10      	pop	{r4, pc}
    25de:	46c0      	nop			; (mov r8, r8)
    25e0:	00002599 	.word	0x00002599

000025e4 <_i2c_master_read_packet>:
 *
 */
static enum status_code _i2c_master_read_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
    25e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    25e6:	46de      	mov	lr, fp
    25e8:	4657      	mov	r7, sl
    25ea:	464e      	mov	r6, r9
    25ec:	4645      	mov	r5, r8
    25ee:	b5e0      	push	{r5, r6, r7, lr}
    25f0:	b083      	sub	sp, #12
    25f2:	0006      	movs	r6, r0
    25f4:	4689      	mov	r9, r1
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    25f6:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
    25f8:	884c      	ldrh	r4, [r1, #2]

	/* Written buffer counter. */
	uint16_t counter = 0;

	bool sclsm_flag = i2c_module->CTRLA.bit.SCLSM;
    25fa:	682b      	ldr	r3, [r5, #0]
    25fc:	011b      	lsls	r3, r3, #4
    25fe:	0fdb      	lsrs	r3, r3, #31
    2600:	469a      	mov	sl, r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
    2602:	7a4b      	ldrb	r3, [r1, #9]
    2604:	2b00      	cmp	r3, #0
    2606:	d123      	bne.n	2650 <_i2c_master_read_packet+0x6c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    2608:	686b      	ldr	r3, [r5, #4]
    260a:	4a51      	ldr	r2, [pc, #324]	; (2750 <_i2c_master_read_packet+0x16c>)
    260c:	4013      	ands	r3, r2
    260e:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
    2610:	464b      	mov	r3, r9
    2612:	7a1b      	ldrb	r3, [r3, #8]
    2614:	2b00      	cmp	r3, #0
    2616:	d11f      	bne.n	2658 <_i2c_master_read_packet+0x74>
				I2C_TRANSFER_READ;
		} else {
			return tmp_status;
		}
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
    2618:	464b      	mov	r3, r9
    261a:	881b      	ldrh	r3, [r3, #0]
    261c:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
    261e:	464a      	mov	r2, r9
    2620:	7a52      	ldrb	r2, [r2, #9]
    2622:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
    2624:	4313      	orrs	r3, r2
    2626:	2201      	movs	r2, #1
    2628:	4313      	orrs	r3, r2
    262a:	626b      	str	r3, [r5, #36]	; 0x24
	}

	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
    262c:	0030      	movs	r0, r6
    262e:	4b49      	ldr	r3, [pc, #292]	; (2754 <_i2c_master_read_packet+0x170>)
    2630:	4798      	blx	r3
    2632:	9001      	str	r0, [sp, #4]

	/* Set action to ack. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    2634:	686b      	ldr	r3, [r5, #4]
    2636:	4a46      	ldr	r2, [pc, #280]	; (2750 <_i2c_master_read_packet+0x16c>)
    2638:	4013      	ands	r3, r2
    263a:	606b      	str	r3, [r5, #4]

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
    263c:	2800      	cmp	r0, #0
    263e:	d034      	beq.n	26aa <_i2c_master_read_packet+0xc6>
		_i2c_master_wait_for_sync(module);
		packet->data[counter] = i2c_module->DATA.reg;
	}

	return tmp_status;
}
    2640:	9801      	ldr	r0, [sp, #4]
    2642:	b003      	add	sp, #12
    2644:	bc3c      	pop	{r2, r3, r4, r5}
    2646:	4690      	mov	r8, r2
    2648:	4699      	mov	r9, r3
    264a:	46a2      	mov	sl, r4
    264c:	46ab      	mov	fp, r5
    264e:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
    2650:	7a89      	ldrb	r1, [r1, #10]
    2652:	4b41      	ldr	r3, [pc, #260]	; (2758 <_i2c_master_read_packet+0x174>)
    2654:	4798      	blx	r3
    2656:	e7d7      	b.n	2608 <_i2c_master_read_packet+0x24>
		i2c_module->ADDR.reg = (packet->address << 1) |
    2658:	464b      	mov	r3, r9
    265a:	881b      	ldrh	r3, [r3, #0]
    265c:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    265e:	464a      	mov	r2, r9
    2660:	7a52      	ldrb	r2, [r2, #9]
    2662:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) |
    2664:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    2666:	2280      	movs	r2, #128	; 0x80
    2668:	0212      	lsls	r2, r2, #8
    266a:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) |
    266c:	626b      	str	r3, [r5, #36]	; 0x24
		tmp_status = _i2c_master_wait_for_bus(module);
    266e:	0030      	movs	r0, r6
    2670:	4b38      	ldr	r3, [pc, #224]	; (2754 <_i2c_master_read_packet+0x170>)
    2672:	4798      	blx	r3
    2674:	9001      	str	r0, [sp, #4]
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    2676:	686b      	ldr	r3, [r5, #4]
    2678:	4a35      	ldr	r2, [pc, #212]	; (2750 <_i2c_master_read_packet+0x16c>)
    267a:	4013      	ands	r3, r2
    267c:	606b      	str	r3, [r5, #4]
		if (tmp_status == STATUS_OK) {
    267e:	2800      	cmp	r0, #0
    2680:	d1de      	bne.n	2640 <_i2c_master_read_packet+0x5c>
			tmp_status = _i2c_master_address_response(module);
    2682:	0030      	movs	r0, r6
    2684:	4b35      	ldr	r3, [pc, #212]	; (275c <_i2c_master_read_packet+0x178>)
    2686:	4798      	blx	r3
    2688:	9001      	str	r0, [sp, #4]
		if (tmp_status == STATUS_OK) {
    268a:	2800      	cmp	r0, #0
    268c:	d1d8      	bne.n	2640 <_i2c_master_read_packet+0x5c>
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
    268e:	464b      	mov	r3, r9
    2690:	881b      	ldrh	r3, [r3, #0]
    2692:	0a1b      	lsrs	r3, r3, #8
    2694:	2278      	movs	r2, #120	; 0x78
    2696:	4313      	orrs	r3, r2
    2698:	005b      	lsls	r3, r3, #1
				(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    269a:	464a      	mov	r2, r9
    269c:	7a52      	ldrb	r2, [r2, #9]
    269e:	0392      	lsls	r2, r2, #14
    26a0:	2101      	movs	r1, #1
    26a2:	430a      	orrs	r2, r1
    26a4:	4313      	orrs	r3, r2
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
    26a6:	626b      	str	r3, [r5, #36]	; 0x24
    26a8:	e7c0      	b.n	262c <_i2c_master_read_packet+0x48>
		tmp_status = _i2c_master_address_response(module);
    26aa:	0030      	movs	r0, r6
    26ac:	4b2b      	ldr	r3, [pc, #172]	; (275c <_i2c_master_read_packet+0x178>)
    26ae:	4798      	blx	r3
    26b0:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
    26b2:	2800      	cmp	r0, #0
    26b4:	d1c4      	bne.n	2640 <_i2c_master_read_packet+0x5c>
    26b6:	3c01      	subs	r4, #1
    26b8:	b2a4      	uxth	r4, r4
    26ba:	4680      	mov	r8, r0
		while (tmp_data_length--) {
    26bc:	4b28      	ldr	r3, [pc, #160]	; (2760 <_i2c_master_read_packet+0x17c>)
    26be:	469b      	mov	fp, r3
    26c0:	e015      	b.n	26ee <_i2c_master_read_packet+0x10a>
					((sclsm_flag) && (tmp_data_length == 1)))) {
    26c2:	2c01      	cmp	r4, #1
    26c4:	d020      	beq.n	2708 <_i2c_master_read_packet+0x124>
				_i2c_master_wait_for_sync(module);
    26c6:	0030      	movs	r0, r6
    26c8:	4b26      	ldr	r3, [pc, #152]	; (2764 <_i2c_master_read_packet+0x180>)
    26ca:	4798      	blx	r3
				packet->data[counter++] = i2c_module->DATA.reg;
    26cc:	4643      	mov	r3, r8
    26ce:	1c5f      	adds	r7, r3, #1
    26d0:	b2bf      	uxth	r7, r7
    26d2:	2328      	movs	r3, #40	; 0x28
    26d4:	5ceb      	ldrb	r3, [r5, r3]
    26d6:	464a      	mov	r2, r9
    26d8:	6852      	ldr	r2, [r2, #4]
    26da:	4641      	mov	r1, r8
    26dc:	5453      	strb	r3, [r2, r1]
				tmp_status = _i2c_master_wait_for_bus(module);
    26de:	0030      	movs	r0, r6
    26e0:	4b1c      	ldr	r3, [pc, #112]	; (2754 <_i2c_master_read_packet+0x170>)
    26e2:	4798      	blx	r3
    26e4:	3c01      	subs	r4, #1
    26e6:	b2a4      	uxth	r4, r4
			if (tmp_status != STATUS_OK) {
    26e8:	2800      	cmp	r0, #0
    26ea:	d115      	bne.n	2718 <_i2c_master_read_packet+0x134>
				packet->data[counter++] = i2c_module->DATA.reg;
    26ec:	46b8      	mov	r8, r7
		while (tmp_data_length--) {
    26ee:	455c      	cmp	r4, fp
    26f0:	d014      	beq.n	271c <_i2c_master_read_packet+0x138>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
    26f2:	8b6b      	ldrh	r3, [r5, #26]
    26f4:	069b      	lsls	r3, r3, #26
    26f6:	d527      	bpl.n	2748 <_i2c_master_read_packet+0x164>
			if (module->send_nack && (((!sclsm_flag) && (tmp_data_length == 0)) ||
    26f8:	7af3      	ldrb	r3, [r6, #11]
    26fa:	2b00      	cmp	r3, #0
    26fc:	d0e3      	beq.n	26c6 <_i2c_master_read_packet+0xe2>
    26fe:	4653      	mov	r3, sl
    2700:	2b00      	cmp	r3, #0
    2702:	d1de      	bne.n	26c2 <_i2c_master_read_packet+0xde>
    2704:	2c00      	cmp	r4, #0
    2706:	d1de      	bne.n	26c6 <_i2c_master_read_packet+0xe2>
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    2708:	686a      	ldr	r2, [r5, #4]
    270a:	2380      	movs	r3, #128	; 0x80
    270c:	02db      	lsls	r3, r3, #11
    270e:	4313      	orrs	r3, r2
    2710:	606b      	str	r3, [r5, #4]
    2712:	3c01      	subs	r4, #1
    2714:	b2a4      	uxth	r4, r4
    2716:	e7ea      	b.n	26ee <_i2c_master_read_packet+0x10a>
				packet->data[counter++] = i2c_module->DATA.reg;
    2718:	46b8      	mov	r8, r7
				tmp_status = _i2c_master_wait_for_bus(module);
    271a:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
    271c:	7ab3      	ldrb	r3, [r6, #10]
    271e:	2b00      	cmp	r3, #0
    2720:	d109      	bne.n	2736 <_i2c_master_read_packet+0x152>
		_i2c_master_wait_for_sync(module);
    2722:	0030      	movs	r0, r6
    2724:	4b0f      	ldr	r3, [pc, #60]	; (2764 <_i2c_master_read_packet+0x180>)
    2726:	4798      	blx	r3
		packet->data[counter] = i2c_module->DATA.reg;
    2728:	2328      	movs	r3, #40	; 0x28
    272a:	5cea      	ldrb	r2, [r5, r3]
    272c:	464b      	mov	r3, r9
    272e:	685b      	ldr	r3, [r3, #4]
    2730:	4641      	mov	r1, r8
    2732:	545a      	strb	r2, [r3, r1]
    2734:	e784      	b.n	2640 <_i2c_master_read_packet+0x5c>
			_i2c_master_wait_for_sync(module);
    2736:	0030      	movs	r0, r6
    2738:	4b0a      	ldr	r3, [pc, #40]	; (2764 <_i2c_master_read_packet+0x180>)
    273a:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    273c:	686a      	ldr	r2, [r5, #4]
    273e:	23c0      	movs	r3, #192	; 0xc0
    2740:	029b      	lsls	r3, r3, #10
    2742:	4313      	orrs	r3, r2
    2744:	606b      	str	r3, [r5, #4]
    2746:	e7ec      	b.n	2722 <_i2c_master_read_packet+0x13e>
				return STATUS_ERR_PACKET_COLLISION;
    2748:	2341      	movs	r3, #65	; 0x41
    274a:	9301      	str	r3, [sp, #4]
    274c:	e778      	b.n	2640 <_i2c_master_read_packet+0x5c>
    274e:	46c0      	nop			; (mov r8, r8)
    2750:	fffbffff 	.word	0xfffbffff
    2754:	00002599 	.word	0x00002599
    2758:	000025c5 	.word	0x000025c5
    275c:	00002569 	.word	0x00002569
    2760:	0000ffff 	.word	0x0000ffff
    2764:	0000236d 	.word	0x0000236d

00002768 <_i2c_master_write_packet>:
 *                                      acknowledged the address
 */
static enum status_code _i2c_master_write_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
    2768:	b5f0      	push	{r4, r5, r6, r7, lr}
    276a:	46de      	mov	lr, fp
    276c:	4657      	mov	r7, sl
    276e:	464e      	mov	r6, r9
    2770:	4645      	mov	r5, r8
    2772:	b5e0      	push	{r5, r6, r7, lr}
    2774:	b083      	sub	sp, #12
    2776:	0006      	movs	r6, r0
    2778:	000f      	movs	r7, r1
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    277a:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
    277c:	884c      	ldrh	r4, [r1, #2]

	_i2c_master_wait_for_sync(module);
    277e:	4b32      	ldr	r3, [pc, #200]	; (2848 <_i2c_master_write_packet+0xe0>)
    2780:	4798      	blx	r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
    2782:	7a7b      	ldrb	r3, [r7, #9]
    2784:	2b00      	cmp	r3, #0
    2786:	d11d      	bne.n	27c4 <_i2c_master_write_packet+0x5c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    2788:	686b      	ldr	r3, [r5, #4]
    278a:	4a30      	ldr	r2, [pc, #192]	; (284c <_i2c_master_write_packet+0xe4>)
    278c:	4013      	ands	r3, r2
    278e:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
    2790:	7a3b      	ldrb	r3, [r7, #8]
    2792:	2b00      	cmp	r3, #0
    2794:	d01b      	beq.n	27ce <_i2c_master_write_packet+0x66>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    2796:	883b      	ldrh	r3, [r7, #0]
    2798:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    279a:	7a7a      	ldrb	r2, [r7, #9]
    279c:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    279e:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    27a0:	2280      	movs	r2, #128	; 0x80
    27a2:	0212      	lsls	r2, r2, #8
    27a4:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    27a6:	626b      	str	r3, [r5, #36]	; 0x24
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
	}
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
    27a8:	0030      	movs	r0, r6
    27aa:	4b29      	ldr	r3, [pc, #164]	; (2850 <_i2c_master_write_packet+0xe8>)
    27ac:	4798      	blx	r3
    27ae:	9001      	str	r0, [sp, #4]

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
    27b0:	2800      	cmp	r0, #0
    27b2:	d013      	beq.n	27dc <_i2c_master_write_packet+0x74>
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
		}
	}

	return tmp_status;
}
    27b4:	9801      	ldr	r0, [sp, #4]
    27b6:	b003      	add	sp, #12
    27b8:	bc3c      	pop	{r2, r3, r4, r5}
    27ba:	4690      	mov	r8, r2
    27bc:	4699      	mov	r9, r3
    27be:	46a2      	mov	sl, r4
    27c0:	46ab      	mov	fp, r5
    27c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
    27c4:	7ab9      	ldrb	r1, [r7, #10]
    27c6:	0030      	movs	r0, r6
    27c8:	4b22      	ldr	r3, [pc, #136]	; (2854 <_i2c_master_write_packet+0xec>)
    27ca:	4798      	blx	r3
    27cc:	e7dc      	b.n	2788 <_i2c_master_write_packet+0x20>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    27ce:	883b      	ldrh	r3, [r7, #0]
    27d0:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
    27d2:	7a7a      	ldrb	r2, [r7, #9]
    27d4:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    27d6:	4313      	orrs	r3, r2
    27d8:	626b      	str	r3, [r5, #36]	; 0x24
    27da:	e7e5      	b.n	27a8 <_i2c_master_write_packet+0x40>
		tmp_status = _i2c_master_address_response(module);
    27dc:	0030      	movs	r0, r6
    27de:	4b1e      	ldr	r3, [pc, #120]	; (2858 <_i2c_master_write_packet+0xf0>)
    27e0:	4798      	blx	r3
    27e2:	1e03      	subs	r3, r0, #0
    27e4:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
    27e6:	d1e5      	bne.n	27b4 <_i2c_master_write_packet+0x4c>
    27e8:	46a0      	mov	r8, r4
    27ea:	2400      	movs	r4, #0
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
    27ec:	3320      	adds	r3, #32
    27ee:	4699      	mov	r9, r3
			_i2c_master_wait_for_sync(module);
    27f0:	4b15      	ldr	r3, [pc, #84]	; (2848 <_i2c_master_write_packet+0xe0>)
    27f2:	469b      	mov	fp, r3
			tmp_status = _i2c_master_wait_for_bus(module);
    27f4:	4b16      	ldr	r3, [pc, #88]	; (2850 <_i2c_master_write_packet+0xe8>)
    27f6:	469a      	mov	sl, r3
		while (tmp_data_length--) {
    27f8:	4544      	cmp	r4, r8
    27fa:	d015      	beq.n	2828 <_i2c_master_write_packet+0xc0>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
    27fc:	8b6b      	ldrh	r3, [r5, #26]
    27fe:	464a      	mov	r2, r9
    2800:	4213      	tst	r3, r2
    2802:	d01d      	beq.n	2840 <_i2c_master_write_packet+0xd8>
			_i2c_master_wait_for_sync(module);
    2804:	0030      	movs	r0, r6
    2806:	47d8      	blx	fp
			i2c_module->DATA.reg = packet->data[buffer_counter++];
    2808:	687b      	ldr	r3, [r7, #4]
    280a:	5d1a      	ldrb	r2, [r3, r4]
    280c:	2328      	movs	r3, #40	; 0x28
    280e:	54ea      	strb	r2, [r5, r3]
			tmp_status = _i2c_master_wait_for_bus(module);
    2810:	0030      	movs	r0, r6
    2812:	47d0      	blx	sl
			if (tmp_status != STATUS_OK) {
    2814:	2800      	cmp	r0, #0
    2816:	d106      	bne.n	2826 <_i2c_master_write_packet+0xbe>
			if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
    2818:	8b6b      	ldrh	r3, [r5, #26]
    281a:	3401      	adds	r4, #1
    281c:	075b      	lsls	r3, r3, #29
    281e:	d5eb      	bpl.n	27f8 <_i2c_master_write_packet+0x90>
				tmp_status = STATUS_ERR_OVERFLOW;
    2820:	231e      	movs	r3, #30
    2822:	9301      	str	r3, [sp, #4]
    2824:	e000      	b.n	2828 <_i2c_master_write_packet+0xc0>
			tmp_status = _i2c_master_wait_for_bus(module);
    2826:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
    2828:	7ab3      	ldrb	r3, [r6, #10]
    282a:	2b00      	cmp	r3, #0
    282c:	d0c2      	beq.n	27b4 <_i2c_master_write_packet+0x4c>
			_i2c_master_wait_for_sync(module);
    282e:	0030      	movs	r0, r6
    2830:	4b05      	ldr	r3, [pc, #20]	; (2848 <_i2c_master_write_packet+0xe0>)
    2832:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    2834:	686a      	ldr	r2, [r5, #4]
    2836:	23c0      	movs	r3, #192	; 0xc0
    2838:	029b      	lsls	r3, r3, #10
    283a:	4313      	orrs	r3, r2
    283c:	606b      	str	r3, [r5, #4]
    283e:	e7b9      	b.n	27b4 <_i2c_master_write_packet+0x4c>
				return STATUS_ERR_PACKET_COLLISION;
    2840:	2341      	movs	r3, #65	; 0x41
    2842:	9301      	str	r3, [sp, #4]
    2844:	e7b6      	b.n	27b4 <_i2c_master_write_packet+0x4c>
    2846:	46c0      	nop			; (mov r8, r8)
    2848:	0000236d 	.word	0x0000236d
    284c:	fffbffff 	.word	0xfffbffff
    2850:	00002599 	.word	0x00002599
    2854:	000025c5 	.word	0x000025c5
    2858:	00002569 	.word	0x00002569

0000285c <i2c_master_read_packet_wait_no_stop>:
{
    285c:	b510      	push	{r4, lr}
	if (module->buffer_remaining > 0) {
    285e:	8b83      	ldrh	r3, [r0, #28]
    2860:	b29b      	uxth	r3, r3
		return STATUS_BUSY;
    2862:	2205      	movs	r2, #5
	if (module->buffer_remaining > 0) {
    2864:	2b00      	cmp	r3, #0
    2866:	d001      	beq.n	286c <i2c_master_read_packet_wait_no_stop+0x10>
}
    2868:	0010      	movs	r0, r2
    286a:	bd10      	pop	{r4, pc}
	module->send_stop = false;
    286c:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
    286e:	3301      	adds	r3, #1
    2870:	72c3      	strb	r3, [r0, #11]
	return _i2c_master_read_packet(module, packet);
    2872:	4b02      	ldr	r3, [pc, #8]	; (287c <i2c_master_read_packet_wait_no_stop+0x20>)
    2874:	4798      	blx	r3
    2876:	0002      	movs	r2, r0
    2878:	e7f6      	b.n	2868 <i2c_master_read_packet_wait_no_stop+0xc>
    287a:	46c0      	nop			; (mov r8, r8)
    287c:	000025e5 	.word	0x000025e5

00002880 <i2c_master_write_packet_wait>:
 *                                      last data sent
 */
enum status_code i2c_master_write_packet_wait(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
    2880:	b510      	push	{r4, lr}
	Assert(module->hw);
	Assert(packet);

#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job */
	if (module->buffer_remaining > 0) {
    2882:	8b83      	ldrh	r3, [r0, #28]
    2884:	b29b      	uxth	r3, r3
		return STATUS_BUSY;
    2886:	2205      	movs	r2, #5
	if (module->buffer_remaining > 0) {
    2888:	2b00      	cmp	r3, #0
    288a:	d001      	beq.n	2890 <i2c_master_write_packet_wait+0x10>

	module->send_stop = true;
	module->send_nack = true;

	return _i2c_master_write_packet(module, packet);
}
    288c:	0010      	movs	r0, r2
    288e:	bd10      	pop	{r4, pc}
	module->send_stop = true;
    2890:	3301      	adds	r3, #1
    2892:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
    2894:	72c3      	strb	r3, [r0, #11]
	return _i2c_master_write_packet(module, packet);
    2896:	4b02      	ldr	r3, [pc, #8]	; (28a0 <i2c_master_write_packet_wait+0x20>)
    2898:	4798      	blx	r3
    289a:	0002      	movs	r2, r0
    289c:	e7f6      	b.n	288c <i2c_master_write_packet_wait+0xc>
    289e:	46c0      	nop			; (mov r8, r8)
    28a0:	00002769 	.word	0x00002769

000028a4 <_i2c_master_wait_for_sync>:
    28a4:	6801      	ldr	r1, [r0, #0]
    28a6:	2207      	movs	r2, #7
    28a8:	69cb      	ldr	r3, [r1, #28]
    28aa:	421a      	tst	r2, r3
    28ac:	d1fc      	bne.n	28a8 <_i2c_master_wait_for_sync+0x4>
    28ae:	4770      	bx	lr

000028b0 <_i2c_master_read>:
    28b0:	b570      	push	{r4, r5, r6, lr}
    28b2:	0004      	movs	r4, r0
    28b4:	6806      	ldr	r6, [r0, #0]
    28b6:	6832      	ldr	r2, [r6, #0]
    28b8:	8b45      	ldrh	r5, [r0, #26]
    28ba:	8b83      	ldrh	r3, [r0, #28]
    28bc:	1aed      	subs	r5, r5, r3
    28be:	b2ad      	uxth	r5, r5
    28c0:	8b83      	ldrh	r3, [r0, #28]
    28c2:	3b01      	subs	r3, #1
    28c4:	b29b      	uxth	r3, r3
    28c6:	8383      	strh	r3, [r0, #28]
    28c8:	0113      	lsls	r3, r2, #4
    28ca:	d51d      	bpl.n	2908 <_i2c_master_read+0x58>
    28cc:	7ac3      	ldrb	r3, [r0, #11]
    28ce:	2b00      	cmp	r3, #0
    28d0:	d003      	beq.n	28da <_i2c_master_read+0x2a>
    28d2:	8b83      	ldrh	r3, [r0, #28]
    28d4:	b29b      	uxth	r3, r3
    28d6:	2b01      	cmp	r3, #1
    28d8:	d010      	beq.n	28fc <_i2c_master_read+0x4c>
    28da:	8ba3      	ldrh	r3, [r4, #28]
    28dc:	b29b      	uxth	r3, r3
    28de:	2b00      	cmp	r3, #0
    28e0:	d102      	bne.n	28e8 <_i2c_master_read+0x38>
    28e2:	7aa3      	ldrb	r3, [r4, #10]
    28e4:	2b00      	cmp	r3, #0
    28e6:	d11c      	bne.n	2922 <_i2c_master_read+0x72>
    28e8:	0020      	movs	r0, r4
    28ea:	4b12      	ldr	r3, [pc, #72]	; (2934 <_i2c_master_read+0x84>)
    28ec:	4798      	blx	r3
    28ee:	6a23      	ldr	r3, [r4, #32]
    28f0:	195d      	adds	r5, r3, r5
    28f2:	2328      	movs	r3, #40	; 0x28
    28f4:	5cf3      	ldrb	r3, [r6, r3]
    28f6:	b2db      	uxtb	r3, r3
    28f8:	702b      	strb	r3, [r5, #0]
    28fa:	bd70      	pop	{r4, r5, r6, pc}
    28fc:	6872      	ldr	r2, [r6, #4]
    28fe:	2380      	movs	r3, #128	; 0x80
    2900:	02db      	lsls	r3, r3, #11
    2902:	4313      	orrs	r3, r2
    2904:	6073      	str	r3, [r6, #4]
    2906:	e7e8      	b.n	28da <_i2c_master_read+0x2a>
    2908:	7ac3      	ldrb	r3, [r0, #11]
    290a:	2b00      	cmp	r3, #0
    290c:	d0e5      	beq.n	28da <_i2c_master_read+0x2a>
    290e:	8b83      	ldrh	r3, [r0, #28]
    2910:	b29b      	uxth	r3, r3
    2912:	2b00      	cmp	r3, #0
    2914:	d1e1      	bne.n	28da <_i2c_master_read+0x2a>
    2916:	6872      	ldr	r2, [r6, #4]
    2918:	2380      	movs	r3, #128	; 0x80
    291a:	02db      	lsls	r3, r3, #11
    291c:	4313      	orrs	r3, r2
    291e:	6073      	str	r3, [r6, #4]
    2920:	e7db      	b.n	28da <_i2c_master_read+0x2a>
    2922:	0020      	movs	r0, r4
    2924:	4b03      	ldr	r3, [pc, #12]	; (2934 <_i2c_master_read+0x84>)
    2926:	4798      	blx	r3
    2928:	6872      	ldr	r2, [r6, #4]
    292a:	23c0      	movs	r3, #192	; 0xc0
    292c:	029b      	lsls	r3, r3, #10
    292e:	4313      	orrs	r3, r2
    2930:	6073      	str	r3, [r6, #4]
    2932:	e7d9      	b.n	28e8 <_i2c_master_read+0x38>
    2934:	000028a5 	.word	0x000028a5

00002938 <_i2c_master_write>:
    2938:	b570      	push	{r4, r5, r6, lr}
    293a:	0004      	movs	r4, r0
    293c:	6805      	ldr	r5, [r0, #0]
    293e:	8b6b      	ldrh	r3, [r5, #26]
    2940:	075b      	lsls	r3, r3, #29
    2942:	d503      	bpl.n	294c <_i2c_master_write+0x14>
    2944:	221e      	movs	r2, #30
    2946:	2325      	movs	r3, #37	; 0x25
    2948:	54c2      	strb	r2, [r0, r3]
    294a:	bd70      	pop	{r4, r5, r6, pc}
    294c:	8b46      	ldrh	r6, [r0, #26]
    294e:	8b83      	ldrh	r3, [r0, #28]
    2950:	1af6      	subs	r6, r6, r3
    2952:	b2b6      	uxth	r6, r6
    2954:	8b83      	ldrh	r3, [r0, #28]
    2956:	3b01      	subs	r3, #1
    2958:	b29b      	uxth	r3, r3
    295a:	8383      	strh	r3, [r0, #28]
    295c:	4b04      	ldr	r3, [pc, #16]	; (2970 <_i2c_master_write+0x38>)
    295e:	4798      	blx	r3
    2960:	6a23      	ldr	r3, [r4, #32]
    2962:	199e      	adds	r6, r3, r6
    2964:	7833      	ldrb	r3, [r6, #0]
    2966:	b2db      	uxtb	r3, r3
    2968:	2228      	movs	r2, #40	; 0x28
    296a:	54ab      	strb	r3, [r5, r2]
    296c:	e7ed      	b.n	294a <_i2c_master_write+0x12>
    296e:	46c0      	nop			; (mov r8, r8)
    2970:	000028a5 	.word	0x000028a5

00002974 <_i2c_master_interrupt_handler>:
    2974:	b570      	push	{r4, r5, r6, lr}
    2976:	0080      	lsls	r0, r0, #2
    2978:	4b75      	ldr	r3, [pc, #468]	; (2b50 <_i2c_master_interrupt_handler+0x1dc>)
    297a:	58c4      	ldr	r4, [r0, r3]
    297c:	6825      	ldr	r5, [r4, #0]
    297e:	682b      	ldr	r3, [r5, #0]
    2980:	011b      	lsls	r3, r3, #4
    2982:	0fda      	lsrs	r2, r3, #31
    2984:	7e63      	ldrb	r3, [r4, #25]
    2986:	7e26      	ldrb	r6, [r4, #24]
    2988:	401e      	ands	r6, r3
    298a:	8b63      	ldrh	r3, [r4, #26]
    298c:	b29b      	uxth	r3, r3
    298e:	2b00      	cmp	r3, #0
    2990:	d103      	bne.n	299a <_i2c_master_interrupt_handler+0x26>
    2992:	8ba3      	ldrh	r3, [r4, #28]
    2994:	b29b      	uxth	r3, r3
    2996:	2b00      	cmp	r3, #0
    2998:	d123      	bne.n	29e2 <_i2c_master_interrupt_handler+0x6e>
    299a:	8b63      	ldrh	r3, [r4, #26]
    299c:	b29b      	uxth	r3, r3
    299e:	2b00      	cmp	r3, #0
    29a0:	d008      	beq.n	29b4 <_i2c_master_interrupt_handler+0x40>
    29a2:	8ba3      	ldrh	r3, [r4, #28]
    29a4:	b29b      	uxth	r3, r3
    29a6:	2b00      	cmp	r3, #0
    29a8:	d104      	bne.n	29b4 <_i2c_master_interrupt_handler+0x40>
    29aa:	3325      	adds	r3, #37	; 0x25
    29ac:	5ce3      	ldrb	r3, [r4, r3]
    29ae:	2b05      	cmp	r3, #5
    29b0:	d100      	bne.n	29b4 <_i2c_master_interrupt_handler+0x40>
    29b2:	e06d      	b.n	2a90 <_i2c_master_interrupt_handler+0x11c>
    29b4:	8b63      	ldrh	r3, [r4, #26]
    29b6:	b29b      	uxth	r3, r3
    29b8:	2b00      	cmp	r3, #0
    29ba:	d024      	beq.n	2a06 <_i2c_master_interrupt_handler+0x92>
    29bc:	8ba3      	ldrh	r3, [r4, #28]
    29be:	b29b      	uxth	r3, r3
    29c0:	2b00      	cmp	r3, #0
    29c2:	d020      	beq.n	2a06 <_i2c_master_interrupt_handler+0x92>
    29c4:	8b6b      	ldrh	r3, [r5, #26]
    29c6:	069b      	lsls	r3, r3, #26
    29c8:	d500      	bpl.n	29cc <_i2c_master_interrupt_handler+0x58>
    29ca:	e081      	b.n	2ad0 <_i2c_master_interrupt_handler+0x15c>
    29cc:	2a00      	cmp	r2, #0
    29ce:	d004      	beq.n	29da <_i2c_master_interrupt_handler+0x66>
    29d0:	8ba3      	ldrh	r3, [r4, #28]
    29d2:	b29b      	uxth	r3, r3
    29d4:	2b01      	cmp	r3, #1
    29d6:	d100      	bne.n	29da <_i2c_master_interrupt_handler+0x66>
    29d8:	e07a      	b.n	2ad0 <_i2c_master_interrupt_handler+0x15c>
    29da:	2241      	movs	r2, #65	; 0x41
    29dc:	2325      	movs	r3, #37	; 0x25
    29de:	54e2      	strb	r2, [r4, r3]
    29e0:	e011      	b.n	2a06 <_i2c_master_interrupt_handler+0x92>
    29e2:	7e2b      	ldrb	r3, [r5, #24]
    29e4:	07db      	lsls	r3, r3, #31
    29e6:	d533      	bpl.n	2a50 <_i2c_master_interrupt_handler+0xdc>
    29e8:	2301      	movs	r3, #1
    29ea:	762b      	strb	r3, [r5, #24]
    29ec:	8b6b      	ldrh	r3, [r5, #26]
    29ee:	079b      	lsls	r3, r3, #30
    29f0:	d502      	bpl.n	29f8 <_i2c_master_interrupt_handler+0x84>
    29f2:	2241      	movs	r2, #65	; 0x41
    29f4:	2325      	movs	r3, #37	; 0x25
    29f6:	54e2      	strb	r2, [r4, r3]
    29f8:	8ba3      	ldrh	r3, [r4, #28]
    29fa:	b29b      	uxth	r3, r3
    29fc:	8363      	strh	r3, [r4, #26]
    29fe:	2325      	movs	r3, #37	; 0x25
    2a00:	5ce3      	ldrb	r3, [r4, r3]
    2a02:	2b05      	cmp	r3, #5
    2a04:	d038      	beq.n	2a78 <_i2c_master_interrupt_handler+0x104>
    2a06:	8b63      	ldrh	r3, [r4, #26]
    2a08:	b29b      	uxth	r3, r3
    2a0a:	2b00      	cmp	r3, #0
    2a0c:	d007      	beq.n	2a1e <_i2c_master_interrupt_handler+0xaa>
    2a0e:	8ba3      	ldrh	r3, [r4, #28]
    2a10:	b29b      	uxth	r3, r3
    2a12:	2b00      	cmp	r3, #0
    2a14:	d103      	bne.n	2a1e <_i2c_master_interrupt_handler+0xaa>
    2a16:	3325      	adds	r3, #37	; 0x25
    2a18:	5ce3      	ldrb	r3, [r4, r3]
    2a1a:	2b05      	cmp	r3, #5
    2a1c:	d064      	beq.n	2ae8 <_i2c_master_interrupt_handler+0x174>
    2a1e:	2325      	movs	r3, #37	; 0x25
    2a20:	5ce3      	ldrb	r3, [r4, r3]
    2a22:	2b05      	cmp	r3, #5
    2a24:	d013      	beq.n	2a4e <_i2c_master_interrupt_handler+0xda>
    2a26:	2325      	movs	r3, #37	; 0x25
    2a28:	5ce3      	ldrb	r3, [r4, r3]
    2a2a:	2b00      	cmp	r3, #0
    2a2c:	d00f      	beq.n	2a4e <_i2c_master_interrupt_handler+0xda>
    2a2e:	2303      	movs	r3, #3
    2a30:	752b      	strb	r3, [r5, #20]
    2a32:	2300      	movs	r3, #0
    2a34:	8363      	strh	r3, [r4, #26]
    2a36:	83a3      	strh	r3, [r4, #28]
    2a38:	3325      	adds	r3, #37	; 0x25
    2a3a:	5ce3      	ldrb	r3, [r4, r3]
    2a3c:	2b41      	cmp	r3, #65	; 0x41
    2a3e:	d003      	beq.n	2a48 <_i2c_master_interrupt_handler+0xd4>
    2a40:	7aa3      	ldrb	r3, [r4, #10]
    2a42:	2b00      	cmp	r3, #0
    2a44:	d000      	beq.n	2a48 <_i2c_master_interrupt_handler+0xd4>
    2a46:	e075      	b.n	2b34 <_i2c_master_interrupt_handler+0x1c0>
    2a48:	0773      	lsls	r3, r6, #29
    2a4a:	d500      	bpl.n	2a4e <_i2c_master_interrupt_handler+0xda>
    2a4c:	e07b      	b.n	2b46 <_i2c_master_interrupt_handler+0x1d2>
    2a4e:	bd70      	pop	{r4, r5, r6, pc}
    2a50:	8b6b      	ldrh	r3, [r5, #26]
    2a52:	075b      	lsls	r3, r3, #29
    2a54:	d5d0      	bpl.n	29f8 <_i2c_master_interrupt_handler+0x84>
    2a56:	2218      	movs	r2, #24
    2a58:	2325      	movs	r3, #37	; 0x25
    2a5a:	54e2      	strb	r2, [r4, r3]
    2a5c:	2300      	movs	r3, #0
    2a5e:	83a3      	strh	r3, [r4, #28]
    2a60:	7aa3      	ldrb	r3, [r4, #10]
    2a62:	2b00      	cmp	r3, #0
    2a64:	d0c8      	beq.n	29f8 <_i2c_master_interrupt_handler+0x84>
    2a66:	0020      	movs	r0, r4
    2a68:	4b3a      	ldr	r3, [pc, #232]	; (2b54 <_i2c_master_interrupt_handler+0x1e0>)
    2a6a:	4798      	blx	r3
    2a6c:	686a      	ldr	r2, [r5, #4]
    2a6e:	23c0      	movs	r3, #192	; 0xc0
    2a70:	029b      	lsls	r3, r3, #10
    2a72:	4313      	orrs	r3, r2
    2a74:	606b      	str	r3, [r5, #4]
    2a76:	e7bf      	b.n	29f8 <_i2c_master_interrupt_handler+0x84>
    2a78:	331f      	adds	r3, #31
    2a7a:	5ce3      	ldrb	r3, [r4, r3]
    2a7c:	2b00      	cmp	r3, #0
    2a7e:	d003      	beq.n	2a88 <_i2c_master_interrupt_handler+0x114>
    2a80:	0020      	movs	r0, r4
    2a82:	4b35      	ldr	r3, [pc, #212]	; (2b58 <_i2c_master_interrupt_handler+0x1e4>)
    2a84:	4798      	blx	r3
    2a86:	e7be      	b.n	2a06 <_i2c_master_interrupt_handler+0x92>
    2a88:	0020      	movs	r0, r4
    2a8a:	4b34      	ldr	r3, [pc, #208]	; (2b5c <_i2c_master_interrupt_handler+0x1e8>)
    2a8c:	4798      	blx	r3
    2a8e:	e7ba      	b.n	2a06 <_i2c_master_interrupt_handler+0x92>
    2a90:	331f      	adds	r3, #31
    2a92:	5ce3      	ldrb	r3, [r4, r3]
    2a94:	2b00      	cmp	r3, #0
    2a96:	d000      	beq.n	2a9a <_i2c_master_interrupt_handler+0x126>
    2a98:	e78c      	b.n	29b4 <_i2c_master_interrupt_handler+0x40>
    2a9a:	3303      	adds	r3, #3
    2a9c:	752b      	strb	r3, [r5, #20]
    2a9e:	2300      	movs	r3, #0
    2aa0:	8363      	strh	r3, [r4, #26]
    2aa2:	3325      	adds	r3, #37	; 0x25
    2aa4:	2200      	movs	r2, #0
    2aa6:	54e2      	strb	r2, [r4, r3]
    2aa8:	7aa3      	ldrb	r3, [r4, #10]
    2aaa:	2b00      	cmp	r3, #0
    2aac:	d107      	bne.n	2abe <_i2c_master_interrupt_handler+0x14a>
    2aae:	2301      	movs	r3, #1
    2ab0:	762b      	strb	r3, [r5, #24]
    2ab2:	07f3      	lsls	r3, r6, #31
    2ab4:	d5a7      	bpl.n	2a06 <_i2c_master_interrupt_handler+0x92>
    2ab6:	68e3      	ldr	r3, [r4, #12]
    2ab8:	0020      	movs	r0, r4
    2aba:	4798      	blx	r3
    2abc:	e7a3      	b.n	2a06 <_i2c_master_interrupt_handler+0x92>
    2abe:	0020      	movs	r0, r4
    2ac0:	4b24      	ldr	r3, [pc, #144]	; (2b54 <_i2c_master_interrupt_handler+0x1e0>)
    2ac2:	4798      	blx	r3
    2ac4:	686a      	ldr	r2, [r5, #4]
    2ac6:	23c0      	movs	r3, #192	; 0xc0
    2ac8:	029b      	lsls	r3, r3, #10
    2aca:	4313      	orrs	r3, r2
    2acc:	606b      	str	r3, [r5, #4]
    2ace:	e7f0      	b.n	2ab2 <_i2c_master_interrupt_handler+0x13e>
    2ad0:	2324      	movs	r3, #36	; 0x24
    2ad2:	5ce3      	ldrb	r3, [r4, r3]
    2ad4:	2b00      	cmp	r3, #0
    2ad6:	d103      	bne.n	2ae0 <_i2c_master_interrupt_handler+0x16c>
    2ad8:	0020      	movs	r0, r4
    2ada:	4b20      	ldr	r3, [pc, #128]	; (2b5c <_i2c_master_interrupt_handler+0x1e8>)
    2adc:	4798      	blx	r3
    2ade:	e792      	b.n	2a06 <_i2c_master_interrupt_handler+0x92>
    2ae0:	0020      	movs	r0, r4
    2ae2:	4b1d      	ldr	r3, [pc, #116]	; (2b58 <_i2c_master_interrupt_handler+0x1e4>)
    2ae4:	4798      	blx	r3
    2ae6:	e78e      	b.n	2a06 <_i2c_master_interrupt_handler+0x92>
    2ae8:	331f      	adds	r3, #31
    2aea:	5ce3      	ldrb	r3, [r4, r3]
    2aec:	2b01      	cmp	r3, #1
    2aee:	d196      	bne.n	2a1e <_i2c_master_interrupt_handler+0xaa>
    2af0:	7e2b      	ldrb	r3, [r5, #24]
    2af2:	079b      	lsls	r3, r3, #30
    2af4:	d501      	bpl.n	2afa <_i2c_master_interrupt_handler+0x186>
    2af6:	2302      	movs	r3, #2
    2af8:	762b      	strb	r3, [r5, #24]
    2afa:	2303      	movs	r3, #3
    2afc:	752b      	strb	r3, [r5, #20]
    2afe:	2300      	movs	r3, #0
    2b00:	8363      	strh	r3, [r4, #26]
    2b02:	3325      	adds	r3, #37	; 0x25
    2b04:	2200      	movs	r2, #0
    2b06:	54e2      	strb	r2, [r4, r3]
    2b08:	07b3      	lsls	r3, r6, #30
    2b0a:	d503      	bpl.n	2b14 <_i2c_master_interrupt_handler+0x1a0>
    2b0c:	2324      	movs	r3, #36	; 0x24
    2b0e:	5ce3      	ldrb	r3, [r4, r3]
    2b10:	2b01      	cmp	r3, #1
    2b12:	d00b      	beq.n	2b2c <_i2c_master_interrupt_handler+0x1b8>
    2b14:	07f3      	lsls	r3, r6, #31
    2b16:	d400      	bmi.n	2b1a <_i2c_master_interrupt_handler+0x1a6>
    2b18:	e781      	b.n	2a1e <_i2c_master_interrupt_handler+0xaa>
    2b1a:	2324      	movs	r3, #36	; 0x24
    2b1c:	5ce3      	ldrb	r3, [r4, r3]
    2b1e:	2b00      	cmp	r3, #0
    2b20:	d000      	beq.n	2b24 <_i2c_master_interrupt_handler+0x1b0>
    2b22:	e77c      	b.n	2a1e <_i2c_master_interrupt_handler+0xaa>
    2b24:	68e3      	ldr	r3, [r4, #12]
    2b26:	0020      	movs	r0, r4
    2b28:	4798      	blx	r3
    2b2a:	e778      	b.n	2a1e <_i2c_master_interrupt_handler+0xaa>
    2b2c:	6923      	ldr	r3, [r4, #16]
    2b2e:	0020      	movs	r0, r4
    2b30:	4798      	blx	r3
    2b32:	e774      	b.n	2a1e <_i2c_master_interrupt_handler+0xaa>
    2b34:	0020      	movs	r0, r4
    2b36:	4b07      	ldr	r3, [pc, #28]	; (2b54 <_i2c_master_interrupt_handler+0x1e0>)
    2b38:	4798      	blx	r3
    2b3a:	686a      	ldr	r2, [r5, #4]
    2b3c:	23e0      	movs	r3, #224	; 0xe0
    2b3e:	02db      	lsls	r3, r3, #11
    2b40:	4313      	orrs	r3, r2
    2b42:	606b      	str	r3, [r5, #4]
    2b44:	e780      	b.n	2a48 <_i2c_master_interrupt_handler+0xd4>
    2b46:	6963      	ldr	r3, [r4, #20]
    2b48:	0020      	movs	r0, r4
    2b4a:	4798      	blx	r3
    2b4c:	e77f      	b.n	2a4e <_i2c_master_interrupt_handler+0xda>
    2b4e:	46c0      	nop			; (mov r8, r8)
    2b50:	200003b4 	.word	0x200003b4
    2b54:	000028a5 	.word	0x000028a5
    2b58:	000028b1 	.word	0x000028b1
    2b5c:	00002939 	.word	0x00002939

00002b60 <sercom_set_gclk_generator>:
    2b60:	b510      	push	{r4, lr}
    2b62:	b082      	sub	sp, #8
    2b64:	0004      	movs	r4, r0
    2b66:	4b0e      	ldr	r3, [pc, #56]	; (2ba0 <sercom_set_gclk_generator+0x40>)
    2b68:	781b      	ldrb	r3, [r3, #0]
    2b6a:	2b00      	cmp	r3, #0
    2b6c:	d007      	beq.n	2b7e <sercom_set_gclk_generator+0x1e>
    2b6e:	2900      	cmp	r1, #0
    2b70:	d105      	bne.n	2b7e <sercom_set_gclk_generator+0x1e>
    2b72:	4b0b      	ldr	r3, [pc, #44]	; (2ba0 <sercom_set_gclk_generator+0x40>)
    2b74:	785b      	ldrb	r3, [r3, #1]
    2b76:	4283      	cmp	r3, r0
    2b78:	d010      	beq.n	2b9c <sercom_set_gclk_generator+0x3c>
    2b7a:	201d      	movs	r0, #29
    2b7c:	e00c      	b.n	2b98 <sercom_set_gclk_generator+0x38>
    2b7e:	a901      	add	r1, sp, #4
    2b80:	700c      	strb	r4, [r1, #0]
    2b82:	2013      	movs	r0, #19
    2b84:	4b07      	ldr	r3, [pc, #28]	; (2ba4 <sercom_set_gclk_generator+0x44>)
    2b86:	4798      	blx	r3
    2b88:	2013      	movs	r0, #19
    2b8a:	4b07      	ldr	r3, [pc, #28]	; (2ba8 <sercom_set_gclk_generator+0x48>)
    2b8c:	4798      	blx	r3
    2b8e:	4b04      	ldr	r3, [pc, #16]	; (2ba0 <sercom_set_gclk_generator+0x40>)
    2b90:	705c      	strb	r4, [r3, #1]
    2b92:	2201      	movs	r2, #1
    2b94:	701a      	strb	r2, [r3, #0]
    2b96:	2000      	movs	r0, #0
    2b98:	b002      	add	sp, #8
    2b9a:	bd10      	pop	{r4, pc}
    2b9c:	2000      	movs	r0, #0
    2b9e:	e7fb      	b.n	2b98 <sercom_set_gclk_generator+0x38>
    2ba0:	20000190 	.word	0x20000190
    2ba4:	00002fd5 	.word	0x00002fd5
    2ba8:	00002f49 	.word	0x00002f49

00002bac <_sercom_get_default_pad>:
    2bac:	4b40      	ldr	r3, [pc, #256]	; (2cb0 <_sercom_get_default_pad+0x104>)
    2bae:	4298      	cmp	r0, r3
    2bb0:	d031      	beq.n	2c16 <_sercom_get_default_pad+0x6a>
    2bb2:	d90a      	bls.n	2bca <_sercom_get_default_pad+0x1e>
    2bb4:	4b3f      	ldr	r3, [pc, #252]	; (2cb4 <_sercom_get_default_pad+0x108>)
    2bb6:	4298      	cmp	r0, r3
    2bb8:	d04d      	beq.n	2c56 <_sercom_get_default_pad+0xaa>
    2bba:	4b3f      	ldr	r3, [pc, #252]	; (2cb8 <_sercom_get_default_pad+0x10c>)
    2bbc:	4298      	cmp	r0, r3
    2bbe:	d05a      	beq.n	2c76 <_sercom_get_default_pad+0xca>
    2bc0:	4b3e      	ldr	r3, [pc, #248]	; (2cbc <_sercom_get_default_pad+0x110>)
    2bc2:	4298      	cmp	r0, r3
    2bc4:	d037      	beq.n	2c36 <_sercom_get_default_pad+0x8a>
    2bc6:	2000      	movs	r0, #0
    2bc8:	4770      	bx	lr
    2bca:	4b3d      	ldr	r3, [pc, #244]	; (2cc0 <_sercom_get_default_pad+0x114>)
    2bcc:	4298      	cmp	r0, r3
    2bce:	d00c      	beq.n	2bea <_sercom_get_default_pad+0x3e>
    2bd0:	4b3c      	ldr	r3, [pc, #240]	; (2cc4 <_sercom_get_default_pad+0x118>)
    2bd2:	4298      	cmp	r0, r3
    2bd4:	d1f7      	bne.n	2bc6 <_sercom_get_default_pad+0x1a>
    2bd6:	2901      	cmp	r1, #1
    2bd8:	d017      	beq.n	2c0a <_sercom_get_default_pad+0x5e>
    2bda:	2900      	cmp	r1, #0
    2bdc:	d05d      	beq.n	2c9a <_sercom_get_default_pad+0xee>
    2bde:	2902      	cmp	r1, #2
    2be0:	d015      	beq.n	2c0e <_sercom_get_default_pad+0x62>
    2be2:	2903      	cmp	r1, #3
    2be4:	d015      	beq.n	2c12 <_sercom_get_default_pad+0x66>
    2be6:	2000      	movs	r0, #0
    2be8:	e7ee      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2bea:	2901      	cmp	r1, #1
    2bec:	d007      	beq.n	2bfe <_sercom_get_default_pad+0x52>
    2bee:	2900      	cmp	r1, #0
    2bf0:	d051      	beq.n	2c96 <_sercom_get_default_pad+0xea>
    2bf2:	2902      	cmp	r1, #2
    2bf4:	d005      	beq.n	2c02 <_sercom_get_default_pad+0x56>
    2bf6:	2903      	cmp	r1, #3
    2bf8:	d005      	beq.n	2c06 <_sercom_get_default_pad+0x5a>
    2bfa:	2000      	movs	r0, #0
    2bfc:	e7e4      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2bfe:	4832      	ldr	r0, [pc, #200]	; (2cc8 <_sercom_get_default_pad+0x11c>)
    2c00:	e7e2      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c02:	4832      	ldr	r0, [pc, #200]	; (2ccc <_sercom_get_default_pad+0x120>)
    2c04:	e7e0      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c06:	4832      	ldr	r0, [pc, #200]	; (2cd0 <_sercom_get_default_pad+0x124>)
    2c08:	e7de      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c0a:	4832      	ldr	r0, [pc, #200]	; (2cd4 <_sercom_get_default_pad+0x128>)
    2c0c:	e7dc      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c0e:	4832      	ldr	r0, [pc, #200]	; (2cd8 <_sercom_get_default_pad+0x12c>)
    2c10:	e7da      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c12:	4832      	ldr	r0, [pc, #200]	; (2cdc <_sercom_get_default_pad+0x130>)
    2c14:	e7d8      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c16:	2901      	cmp	r1, #1
    2c18:	d007      	beq.n	2c2a <_sercom_get_default_pad+0x7e>
    2c1a:	2900      	cmp	r1, #0
    2c1c:	d03f      	beq.n	2c9e <_sercom_get_default_pad+0xf2>
    2c1e:	2902      	cmp	r1, #2
    2c20:	d005      	beq.n	2c2e <_sercom_get_default_pad+0x82>
    2c22:	2903      	cmp	r1, #3
    2c24:	d005      	beq.n	2c32 <_sercom_get_default_pad+0x86>
    2c26:	2000      	movs	r0, #0
    2c28:	e7ce      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c2a:	482d      	ldr	r0, [pc, #180]	; (2ce0 <_sercom_get_default_pad+0x134>)
    2c2c:	e7cc      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c2e:	482d      	ldr	r0, [pc, #180]	; (2ce4 <_sercom_get_default_pad+0x138>)
    2c30:	e7ca      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c32:	482d      	ldr	r0, [pc, #180]	; (2ce8 <_sercom_get_default_pad+0x13c>)
    2c34:	e7c8      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c36:	2901      	cmp	r1, #1
    2c38:	d007      	beq.n	2c4a <_sercom_get_default_pad+0x9e>
    2c3a:	2900      	cmp	r1, #0
    2c3c:	d031      	beq.n	2ca2 <_sercom_get_default_pad+0xf6>
    2c3e:	2902      	cmp	r1, #2
    2c40:	d005      	beq.n	2c4e <_sercom_get_default_pad+0xa2>
    2c42:	2903      	cmp	r1, #3
    2c44:	d005      	beq.n	2c52 <_sercom_get_default_pad+0xa6>
    2c46:	2000      	movs	r0, #0
    2c48:	e7be      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c4a:	4828      	ldr	r0, [pc, #160]	; (2cec <_sercom_get_default_pad+0x140>)
    2c4c:	e7bc      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c4e:	4828      	ldr	r0, [pc, #160]	; (2cf0 <_sercom_get_default_pad+0x144>)
    2c50:	e7ba      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c52:	4828      	ldr	r0, [pc, #160]	; (2cf4 <_sercom_get_default_pad+0x148>)
    2c54:	e7b8      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c56:	2901      	cmp	r1, #1
    2c58:	d007      	beq.n	2c6a <_sercom_get_default_pad+0xbe>
    2c5a:	2900      	cmp	r1, #0
    2c5c:	d023      	beq.n	2ca6 <_sercom_get_default_pad+0xfa>
    2c5e:	2902      	cmp	r1, #2
    2c60:	d005      	beq.n	2c6e <_sercom_get_default_pad+0xc2>
    2c62:	2903      	cmp	r1, #3
    2c64:	d005      	beq.n	2c72 <_sercom_get_default_pad+0xc6>
    2c66:	2000      	movs	r0, #0
    2c68:	e7ae      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c6a:	4823      	ldr	r0, [pc, #140]	; (2cf8 <_sercom_get_default_pad+0x14c>)
    2c6c:	e7ac      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c6e:	4823      	ldr	r0, [pc, #140]	; (2cfc <_sercom_get_default_pad+0x150>)
    2c70:	e7aa      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c72:	4823      	ldr	r0, [pc, #140]	; (2d00 <_sercom_get_default_pad+0x154>)
    2c74:	e7a8      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c76:	2901      	cmp	r1, #1
    2c78:	d007      	beq.n	2c8a <_sercom_get_default_pad+0xde>
    2c7a:	2900      	cmp	r1, #0
    2c7c:	d015      	beq.n	2caa <_sercom_get_default_pad+0xfe>
    2c7e:	2902      	cmp	r1, #2
    2c80:	d005      	beq.n	2c8e <_sercom_get_default_pad+0xe2>
    2c82:	2903      	cmp	r1, #3
    2c84:	d005      	beq.n	2c92 <_sercom_get_default_pad+0xe6>
    2c86:	2000      	movs	r0, #0
    2c88:	e79e      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c8a:	481e      	ldr	r0, [pc, #120]	; (2d04 <_sercom_get_default_pad+0x158>)
    2c8c:	e79c      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c8e:	481e      	ldr	r0, [pc, #120]	; (2d08 <_sercom_get_default_pad+0x15c>)
    2c90:	e79a      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c92:	481e      	ldr	r0, [pc, #120]	; (2d0c <_sercom_get_default_pad+0x160>)
    2c94:	e798      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c96:	481e      	ldr	r0, [pc, #120]	; (2d10 <_sercom_get_default_pad+0x164>)
    2c98:	e796      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c9a:	2003      	movs	r0, #3
    2c9c:	e794      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2c9e:	481d      	ldr	r0, [pc, #116]	; (2d14 <_sercom_get_default_pad+0x168>)
    2ca0:	e792      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2ca2:	481d      	ldr	r0, [pc, #116]	; (2d18 <_sercom_get_default_pad+0x16c>)
    2ca4:	e790      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2ca6:	481d      	ldr	r0, [pc, #116]	; (2d1c <_sercom_get_default_pad+0x170>)
    2ca8:	e78e      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2caa:	481d      	ldr	r0, [pc, #116]	; (2d20 <_sercom_get_default_pad+0x174>)
    2cac:	e78c      	b.n	2bc8 <_sercom_get_default_pad+0x1c>
    2cae:	46c0      	nop			; (mov r8, r8)
    2cb0:	42001000 	.word	0x42001000
    2cb4:	42001800 	.word	0x42001800
    2cb8:	42001c00 	.word	0x42001c00
    2cbc:	42001400 	.word	0x42001400
    2cc0:	42000800 	.word	0x42000800
    2cc4:	42000c00 	.word	0x42000c00
    2cc8:	00050003 	.word	0x00050003
    2ccc:	00060003 	.word	0x00060003
    2cd0:	00070003 	.word	0x00070003
    2cd4:	00010003 	.word	0x00010003
    2cd8:	001e0003 	.word	0x001e0003
    2cdc:	001f0003 	.word	0x001f0003
    2ce0:	00090003 	.word	0x00090003
    2ce4:	000a0003 	.word	0x000a0003
    2ce8:	000b0003 	.word	0x000b0003
    2cec:	00110003 	.word	0x00110003
    2cf0:	00120003 	.word	0x00120003
    2cf4:	00130003 	.word	0x00130003
    2cf8:	000d0003 	.word	0x000d0003
    2cfc:	000e0003 	.word	0x000e0003
    2d00:	000f0003 	.word	0x000f0003
    2d04:	00170003 	.word	0x00170003
    2d08:	00180003 	.word	0x00180003
    2d0c:	00190003 	.word	0x00190003
    2d10:	00040003 	.word	0x00040003
    2d14:	00080003 	.word	0x00080003
    2d18:	00100003 	.word	0x00100003
    2d1c:	000c0003 	.word	0x000c0003
    2d20:	00160003 	.word	0x00160003

00002d24 <_sercom_get_sercom_inst_index>:
    2d24:	b530      	push	{r4, r5, lr}
    2d26:	b087      	sub	sp, #28
    2d28:	4b0b      	ldr	r3, [pc, #44]	; (2d58 <_sercom_get_sercom_inst_index+0x34>)
    2d2a:	466a      	mov	r2, sp
    2d2c:	cb32      	ldmia	r3!, {r1, r4, r5}
    2d2e:	c232      	stmia	r2!, {r1, r4, r5}
    2d30:	cb32      	ldmia	r3!, {r1, r4, r5}
    2d32:	c232      	stmia	r2!, {r1, r4, r5}
    2d34:	9b00      	ldr	r3, [sp, #0]
    2d36:	4283      	cmp	r3, r0
    2d38:	d00b      	beq.n	2d52 <_sercom_get_sercom_inst_index+0x2e>
    2d3a:	2301      	movs	r3, #1
    2d3c:	009a      	lsls	r2, r3, #2
    2d3e:	4669      	mov	r1, sp
    2d40:	5852      	ldr	r2, [r2, r1]
    2d42:	4282      	cmp	r2, r0
    2d44:	d006      	beq.n	2d54 <_sercom_get_sercom_inst_index+0x30>
    2d46:	3301      	adds	r3, #1
    2d48:	2b06      	cmp	r3, #6
    2d4a:	d1f7      	bne.n	2d3c <_sercom_get_sercom_inst_index+0x18>
    2d4c:	2000      	movs	r0, #0
    2d4e:	b007      	add	sp, #28
    2d50:	bd30      	pop	{r4, r5, pc}
    2d52:	2300      	movs	r3, #0
    2d54:	b2d8      	uxtb	r0, r3
    2d56:	e7fa      	b.n	2d4e <_sercom_get_sercom_inst_index+0x2a>
    2d58:	00007fc8 	.word	0x00007fc8

00002d5c <_sercom_default_handler>:
    2d5c:	4770      	bx	lr
	...

00002d60 <_sercom_set_handler>:
    2d60:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d62:	4b0a      	ldr	r3, [pc, #40]	; (2d8c <_sercom_set_handler+0x2c>)
    2d64:	781b      	ldrb	r3, [r3, #0]
    2d66:	2b00      	cmp	r3, #0
    2d68:	d10c      	bne.n	2d84 <_sercom_set_handler+0x24>
    2d6a:	4f09      	ldr	r7, [pc, #36]	; (2d90 <_sercom_set_handler+0x30>)
    2d6c:	4e09      	ldr	r6, [pc, #36]	; (2d94 <_sercom_set_handler+0x34>)
    2d6e:	4d0a      	ldr	r5, [pc, #40]	; (2d98 <_sercom_set_handler+0x38>)
    2d70:	2400      	movs	r4, #0
    2d72:	51de      	str	r6, [r3, r7]
    2d74:	195a      	adds	r2, r3, r5
    2d76:	6014      	str	r4, [r2, #0]
    2d78:	3304      	adds	r3, #4
    2d7a:	2b18      	cmp	r3, #24
    2d7c:	d1f9      	bne.n	2d72 <_sercom_set_handler+0x12>
    2d7e:	2201      	movs	r2, #1
    2d80:	4b02      	ldr	r3, [pc, #8]	; (2d8c <_sercom_set_handler+0x2c>)
    2d82:	701a      	strb	r2, [r3, #0]
    2d84:	0080      	lsls	r0, r0, #2
    2d86:	4b02      	ldr	r3, [pc, #8]	; (2d90 <_sercom_set_handler+0x30>)
    2d88:	50c1      	str	r1, [r0, r3]
    2d8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d8c:	20000192 	.word	0x20000192
    2d90:	20000194 	.word	0x20000194
    2d94:	00002d5d 	.word	0x00002d5d
    2d98:	200003b4 	.word	0x200003b4

00002d9c <_sercom_get_interrupt_vector>:
    2d9c:	b500      	push	{lr}
    2d9e:	b083      	sub	sp, #12
    2da0:	2309      	movs	r3, #9
    2da2:	466a      	mov	r2, sp
    2da4:	7013      	strb	r3, [r2, #0]
    2da6:	3301      	adds	r3, #1
    2da8:	7053      	strb	r3, [r2, #1]
    2daa:	3301      	adds	r3, #1
    2dac:	7093      	strb	r3, [r2, #2]
    2dae:	3301      	adds	r3, #1
    2db0:	70d3      	strb	r3, [r2, #3]
    2db2:	3301      	adds	r3, #1
    2db4:	7113      	strb	r3, [r2, #4]
    2db6:	3301      	adds	r3, #1
    2db8:	7153      	strb	r3, [r2, #5]
    2dba:	4b03      	ldr	r3, [pc, #12]	; (2dc8 <_sercom_get_interrupt_vector+0x2c>)
    2dbc:	4798      	blx	r3
    2dbe:	466b      	mov	r3, sp
    2dc0:	5618      	ldrsb	r0, [r3, r0]
    2dc2:	b003      	add	sp, #12
    2dc4:	bd00      	pop	{pc}
    2dc6:	46c0      	nop			; (mov r8, r8)
    2dc8:	00002d25 	.word	0x00002d25

00002dcc <SERCOM0_Handler>:
    2dcc:	b510      	push	{r4, lr}
    2dce:	4b02      	ldr	r3, [pc, #8]	; (2dd8 <SERCOM0_Handler+0xc>)
    2dd0:	681b      	ldr	r3, [r3, #0]
    2dd2:	2000      	movs	r0, #0
    2dd4:	4798      	blx	r3
    2dd6:	bd10      	pop	{r4, pc}
    2dd8:	20000194 	.word	0x20000194

00002ddc <SERCOM1_Handler>:
    2ddc:	b510      	push	{r4, lr}
    2dde:	4b02      	ldr	r3, [pc, #8]	; (2de8 <SERCOM1_Handler+0xc>)
    2de0:	685b      	ldr	r3, [r3, #4]
    2de2:	2001      	movs	r0, #1
    2de4:	4798      	blx	r3
    2de6:	bd10      	pop	{r4, pc}
    2de8:	20000194 	.word	0x20000194

00002dec <SERCOM2_Handler>:
    2dec:	b510      	push	{r4, lr}
    2dee:	4b02      	ldr	r3, [pc, #8]	; (2df8 <SERCOM2_Handler+0xc>)
    2df0:	689b      	ldr	r3, [r3, #8]
    2df2:	2002      	movs	r0, #2
    2df4:	4798      	blx	r3
    2df6:	bd10      	pop	{r4, pc}
    2df8:	20000194 	.word	0x20000194

00002dfc <SERCOM3_Handler>:
    2dfc:	b510      	push	{r4, lr}
    2dfe:	4b02      	ldr	r3, [pc, #8]	; (2e08 <SERCOM3_Handler+0xc>)
    2e00:	68db      	ldr	r3, [r3, #12]
    2e02:	2003      	movs	r0, #3
    2e04:	4798      	blx	r3
    2e06:	bd10      	pop	{r4, pc}
    2e08:	20000194 	.word	0x20000194

00002e0c <SERCOM4_Handler>:
    2e0c:	b510      	push	{r4, lr}
    2e0e:	4b02      	ldr	r3, [pc, #8]	; (2e18 <SERCOM4_Handler+0xc>)
    2e10:	691b      	ldr	r3, [r3, #16]
    2e12:	2004      	movs	r0, #4
    2e14:	4798      	blx	r3
    2e16:	bd10      	pop	{r4, pc}
    2e18:	20000194 	.word	0x20000194

00002e1c <SERCOM5_Handler>:
    2e1c:	b510      	push	{r4, lr}
    2e1e:	4b02      	ldr	r3, [pc, #8]	; (2e28 <SERCOM5_Handler+0xc>)
    2e20:	695b      	ldr	r3, [r3, #20]
    2e22:	2005      	movs	r0, #5
    2e24:	4798      	blx	r3
    2e26:	bd10      	pop	{r4, pc}
    2e28:	20000194 	.word	0x20000194

00002e2c <system_clock_source_get_hz>:
    2e2c:	b510      	push	{r4, lr}
    2e2e:	2808      	cmp	r0, #8
    2e30:	d803      	bhi.n	2e3a <system_clock_source_get_hz+0xe>
    2e32:	0080      	lsls	r0, r0, #2
    2e34:	4b1b      	ldr	r3, [pc, #108]	; (2ea4 <system_clock_source_get_hz+0x78>)
    2e36:	581b      	ldr	r3, [r3, r0]
    2e38:	469f      	mov	pc, r3
    2e3a:	2000      	movs	r0, #0
    2e3c:	e030      	b.n	2ea0 <system_clock_source_get_hz+0x74>
    2e3e:	4b1a      	ldr	r3, [pc, #104]	; (2ea8 <system_clock_source_get_hz+0x7c>)
    2e40:	6918      	ldr	r0, [r3, #16]
    2e42:	e02d      	b.n	2ea0 <system_clock_source_get_hz+0x74>
    2e44:	4b19      	ldr	r3, [pc, #100]	; (2eac <system_clock_source_get_hz+0x80>)
    2e46:	6a1b      	ldr	r3, [r3, #32]
    2e48:	059b      	lsls	r3, r3, #22
    2e4a:	0f9b      	lsrs	r3, r3, #30
    2e4c:	4818      	ldr	r0, [pc, #96]	; (2eb0 <system_clock_source_get_hz+0x84>)
    2e4e:	40d8      	lsrs	r0, r3
    2e50:	e026      	b.n	2ea0 <system_clock_source_get_hz+0x74>
    2e52:	4b15      	ldr	r3, [pc, #84]	; (2ea8 <system_clock_source_get_hz+0x7c>)
    2e54:	6958      	ldr	r0, [r3, #20]
    2e56:	e023      	b.n	2ea0 <system_clock_source_get_hz+0x74>
    2e58:	4b13      	ldr	r3, [pc, #76]	; (2ea8 <system_clock_source_get_hz+0x7c>)
    2e5a:	681b      	ldr	r3, [r3, #0]
    2e5c:	2000      	movs	r0, #0
    2e5e:	079b      	lsls	r3, r3, #30
    2e60:	d51e      	bpl.n	2ea0 <system_clock_source_get_hz+0x74>
    2e62:	4912      	ldr	r1, [pc, #72]	; (2eac <system_clock_source_get_hz+0x80>)
    2e64:	2210      	movs	r2, #16
    2e66:	68cb      	ldr	r3, [r1, #12]
    2e68:	421a      	tst	r2, r3
    2e6a:	d0fc      	beq.n	2e66 <system_clock_source_get_hz+0x3a>
    2e6c:	4b0e      	ldr	r3, [pc, #56]	; (2ea8 <system_clock_source_get_hz+0x7c>)
    2e6e:	681b      	ldr	r3, [r3, #0]
    2e70:	075b      	lsls	r3, r3, #29
    2e72:	d401      	bmi.n	2e78 <system_clock_source_get_hz+0x4c>
    2e74:	480f      	ldr	r0, [pc, #60]	; (2eb4 <system_clock_source_get_hz+0x88>)
    2e76:	e013      	b.n	2ea0 <system_clock_source_get_hz+0x74>
    2e78:	2000      	movs	r0, #0
    2e7a:	4b0f      	ldr	r3, [pc, #60]	; (2eb8 <system_clock_source_get_hz+0x8c>)
    2e7c:	4798      	blx	r3
    2e7e:	4b0a      	ldr	r3, [pc, #40]	; (2ea8 <system_clock_source_get_hz+0x7c>)
    2e80:	689b      	ldr	r3, [r3, #8]
    2e82:	041b      	lsls	r3, r3, #16
    2e84:	0c1b      	lsrs	r3, r3, #16
    2e86:	4358      	muls	r0, r3
    2e88:	e00a      	b.n	2ea0 <system_clock_source_get_hz+0x74>
    2e8a:	2350      	movs	r3, #80	; 0x50
    2e8c:	4a07      	ldr	r2, [pc, #28]	; (2eac <system_clock_source_get_hz+0x80>)
    2e8e:	5cd3      	ldrb	r3, [r2, r3]
    2e90:	2000      	movs	r0, #0
    2e92:	075b      	lsls	r3, r3, #29
    2e94:	d504      	bpl.n	2ea0 <system_clock_source_get_hz+0x74>
    2e96:	4b04      	ldr	r3, [pc, #16]	; (2ea8 <system_clock_source_get_hz+0x7c>)
    2e98:	68d8      	ldr	r0, [r3, #12]
    2e9a:	e001      	b.n	2ea0 <system_clock_source_get_hz+0x74>
    2e9c:	2080      	movs	r0, #128	; 0x80
    2e9e:	0200      	lsls	r0, r0, #8
    2ea0:	bd10      	pop	{r4, pc}
    2ea2:	46c0      	nop			; (mov r8, r8)
    2ea4:	00007fe0 	.word	0x00007fe0
    2ea8:	200001ac 	.word	0x200001ac
    2eac:	40000800 	.word	0x40000800
    2eb0:	007a1200 	.word	0x007a1200
    2eb4:	02dc6c00 	.word	0x02dc6c00
    2eb8:	00002ff1 	.word	0x00002ff1

00002ebc <system_gclk_gen_get_hz>:
    2ebc:	b570      	push	{r4, r5, r6, lr}
    2ebe:	0004      	movs	r4, r0
    2ec0:	4a1a      	ldr	r2, [pc, #104]	; (2f2c <system_gclk_gen_get_hz+0x70>)
    2ec2:	7853      	ldrb	r3, [r2, #1]
    2ec4:	b25b      	sxtb	r3, r3
    2ec6:	2b00      	cmp	r3, #0
    2ec8:	dbfb      	blt.n	2ec2 <system_gclk_gen_get_hz+0x6>
    2eca:	4b19      	ldr	r3, [pc, #100]	; (2f30 <system_gclk_gen_get_hz+0x74>)
    2ecc:	4798      	blx	r3
    2ece:	4b19      	ldr	r3, [pc, #100]	; (2f34 <system_gclk_gen_get_hz+0x78>)
    2ed0:	701c      	strb	r4, [r3, #0]
    2ed2:	4a16      	ldr	r2, [pc, #88]	; (2f2c <system_gclk_gen_get_hz+0x70>)
    2ed4:	7853      	ldrb	r3, [r2, #1]
    2ed6:	b25b      	sxtb	r3, r3
    2ed8:	2b00      	cmp	r3, #0
    2eda:	dbfb      	blt.n	2ed4 <system_gclk_gen_get_hz+0x18>
    2edc:	4e13      	ldr	r6, [pc, #76]	; (2f2c <system_gclk_gen_get_hz+0x70>)
    2ede:	6870      	ldr	r0, [r6, #4]
    2ee0:	04c0      	lsls	r0, r0, #19
    2ee2:	0ec0      	lsrs	r0, r0, #27
    2ee4:	4b14      	ldr	r3, [pc, #80]	; (2f38 <system_gclk_gen_get_hz+0x7c>)
    2ee6:	4798      	blx	r3
    2ee8:	0005      	movs	r5, r0
    2eea:	4b12      	ldr	r3, [pc, #72]	; (2f34 <system_gclk_gen_get_hz+0x78>)
    2eec:	701c      	strb	r4, [r3, #0]
    2eee:	6876      	ldr	r6, [r6, #4]
    2ef0:	02f6      	lsls	r6, r6, #11
    2ef2:	0ff6      	lsrs	r6, r6, #31
    2ef4:	4b11      	ldr	r3, [pc, #68]	; (2f3c <system_gclk_gen_get_hz+0x80>)
    2ef6:	701c      	strb	r4, [r3, #0]
    2ef8:	4a0c      	ldr	r2, [pc, #48]	; (2f2c <system_gclk_gen_get_hz+0x70>)
    2efa:	7853      	ldrb	r3, [r2, #1]
    2efc:	b25b      	sxtb	r3, r3
    2efe:	2b00      	cmp	r3, #0
    2f00:	dbfb      	blt.n	2efa <system_gclk_gen_get_hz+0x3e>
    2f02:	4b0a      	ldr	r3, [pc, #40]	; (2f2c <system_gclk_gen_get_hz+0x70>)
    2f04:	689c      	ldr	r4, [r3, #8]
    2f06:	0224      	lsls	r4, r4, #8
    2f08:	0c24      	lsrs	r4, r4, #16
    2f0a:	4b0d      	ldr	r3, [pc, #52]	; (2f40 <system_gclk_gen_get_hz+0x84>)
    2f0c:	4798      	blx	r3
    2f0e:	2e00      	cmp	r6, #0
    2f10:	d107      	bne.n	2f22 <system_gclk_gen_get_hz+0x66>
    2f12:	2c01      	cmp	r4, #1
    2f14:	d907      	bls.n	2f26 <system_gclk_gen_get_hz+0x6a>
    2f16:	0021      	movs	r1, r4
    2f18:	0028      	movs	r0, r5
    2f1a:	4b0a      	ldr	r3, [pc, #40]	; (2f44 <system_gclk_gen_get_hz+0x88>)
    2f1c:	4798      	blx	r3
    2f1e:	0005      	movs	r5, r0
    2f20:	e001      	b.n	2f26 <system_gclk_gen_get_hz+0x6a>
    2f22:	3401      	adds	r4, #1
    2f24:	40e5      	lsrs	r5, r4
    2f26:	0028      	movs	r0, r5
    2f28:	bd70      	pop	{r4, r5, r6, pc}
    2f2a:	46c0      	nop			; (mov r8, r8)
    2f2c:	40000c00 	.word	0x40000c00
    2f30:	00001ba9 	.word	0x00001ba9
    2f34:	40000c04 	.word	0x40000c04
    2f38:	00002e2d 	.word	0x00002e2d
    2f3c:	40000c08 	.word	0x40000c08
    2f40:	00001be9 	.word	0x00001be9
    2f44:	00005cf9 	.word	0x00005cf9

00002f48 <system_gclk_chan_enable>:
    2f48:	b510      	push	{r4, lr}
    2f4a:	0004      	movs	r4, r0
    2f4c:	4b06      	ldr	r3, [pc, #24]	; (2f68 <system_gclk_chan_enable+0x20>)
    2f4e:	4798      	blx	r3
    2f50:	4b06      	ldr	r3, [pc, #24]	; (2f6c <system_gclk_chan_enable+0x24>)
    2f52:	701c      	strb	r4, [r3, #0]
    2f54:	4a06      	ldr	r2, [pc, #24]	; (2f70 <system_gclk_chan_enable+0x28>)
    2f56:	8853      	ldrh	r3, [r2, #2]
    2f58:	2180      	movs	r1, #128	; 0x80
    2f5a:	01c9      	lsls	r1, r1, #7
    2f5c:	430b      	orrs	r3, r1
    2f5e:	8053      	strh	r3, [r2, #2]
    2f60:	4b04      	ldr	r3, [pc, #16]	; (2f74 <system_gclk_chan_enable+0x2c>)
    2f62:	4798      	blx	r3
    2f64:	bd10      	pop	{r4, pc}
    2f66:	46c0      	nop			; (mov r8, r8)
    2f68:	00001ba9 	.word	0x00001ba9
    2f6c:	40000c02 	.word	0x40000c02
    2f70:	40000c00 	.word	0x40000c00
    2f74:	00001be9 	.word	0x00001be9

00002f78 <system_gclk_chan_disable>:
    2f78:	b510      	push	{r4, lr}
    2f7a:	0004      	movs	r4, r0
    2f7c:	4b0f      	ldr	r3, [pc, #60]	; (2fbc <system_gclk_chan_disable+0x44>)
    2f7e:	4798      	blx	r3
    2f80:	4b0f      	ldr	r3, [pc, #60]	; (2fc0 <system_gclk_chan_disable+0x48>)
    2f82:	701c      	strb	r4, [r3, #0]
    2f84:	4a0f      	ldr	r2, [pc, #60]	; (2fc4 <system_gclk_chan_disable+0x4c>)
    2f86:	8853      	ldrh	r3, [r2, #2]
    2f88:	051b      	lsls	r3, r3, #20
    2f8a:	0f18      	lsrs	r0, r3, #28
    2f8c:	8853      	ldrh	r3, [r2, #2]
    2f8e:	490e      	ldr	r1, [pc, #56]	; (2fc8 <system_gclk_chan_disable+0x50>)
    2f90:	400b      	ands	r3, r1
    2f92:	8053      	strh	r3, [r2, #2]
    2f94:	8853      	ldrh	r3, [r2, #2]
    2f96:	490d      	ldr	r1, [pc, #52]	; (2fcc <system_gclk_chan_disable+0x54>)
    2f98:	400b      	ands	r3, r1
    2f9a:	8053      	strh	r3, [r2, #2]
    2f9c:	0011      	movs	r1, r2
    2f9e:	2280      	movs	r2, #128	; 0x80
    2fa0:	01d2      	lsls	r2, r2, #7
    2fa2:	884b      	ldrh	r3, [r1, #2]
    2fa4:	4213      	tst	r3, r2
    2fa6:	d1fc      	bne.n	2fa2 <system_gclk_chan_disable+0x2a>
    2fa8:	4906      	ldr	r1, [pc, #24]	; (2fc4 <system_gclk_chan_disable+0x4c>)
    2faa:	884a      	ldrh	r2, [r1, #2]
    2fac:	0203      	lsls	r3, r0, #8
    2fae:	4806      	ldr	r0, [pc, #24]	; (2fc8 <system_gclk_chan_disable+0x50>)
    2fb0:	4002      	ands	r2, r0
    2fb2:	4313      	orrs	r3, r2
    2fb4:	804b      	strh	r3, [r1, #2]
    2fb6:	4b06      	ldr	r3, [pc, #24]	; (2fd0 <system_gclk_chan_disable+0x58>)
    2fb8:	4798      	blx	r3
    2fba:	bd10      	pop	{r4, pc}
    2fbc:	00001ba9 	.word	0x00001ba9
    2fc0:	40000c02 	.word	0x40000c02
    2fc4:	40000c00 	.word	0x40000c00
    2fc8:	fffff0ff 	.word	0xfffff0ff
    2fcc:	ffffbfff 	.word	0xffffbfff
    2fd0:	00001be9 	.word	0x00001be9

00002fd4 <system_gclk_chan_set_config>:
    2fd4:	b510      	push	{r4, lr}
    2fd6:	780c      	ldrb	r4, [r1, #0]
    2fd8:	0224      	lsls	r4, r4, #8
    2fda:	4304      	orrs	r4, r0
    2fdc:	4b02      	ldr	r3, [pc, #8]	; (2fe8 <system_gclk_chan_set_config+0x14>)
    2fde:	4798      	blx	r3
    2fe0:	b2a4      	uxth	r4, r4
    2fe2:	4b02      	ldr	r3, [pc, #8]	; (2fec <system_gclk_chan_set_config+0x18>)
    2fe4:	805c      	strh	r4, [r3, #2]
    2fe6:	bd10      	pop	{r4, pc}
    2fe8:	00002f79 	.word	0x00002f79
    2fec:	40000c00 	.word	0x40000c00

00002ff0 <system_gclk_chan_get_hz>:
    2ff0:	b510      	push	{r4, lr}
    2ff2:	0004      	movs	r4, r0
    2ff4:	4b06      	ldr	r3, [pc, #24]	; (3010 <system_gclk_chan_get_hz+0x20>)
    2ff6:	4798      	blx	r3
    2ff8:	4b06      	ldr	r3, [pc, #24]	; (3014 <system_gclk_chan_get_hz+0x24>)
    2ffa:	701c      	strb	r4, [r3, #0]
    2ffc:	4b06      	ldr	r3, [pc, #24]	; (3018 <system_gclk_chan_get_hz+0x28>)
    2ffe:	885c      	ldrh	r4, [r3, #2]
    3000:	0524      	lsls	r4, r4, #20
    3002:	0f24      	lsrs	r4, r4, #28
    3004:	4b05      	ldr	r3, [pc, #20]	; (301c <system_gclk_chan_get_hz+0x2c>)
    3006:	4798      	blx	r3
    3008:	0020      	movs	r0, r4
    300a:	4b05      	ldr	r3, [pc, #20]	; (3020 <system_gclk_chan_get_hz+0x30>)
    300c:	4798      	blx	r3
    300e:	bd10      	pop	{r4, pc}
    3010:	00001ba9 	.word	0x00001ba9
    3014:	40000c02 	.word	0x40000c02
    3018:	40000c00 	.word	0x40000c00
    301c:	00001be9 	.word	0x00001be9
    3020:	00002ebd 	.word	0x00002ebd

00003024 <_system_pinmux_config>:
    3024:	b530      	push	{r4, r5, lr}
    3026:	78d3      	ldrb	r3, [r2, #3]
    3028:	2b00      	cmp	r3, #0
    302a:	d135      	bne.n	3098 <_system_pinmux_config+0x74>
    302c:	7813      	ldrb	r3, [r2, #0]
    302e:	2b80      	cmp	r3, #128	; 0x80
    3030:	d029      	beq.n	3086 <_system_pinmux_config+0x62>
    3032:	061b      	lsls	r3, r3, #24
    3034:	2480      	movs	r4, #128	; 0x80
    3036:	0264      	lsls	r4, r4, #9
    3038:	4323      	orrs	r3, r4
    303a:	7854      	ldrb	r4, [r2, #1]
    303c:	2502      	movs	r5, #2
    303e:	43ac      	bics	r4, r5
    3040:	d106      	bne.n	3050 <_system_pinmux_config+0x2c>
    3042:	7894      	ldrb	r4, [r2, #2]
    3044:	2c00      	cmp	r4, #0
    3046:	d120      	bne.n	308a <_system_pinmux_config+0x66>
    3048:	2480      	movs	r4, #128	; 0x80
    304a:	02a4      	lsls	r4, r4, #10
    304c:	4323      	orrs	r3, r4
    304e:	6041      	str	r1, [r0, #4]
    3050:	7854      	ldrb	r4, [r2, #1]
    3052:	3c01      	subs	r4, #1
    3054:	2c01      	cmp	r4, #1
    3056:	d91c      	bls.n	3092 <_system_pinmux_config+0x6e>
    3058:	040d      	lsls	r5, r1, #16
    305a:	0c2d      	lsrs	r5, r5, #16
    305c:	24a0      	movs	r4, #160	; 0xa0
    305e:	05e4      	lsls	r4, r4, #23
    3060:	432c      	orrs	r4, r5
    3062:	431c      	orrs	r4, r3
    3064:	6284      	str	r4, [r0, #40]	; 0x28
    3066:	0c0d      	lsrs	r5, r1, #16
    3068:	24d0      	movs	r4, #208	; 0xd0
    306a:	0624      	lsls	r4, r4, #24
    306c:	432c      	orrs	r4, r5
    306e:	431c      	orrs	r4, r3
    3070:	6284      	str	r4, [r0, #40]	; 0x28
    3072:	78d4      	ldrb	r4, [r2, #3]
    3074:	2c00      	cmp	r4, #0
    3076:	d122      	bne.n	30be <_system_pinmux_config+0x9a>
    3078:	035b      	lsls	r3, r3, #13
    307a:	d51c      	bpl.n	30b6 <_system_pinmux_config+0x92>
    307c:	7893      	ldrb	r3, [r2, #2]
    307e:	2b01      	cmp	r3, #1
    3080:	d01e      	beq.n	30c0 <_system_pinmux_config+0x9c>
    3082:	6141      	str	r1, [r0, #20]
    3084:	e017      	b.n	30b6 <_system_pinmux_config+0x92>
    3086:	2300      	movs	r3, #0
    3088:	e7d7      	b.n	303a <_system_pinmux_config+0x16>
    308a:	24c0      	movs	r4, #192	; 0xc0
    308c:	02e4      	lsls	r4, r4, #11
    308e:	4323      	orrs	r3, r4
    3090:	e7dd      	b.n	304e <_system_pinmux_config+0x2a>
    3092:	4c0d      	ldr	r4, [pc, #52]	; (30c8 <_system_pinmux_config+0xa4>)
    3094:	4023      	ands	r3, r4
    3096:	e7df      	b.n	3058 <_system_pinmux_config+0x34>
    3098:	6041      	str	r1, [r0, #4]
    309a:	040c      	lsls	r4, r1, #16
    309c:	0c24      	lsrs	r4, r4, #16
    309e:	23a0      	movs	r3, #160	; 0xa0
    30a0:	05db      	lsls	r3, r3, #23
    30a2:	4323      	orrs	r3, r4
    30a4:	6283      	str	r3, [r0, #40]	; 0x28
    30a6:	0c0c      	lsrs	r4, r1, #16
    30a8:	23d0      	movs	r3, #208	; 0xd0
    30aa:	061b      	lsls	r3, r3, #24
    30ac:	4323      	orrs	r3, r4
    30ae:	6283      	str	r3, [r0, #40]	; 0x28
    30b0:	78d3      	ldrb	r3, [r2, #3]
    30b2:	2b00      	cmp	r3, #0
    30b4:	d103      	bne.n	30be <_system_pinmux_config+0x9a>
    30b6:	7853      	ldrb	r3, [r2, #1]
    30b8:	3b01      	subs	r3, #1
    30ba:	2b01      	cmp	r3, #1
    30bc:	d902      	bls.n	30c4 <_system_pinmux_config+0xa0>
    30be:	bd30      	pop	{r4, r5, pc}
    30c0:	6181      	str	r1, [r0, #24]
    30c2:	e7f8      	b.n	30b6 <_system_pinmux_config+0x92>
    30c4:	6081      	str	r1, [r0, #8]
    30c6:	e7fa      	b.n	30be <_system_pinmux_config+0x9a>
    30c8:	fffbffff 	.word	0xfffbffff

000030cc <system_pinmux_pin_set_config>:
    30cc:	b510      	push	{r4, lr}
    30ce:	000a      	movs	r2, r1
    30d0:	09c1      	lsrs	r1, r0, #7
    30d2:	2300      	movs	r3, #0
    30d4:	2900      	cmp	r1, #0
    30d6:	d104      	bne.n	30e2 <system_pinmux_pin_set_config+0x16>
    30d8:	0943      	lsrs	r3, r0, #5
    30da:	01db      	lsls	r3, r3, #7
    30dc:	4905      	ldr	r1, [pc, #20]	; (30f4 <system_pinmux_pin_set_config+0x28>)
    30de:	468c      	mov	ip, r1
    30e0:	4463      	add	r3, ip
    30e2:	241f      	movs	r4, #31
    30e4:	4020      	ands	r0, r4
    30e6:	2101      	movs	r1, #1
    30e8:	4081      	lsls	r1, r0
    30ea:	0018      	movs	r0, r3
    30ec:	4b02      	ldr	r3, [pc, #8]	; (30f8 <system_pinmux_pin_set_config+0x2c>)
    30ee:	4798      	blx	r3
    30f0:	bd10      	pop	{r4, pc}
    30f2:	46c0      	nop			; (mov r8, r8)
    30f4:	41004400 	.word	0x41004400
    30f8:	00003025 	.word	0x00003025

000030fc <system_init>:
 *  - Board hardware initialization (via the Board module)
 *  - Event system driver initialization (via the EVSYS module)
 *  - External Interrupt driver initialization (via the EXTINT module)
 */
void system_init(void)
{
    30fc:	b510      	push	{r4, lr}

	/* Initialize EVSYS hardware */
	//_system_events_init();

	/* Initialize External hardware */
	_system_extint_init();
    30fe:	4b01      	ldr	r3, [pc, #4]	; (3104 <system_init+0x8>)
    3100:	4798      	blx	r3
	
	/* Initialize DIVAS hardware */
	//_system_divas_init();
}
    3102:	bd10      	pop	{r4, pc}
    3104:	00002251 	.word	0x00002251

00003108 <_tcc_get_inst_index>:
    3108:	4b09      	ldr	r3, [pc, #36]	; (3130 <_tcc_get_inst_index+0x28>)
    310a:	4298      	cmp	r0, r3
    310c:	d00c      	beq.n	3128 <_tcc_get_inst_index+0x20>
    310e:	4b09      	ldr	r3, [pc, #36]	; (3134 <_tcc_get_inst_index+0x2c>)
    3110:	4298      	cmp	r0, r3
    3112:	d007      	beq.n	3124 <_tcc_get_inst_index+0x1c>
    3114:	4a08      	ldr	r2, [pc, #32]	; (3138 <_tcc_get_inst_index+0x30>)
    3116:	2300      	movs	r3, #0
    3118:	4290      	cmp	r0, r2
    311a:	d001      	beq.n	3120 <_tcc_get_inst_index+0x18>
    311c:	0018      	movs	r0, r3
    311e:	4770      	bx	lr
    3120:	3302      	adds	r3, #2
    3122:	e002      	b.n	312a <_tcc_get_inst_index+0x22>
    3124:	2301      	movs	r3, #1
    3126:	e000      	b.n	312a <_tcc_get_inst_index+0x22>
    3128:	2300      	movs	r3, #0
    312a:	b2db      	uxtb	r3, r3
    312c:	e7f6      	b.n	311c <_tcc_get_inst_index+0x14>
    312e:	46c0      	nop			; (mov r8, r8)
    3130:	42002000 	.word	0x42002000
    3134:	42002400 	.word	0x42002400
    3138:	42002800 	.word	0x42002800

0000313c <_tcc_set_compare_value>:
    313c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    313e:	000f      	movs	r7, r1
    3140:	0015      	movs	r5, r2
    3142:	001e      	movs	r6, r3
    3144:	6804      	ldr	r4, [r0, #0]
    3146:	0020      	movs	r0, r4
    3148:	4b13      	ldr	r3, [pc, #76]	; (3198 <_tcc_set_compare_value+0x5c>)
    314a:	4798      	blx	r3
    314c:	4b13      	ldr	r3, [pc, #76]	; (319c <_tcc_set_compare_value+0x60>)
    314e:	5c1a      	ldrb	r2, [r3, r0]
    3150:	2317      	movs	r3, #23
    3152:	42ba      	cmp	r2, r7
    3154:	d801      	bhi.n	315a <_tcc_set_compare_value+0x1e>
    3156:	0018      	movs	r0, r3
    3158:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    315a:	0080      	lsls	r0, r0, #2
    315c:	4b10      	ldr	r3, [pc, #64]	; (31a0 <_tcc_set_compare_value+0x64>)
    315e:	58c2      	ldr	r2, [r0, r3]
    3160:	2317      	movs	r3, #23
    3162:	42aa      	cmp	r2, r5
    3164:	d3f7      	bcc.n	3156 <_tcc_set_compare_value+0x1a>
    3166:	2e00      	cmp	r6, #0
    3168:	d00a      	beq.n	3180 <_tcc_set_compare_value+0x44>
    316a:	2280      	movs	r2, #128	; 0x80
    316c:	0312      	lsls	r2, r2, #12
    316e:	40ba      	lsls	r2, r7
    3170:	68a3      	ldr	r3, [r4, #8]
    3172:	421a      	tst	r2, r3
    3174:	d1fc      	bne.n	3170 <_tcc_set_compare_value+0x34>
    3176:	371c      	adds	r7, #28
    3178:	00bf      	lsls	r7, r7, #2
    317a:	513d      	str	r5, [r7, r4]
    317c:	2300      	movs	r3, #0
    317e:	e7ea      	b.n	3156 <_tcc_set_compare_value+0x1a>
    3180:	2280      	movs	r2, #128	; 0x80
    3182:	0052      	lsls	r2, r2, #1
    3184:	40ba      	lsls	r2, r7
    3186:	68a3      	ldr	r3, [r4, #8]
    3188:	421a      	tst	r2, r3
    318a:	d1fc      	bne.n	3186 <_tcc_set_compare_value+0x4a>
    318c:	3710      	adds	r7, #16
    318e:	00bf      	lsls	r7, r7, #2
    3190:	19e4      	adds	r4, r4, r7
    3192:	6065      	str	r5, [r4, #4]
    3194:	2300      	movs	r3, #0
    3196:	e7de      	b.n	3156 <_tcc_set_compare_value+0x1a>
    3198:	00003109 	.word	0x00003109
    319c:	00008010 	.word	0x00008010
    31a0:	00008018 	.word	0x00008018

000031a4 <tcc_get_config_defaults>:
    31a4:	b510      	push	{r4, lr}
    31a6:	0004      	movs	r4, r0
    31a8:	0008      	movs	r0, r1
    31aa:	4b4f      	ldr	r3, [pc, #316]	; (32e8 <tcc_get_config_defaults+0x144>)
    31ac:	4798      	blx	r3
    31ae:	2300      	movs	r3, #0
    31b0:	6023      	str	r3, [r4, #0]
    31b2:	0080      	lsls	r0, r0, #2
    31b4:	4a4d      	ldr	r2, [pc, #308]	; (32ec <tcc_get_config_defaults+0x148>)
    31b6:	5882      	ldr	r2, [r0, r2]
    31b8:	6062      	str	r2, [r4, #4]
    31ba:	72a3      	strb	r3, [r4, #10]
    31bc:	72e3      	strb	r3, [r4, #11]
    31be:	7323      	strb	r3, [r4, #12]
    31c0:	7263      	strb	r3, [r4, #9]
    31c2:	7223      	strb	r3, [r4, #8]
    31c4:	61e3      	str	r3, [r4, #28]
    31c6:	6223      	str	r3, [r4, #32]
    31c8:	6263      	str	r3, [r4, #36]	; 0x24
    31ca:	62a3      	str	r3, [r4, #40]	; 0x28
    31cc:	7523      	strb	r3, [r4, #20]
    31ce:	7563      	strb	r3, [r4, #21]
    31d0:	75a3      	strb	r3, [r4, #22]
    31d2:	75e3      	strb	r3, [r4, #23]
    31d4:	7623      	strb	r3, [r4, #24]
    31d6:	7663      	strb	r3, [r4, #25]
    31d8:	7423      	strb	r3, [r4, #16]
    31da:	7463      	strb	r3, [r4, #17]
    31dc:	74a3      	strb	r3, [r4, #18]
    31de:	74e3      	strb	r3, [r4, #19]
    31e0:	222c      	movs	r2, #44	; 0x2c
    31e2:	54a3      	strb	r3, [r4, r2]
    31e4:	3201      	adds	r2, #1
    31e6:	54a3      	strb	r3, [r4, r2]
    31e8:	3201      	adds	r2, #1
    31ea:	54a3      	strb	r3, [r4, r2]
    31ec:	3201      	adds	r2, #1
    31ee:	54a3      	strb	r3, [r4, r2]
    31f0:	3201      	adds	r2, #1
    31f2:	54a3      	strb	r3, [r4, r2]
    31f4:	3201      	adds	r2, #1
    31f6:	54a3      	strb	r3, [r4, r2]
    31f8:	3201      	adds	r2, #1
    31fa:	54a3      	strb	r3, [r4, r2]
    31fc:	3201      	adds	r2, #1
    31fe:	54a3      	strb	r3, [r4, r2]
    3200:	3201      	adds	r2, #1
    3202:	54a3      	strb	r3, [r4, r2]
    3204:	3201      	adds	r2, #1
    3206:	54a3      	strb	r3, [r4, r2]
    3208:	3201      	adds	r2, #1
    320a:	54a3      	strb	r3, [r4, r2]
    320c:	3201      	adds	r2, #1
    320e:	54a3      	strb	r3, [r4, r2]
    3210:	3201      	adds	r2, #1
    3212:	54a3      	strb	r3, [r4, r2]
    3214:	3201      	adds	r2, #1
    3216:	54a3      	strb	r3, [r4, r2]
    3218:	3201      	adds	r2, #1
    321a:	54a3      	strb	r3, [r4, r2]
    321c:	3201      	adds	r2, #1
    321e:	54a3      	strb	r3, [r4, r2]
    3220:	3201      	adds	r2, #1
    3222:	54a3      	strb	r3, [r4, r2]
    3224:	3201      	adds	r2, #1
    3226:	54a3      	strb	r3, [r4, r2]
    3228:	3201      	adds	r2, #1
    322a:	54a3      	strb	r3, [r4, r2]
    322c:	3201      	adds	r2, #1
    322e:	54a3      	strb	r3, [r4, r2]
    3230:	3201      	adds	r2, #1
    3232:	54a3      	strb	r3, [r4, r2]
    3234:	3201      	adds	r2, #1
    3236:	54a3      	strb	r3, [r4, r2]
    3238:	3201      	adds	r2, #1
    323a:	54a3      	strb	r3, [r4, r2]
    323c:	3201      	adds	r2, #1
    323e:	54a3      	strb	r3, [r4, r2]
    3240:	3201      	adds	r2, #1
    3242:	54a3      	strb	r3, [r4, r2]
    3244:	3201      	adds	r2, #1
    3246:	54a3      	strb	r3, [r4, r2]
    3248:	3201      	adds	r2, #1
    324a:	54a3      	strb	r3, [r4, r2]
    324c:	3201      	adds	r2, #1
    324e:	54a3      	strb	r3, [r4, r2]
    3250:	3201      	adds	r2, #1
    3252:	54a3      	strb	r3, [r4, r2]
    3254:	3201      	adds	r2, #1
    3256:	54a3      	strb	r3, [r4, r2]
    3258:	3201      	adds	r2, #1
    325a:	54a3      	strb	r3, [r4, r2]
    325c:	3201      	adds	r2, #1
    325e:	54a3      	strb	r3, [r4, r2]
    3260:	3201      	adds	r2, #1
    3262:	54a3      	strb	r3, [r4, r2]
    3264:	3201      	adds	r2, #1
    3266:	54a3      	strb	r3, [r4, r2]
    3268:	3201      	adds	r2, #1
    326a:	54a3      	strb	r3, [r4, r2]
    326c:	3201      	adds	r2, #1
    326e:	54a3      	strb	r3, [r4, r2]
    3270:	3201      	adds	r2, #1
    3272:	54a3      	strb	r3, [r4, r2]
    3274:	3201      	adds	r2, #1
    3276:	54a3      	strb	r3, [r4, r2]
    3278:	3201      	adds	r2, #1
    327a:	54a3      	strb	r3, [r4, r2]
    327c:	3201      	adds	r2, #1
    327e:	54a3      	strb	r3, [r4, r2]
    3280:	3201      	adds	r2, #1
    3282:	54a3      	strb	r3, [r4, r2]
    3284:	3201      	adds	r2, #1
    3286:	54a3      	strb	r3, [r4, r2]
    3288:	3201      	adds	r2, #1
    328a:	54a3      	strb	r3, [r4, r2]
    328c:	3201      	adds	r2, #1
    328e:	54a3      	strb	r3, [r4, r2]
    3290:	3241      	adds	r2, #65	; 0x41
    3292:	54a3      	strb	r3, [r4, r2]
    3294:	65a3      	str	r3, [r4, #88]	; 0x58
    3296:	67a3      	str	r3, [r4, #120]	; 0x78
    3298:	3201      	adds	r2, #1
    329a:	54a3      	strb	r3, [r4, r2]
    329c:	65e3      	str	r3, [r4, #92]	; 0x5c
    329e:	67e3      	str	r3, [r4, #124]	; 0x7c
    32a0:	3201      	adds	r2, #1
    32a2:	54a3      	strb	r3, [r4, r2]
    32a4:	6623      	str	r3, [r4, #96]	; 0x60
    32a6:	3a1a      	subs	r2, #26
    32a8:	50a3      	str	r3, [r4, r2]
    32aa:	321b      	adds	r2, #27
    32ac:	54a3      	strb	r3, [r4, r2]
    32ae:	6663      	str	r3, [r4, #100]	; 0x64
    32b0:	3a17      	subs	r2, #23
    32b2:	50a3      	str	r3, [r4, r2]
    32b4:	3218      	adds	r2, #24
    32b6:	54a3      	strb	r3, [r4, r2]
    32b8:	66a3      	str	r3, [r4, #104]	; 0x68
    32ba:	3a14      	subs	r2, #20
    32bc:	50a3      	str	r3, [r4, r2]
    32be:	3215      	adds	r2, #21
    32c0:	54a3      	strb	r3, [r4, r2]
    32c2:	66e3      	str	r3, [r4, #108]	; 0x6c
    32c4:	3a11      	subs	r2, #17
    32c6:	50a3      	str	r3, [r4, r2]
    32c8:	3212      	adds	r2, #18
    32ca:	54a3      	strb	r3, [r4, r2]
    32cc:	6723      	str	r3, [r4, #112]	; 0x70
    32ce:	3a0e      	subs	r2, #14
    32d0:	50a3      	str	r3, [r4, r2]
    32d2:	320f      	adds	r2, #15
    32d4:	54a3      	strb	r3, [r4, r2]
    32d6:	6763      	str	r3, [r4, #116]	; 0x74
    32d8:	3a0b      	subs	r2, #11
    32da:	50a3      	str	r3, [r4, r2]
    32dc:	2101      	movs	r1, #1
    32de:	320c      	adds	r2, #12
    32e0:	54a1      	strb	r1, [r4, r2]
    32e2:	3201      	adds	r2, #1
    32e4:	54a3      	strb	r3, [r4, r2]
    32e6:	bd10      	pop	{r4, pc}
    32e8:	00003109 	.word	0x00003109
    32ec:	00008018 	.word	0x00008018

000032f0 <tcc_init>:
    32f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    32f2:	46de      	mov	lr, fp
    32f4:	4657      	mov	r7, sl
    32f6:	464e      	mov	r6, r9
    32f8:	4645      	mov	r5, r8
    32fa:	b5e0      	push	{r5, r6, r7, lr}
    32fc:	b091      	sub	sp, #68	; 0x44
    32fe:	9001      	str	r0, [sp, #4]
    3300:	000c      	movs	r4, r1
    3302:	0015      	movs	r5, r2
    3304:	0008      	movs	r0, r1
    3306:	4bc3      	ldr	r3, [pc, #780]	; (3614 <tcc_init+0x324>)
    3308:	4798      	blx	r3
    330a:	0003      	movs	r3, r0
    330c:	0001      	movs	r1, r0
    330e:	48c2      	ldr	r0, [pc, #776]	; (3618 <tcc_init+0x328>)
    3310:	6a02      	ldr	r2, [r0, #32]
    3312:	009e      	lsls	r6, r3, #2
    3314:	4fc1      	ldr	r7, [pc, #772]	; (361c <tcc_init+0x32c>)
    3316:	59f7      	ldr	r7, [r6, r7]
    3318:	433a      	orrs	r2, r7
    331a:	6202      	str	r2, [r0, #32]
    331c:	6822      	ldr	r2, [r4, #0]
    331e:	201c      	movs	r0, #28
    3320:	0792      	lsls	r2, r2, #30
    3322:	d506      	bpl.n	3332 <tcc_init+0x42>
    3324:	b011      	add	sp, #68	; 0x44
    3326:	bc3c      	pop	{r2, r3, r4, r5}
    3328:	4690      	mov	r8, r2
    332a:	4699      	mov	r9, r3
    332c:	46a2      	mov	sl, r4
    332e:	46ab      	mov	fp, r5
    3330:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3332:	6822      	ldr	r2, [r4, #0]
    3334:	2701      	movs	r7, #1
    3336:	4017      	ands	r7, r2
    3338:	d1f4      	bne.n	3324 <tcc_init+0x34>
    333a:	48b9      	ldr	r0, [pc, #740]	; (3620 <tcc_init+0x330>)
    333c:	5832      	ldr	r2, [r6, r0]
    333e:	2017      	movs	r0, #23
    3340:	682e      	ldr	r6, [r5, #0]
    3342:	42b2      	cmp	r2, r6
    3344:	d3ee      	bcc.n	3324 <tcc_init+0x34>
    3346:	686e      	ldr	r6, [r5, #4]
    3348:	42b2      	cmp	r2, r6
    334a:	d3eb      	bcc.n	3324 <tcc_init+0x34>
    334c:	69e8      	ldr	r0, [r5, #28]
    334e:	4282      	cmp	r2, r0
    3350:	d200      	bcs.n	3354 <tcc_init+0x64>
    3352:	e1b9      	b.n	36c8 <tcc_init+0x3d8>
    3354:	6a28      	ldr	r0, [r5, #32]
    3356:	4282      	cmp	r2, r0
    3358:	d200      	bcs.n	335c <tcc_init+0x6c>
    335a:	e1b7      	b.n	36cc <tcc_init+0x3dc>
    335c:	6a68      	ldr	r0, [r5, #36]	; 0x24
    335e:	4282      	cmp	r2, r0
    3360:	d200      	bcs.n	3364 <tcc_init+0x74>
    3362:	e1b5      	b.n	36d0 <tcc_init+0x3e0>
    3364:	6aa8      	ldr	r0, [r5, #40]	; 0x28
    3366:	4282      	cmp	r2, r0
    3368:	d200      	bcs.n	336c <tcc_init+0x7c>
    336a:	e1b3      	b.n	36d4 <tcc_init+0x3e4>
    336c:	2298      	movs	r2, #152	; 0x98
    336e:	4694      	mov	ip, r2
    3370:	44ac      	add	ip, r5
    3372:	4662      	mov	r2, ip
    3374:	9208      	str	r2, [sp, #32]
    3376:	2000      	movs	r0, #0
    3378:	e003      	b.n	3382 <tcc_init+0x92>
    337a:	3001      	adds	r0, #1
    337c:	3201      	adds	r2, #1
    337e:	2808      	cmp	r0, #8
    3380:	d008      	beq.n	3394 <tcc_init+0xa4>
    3382:	7816      	ldrb	r6, [r2, #0]
    3384:	2e00      	cmp	r6, #0
    3386:	d0f8      	beq.n	337a <tcc_init+0x8a>
    3388:	4ea6      	ldr	r6, [pc, #664]	; (3624 <tcc_init+0x334>)
    338a:	5c76      	ldrb	r6, [r6, r1]
    338c:	4286      	cmp	r6, r0
    338e:	dcf4      	bgt.n	337a <tcc_init+0x8a>
    3390:	2017      	movs	r0, #23
    3392:	e7c7      	b.n	3324 <tcc_init+0x34>
    3394:	2200      	movs	r2, #0
    3396:	9202      	str	r2, [sp, #8]
    3398:	2080      	movs	r0, #128	; 0x80
    339a:	0440      	lsls	r0, r0, #17
    339c:	4684      	mov	ip, r0
    339e:	e002      	b.n	33a6 <tcc_init+0xb6>
    33a0:	3201      	adds	r2, #1
    33a2:	2a04      	cmp	r2, #4
    33a4:	d00e      	beq.n	33c4 <tcc_init+0xd4>
    33a6:	18a8      	adds	r0, r5, r2
    33a8:	7c00      	ldrb	r0, [r0, #16]
    33aa:	2801      	cmp	r0, #1
    33ac:	d1f8      	bne.n	33a0 <tcc_init+0xb0>
    33ae:	489e      	ldr	r0, [pc, #632]	; (3628 <tcc_init+0x338>)
    33b0:	5c40      	ldrb	r0, [r0, r1]
    33b2:	4290      	cmp	r0, r2
    33b4:	da00      	bge.n	33b8 <tcc_init+0xc8>
    33b6:	e18f      	b.n	36d8 <tcc_init+0x3e8>
    33b8:	4660      	mov	r0, ip
    33ba:	4090      	lsls	r0, r2
    33bc:	9e02      	ldr	r6, [sp, #8]
    33be:	4306      	orrs	r6, r0
    33c0:	9602      	str	r6, [sp, #8]
    33c2:	e7ed      	b.n	33a0 <tcc_init+0xb0>
    33c4:	329d      	adds	r2, #157	; 0x9d
    33c6:	5caa      	ldrb	r2, [r5, r2]
    33c8:	2a00      	cmp	r2, #0
    33ca:	d004      	beq.n	33d6 <tcc_init+0xe6>
    33cc:	2280      	movs	r2, #128	; 0x80
    33ce:	0112      	lsls	r2, r2, #4
    33d0:	9902      	ldr	r1, [sp, #8]
    33d2:	4311      	orrs	r1, r2
    33d4:	9102      	str	r1, [sp, #8]
    33d6:	7a2a      	ldrb	r2, [r5, #8]
    33d8:	1e51      	subs	r1, r2, #1
    33da:	418a      	sbcs	r2, r1
    33dc:	0092      	lsls	r2, r2, #2
    33de:	9206      	str	r2, [sp, #24]
    33e0:	7a6a      	ldrb	r2, [r5, #9]
    33e2:	2a01      	cmp	r2, #1
    33e4:	d022      	beq.n	342c <tcc_init+0x13c>
    33e6:	4a90      	ldr	r2, [pc, #576]	; (3628 <tcc_init+0x338>)
    33e8:	5cd2      	ldrb	r2, [r2, r3]
    33ea:	0011      	movs	r1, r2
    33ec:	9205      	str	r2, [sp, #20]
    33ee:	2235      	movs	r2, #53	; 0x35
    33f0:	5caa      	ldrb	r2, [r5, r2]
    33f2:	428a      	cmp	r2, r1
    33f4:	d300      	bcc.n	33f8 <tcc_init+0x108>
    33f6:	e179      	b.n	36ec <tcc_init+0x3fc>
    33f8:	212c      	movs	r1, #44	; 0x2c
    33fa:	5c69      	ldrb	r1, [r5, r1]
    33fc:	290f      	cmp	r1, #15
    33fe:	d900      	bls.n	3402 <tcc_init+0x112>
    3400:	e174      	b.n	36ec <tcc_init+0x3fc>
    3402:	7b28      	ldrb	r0, [r5, #12]
    3404:	900a      	str	r0, [sp, #40]	; 0x28
    3406:	7ae8      	ldrb	r0, [r5, #11]
    3408:	900b      	str	r0, [sp, #44]	; 0x2c
    340a:	202d      	movs	r0, #45	; 0x2d
    340c:	4682      	mov	sl, r0
    340e:	44aa      	add	sl, r5
    3410:	2000      	movs	r0, #0
    3412:	9704      	str	r7, [sp, #16]
    3414:	ae0e      	add	r6, sp, #56	; 0x38
    3416:	9607      	str	r6, [sp, #28]
    3418:	26c0      	movs	r6, #192	; 0xc0
    341a:	0136      	lsls	r6, r6, #4
    341c:	46b1      	mov	r9, r6
    341e:	4684      	mov	ip, r0
    3420:	46a0      	mov	r8, r4
    3422:	0028      	movs	r0, r5
    3424:	4655      	mov	r5, sl
    3426:	9309      	str	r3, [sp, #36]	; 0x24
    3428:	4682      	mov	sl, r0
    342a:	e035      	b.n	3498 <tcc_init+0x1a8>
    342c:	9906      	ldr	r1, [sp, #24]
    342e:	4311      	orrs	r1, r2
    3430:	9106      	str	r1, [sp, #24]
    3432:	e7d8      	b.n	33e6 <tcc_init+0xf6>
    3434:	0292      	lsls	r2, r2, #10
    3436:	464f      	mov	r7, r9
    3438:	403a      	ands	r2, r7
    343a:	430a      	orrs	r2, r1
    343c:	7919      	ldrb	r1, [r3, #4]
    343e:	468b      	mov	fp, r1
    3440:	2103      	movs	r1, #3
    3442:	465f      	mov	r7, fp
    3444:	4039      	ands	r1, r7
    3446:	430a      	orrs	r2, r1
    3448:	4316      	orrs	r6, r2
    344a:	795a      	ldrb	r2, [r3, #5]
    344c:	0152      	lsls	r2, r2, #5
    344e:	2160      	movs	r1, #96	; 0x60
    3450:	400a      	ands	r2, r1
    3452:	4332      	orrs	r2, r6
    3454:	7999      	ldrb	r1, [r3, #6]
    3456:	0209      	lsls	r1, r1, #8
    3458:	26c0      	movs	r6, #192	; 0xc0
    345a:	00b6      	lsls	r6, r6, #2
    345c:	400e      	ands	r6, r1
    345e:	4316      	orrs	r6, r2
    3460:	79da      	ldrb	r2, [r3, #7]
    3462:	0312      	lsls	r2, r2, #12
    3464:	21e0      	movs	r1, #224	; 0xe0
    3466:	01c9      	lsls	r1, r1, #7
    3468:	400a      	ands	r2, r1
    346a:	4316      	orrs	r6, r2
    346c:	4334      	orrs	r4, r6
    346e:	9a03      	ldr	r2, [sp, #12]
    3470:	4314      	orrs	r4, r2
    3472:	4320      	orrs	r0, r4
    3474:	4662      	mov	r2, ip
    3476:	9907      	ldr	r1, [sp, #28]
    3478:	5050      	str	r0, [r2, r1]
    347a:	2a04      	cmp	r2, #4
    347c:	d02a      	beq.n	34d4 <tcc_init+0x1e4>
    347e:	7c9a      	ldrb	r2, [r3, #18]
    3480:	9905      	ldr	r1, [sp, #20]
    3482:	4291      	cmp	r1, r2
    3484:	d800      	bhi.n	3488 <tcc_init+0x198>
    3486:	e131      	b.n	36ec <tcc_init+0x3fc>
    3488:	7a59      	ldrb	r1, [r3, #9]
    348a:	350a      	adds	r5, #10
    348c:	2304      	movs	r3, #4
    348e:	469b      	mov	fp, r3
    3490:	44dc      	add	ip, fp
    3492:	290f      	cmp	r1, #15
    3494:	d900      	bls.n	3498 <tcc_init+0x1a8>
    3496:	e129      	b.n	36ec <tcc_init+0x3fc>
    3498:	0609      	lsls	r1, r1, #24
    349a:	23f0      	movs	r3, #240	; 0xf0
    349c:	051b      	lsls	r3, r3, #20
    349e:	4019      	ands	r1, r3
    34a0:	002b      	movs	r3, r5
    34a2:	782e      	ldrb	r6, [r5, #0]
    34a4:	0436      	lsls	r6, r6, #16
    34a6:	20ff      	movs	r0, #255	; 0xff
    34a8:	0400      	lsls	r0, r0, #16
    34aa:	4006      	ands	r6, r0
    34ac:	7868      	ldrb	r0, [r5, #1]
    34ae:	2480      	movs	r4, #128	; 0x80
    34b0:	2800      	cmp	r0, #0
    34b2:	d100      	bne.n	34b6 <tcc_init+0x1c6>
    34b4:	9c04      	ldr	r4, [sp, #16]
    34b6:	7898      	ldrb	r0, [r3, #2]
    34b8:	2708      	movs	r7, #8
    34ba:	9703      	str	r7, [sp, #12]
    34bc:	2800      	cmp	r0, #0
    34be:	d101      	bne.n	34c4 <tcc_init+0x1d4>
    34c0:	9804      	ldr	r0, [sp, #16]
    34c2:	9003      	str	r0, [sp, #12]
    34c4:	78d8      	ldrb	r0, [r3, #3]
    34c6:	4683      	mov	fp, r0
    34c8:	2010      	movs	r0, #16
    34ca:	465f      	mov	r7, fp
    34cc:	2f00      	cmp	r7, #0
    34ce:	d1b1      	bne.n	3434 <tcc_init+0x144>
    34d0:	9804      	ldr	r0, [sp, #16]
    34d2:	e7af      	b.n	3434 <tcc_init+0x144>
    34d4:	4644      	mov	r4, r8
    34d6:	4655      	mov	r5, sl
    34d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    34da:	4a52      	ldr	r2, [pc, #328]	; (3624 <tcc_init+0x334>)
    34dc:	5cd2      	ldrb	r2, [r2, r3]
    34de:	4691      	mov	r9, r2
    34e0:	4651      	mov	r1, sl
    34e2:	3150      	adds	r1, #80	; 0x50
    34e4:	4650      	mov	r0, sl
    34e6:	3041      	adds	r0, #65	; 0x41
    34e8:	2700      	movs	r7, #0
    34ea:	2200      	movs	r2, #0
    34ec:	2601      	movs	r6, #1
    34ee:	46b2      	mov	sl, r6
    34f0:	2602      	movs	r6, #2
    34f2:	36ff      	adds	r6, #255	; 0xff
    34f4:	46b3      	mov	fp, r6
    34f6:	2680      	movs	r6, #128	; 0x80
    34f8:	0276      	lsls	r6, r6, #9
    34fa:	46b0      	mov	r8, r6
    34fc:	46a4      	mov	ip, r4
    34fe:	001c      	movs	r4, r3
    3500:	464b      	mov	r3, r9
    3502:	e00f      	b.n	3524 <tcc_init+0x234>
    3504:	7806      	ldrb	r6, [r0, #0]
    3506:	2e00      	cmp	r6, #0
    3508:	d007      	beq.n	351a <tcc_init+0x22a>
    350a:	4293      	cmp	r3, r2
    350c:	d800      	bhi.n	3510 <tcc_init+0x220>
    350e:	e0e7      	b.n	36e0 <tcc_init+0x3f0>
    3510:	2e02      	cmp	r6, #2
    3512:	d014      	beq.n	353e <tcc_init+0x24e>
    3514:	4656      	mov	r6, sl
    3516:	4096      	lsls	r6, r2
    3518:	4337      	orrs	r7, r6
    351a:	3201      	adds	r2, #1
    351c:	3101      	adds	r1, #1
    351e:	3002      	adds	r0, #2
    3520:	2a08      	cmp	r2, #8
    3522:	d010      	beq.n	3546 <tcc_init+0x256>
    3524:	780e      	ldrb	r6, [r1, #0]
    3526:	2e00      	cmp	r6, #0
    3528:	d0ec      	beq.n	3504 <tcc_init+0x214>
    352a:	4293      	cmp	r3, r2
    352c:	d800      	bhi.n	3530 <tcc_init+0x240>
    352e:	e0d5      	b.n	36dc <tcc_init+0x3ec>
    3530:	4646      	mov	r6, r8
    3532:	4096      	lsls	r6, r2
    3534:	4337      	orrs	r7, r6
    3536:	7806      	ldrb	r6, [r0, #0]
    3538:	2e00      	cmp	r6, #0
    353a:	d1e9      	bne.n	3510 <tcc_init+0x220>
    353c:	e7ed      	b.n	351a <tcc_init+0x22a>
    353e:	465e      	mov	r6, fp
    3540:	4096      	lsls	r6, r2
    3542:	4337      	orrs	r7, r6
    3544:	e7e9      	b.n	351a <tcc_init+0x22a>
    3546:	4699      	mov	r9, r3
    3548:	0023      	movs	r3, r4
    354a:	4664      	mov	r4, ip
    354c:	7e6a      	ldrb	r2, [r5, #25]
    354e:	0112      	lsls	r2, r2, #4
    3550:	2130      	movs	r1, #48	; 0x30
    3552:	4011      	ands	r1, r2
    3554:	7e28      	ldrb	r0, [r5, #24]
    3556:	2207      	movs	r2, #7
    3558:	4002      	ands	r2, r0
    355a:	4311      	orrs	r1, r2
    355c:	2200      	movs	r2, #0
    355e:	2080      	movs	r0, #128	; 0x80
    3560:	0240      	lsls	r0, r0, #9
    3562:	000e      	movs	r6, r1
    3564:	e002      	b.n	356c <tcc_init+0x27c>
    3566:	3201      	adds	r2, #1
    3568:	2a04      	cmp	r2, #4
    356a:	d00b      	beq.n	3584 <tcc_init+0x294>
    356c:	18a9      	adds	r1, r5, r2
    356e:	7d09      	ldrb	r1, [r1, #20]
    3570:	2900      	cmp	r1, #0
    3572:	d0f8      	beq.n	3566 <tcc_init+0x276>
    3574:	9905      	ldr	r1, [sp, #20]
    3576:	4291      	cmp	r1, r2
    3578:	dc00      	bgt.n	357c <tcc_init+0x28c>
    357a:	e0b3      	b.n	36e4 <tcc_init+0x3f4>
    357c:	0001      	movs	r1, r0
    357e:	4091      	lsls	r1, r2
    3580:	430e      	orrs	r6, r1
    3582:	e7f0      	b.n	3566 <tcc_init+0x276>
    3584:	46b2      	mov	sl, r6
    3586:	9801      	ldr	r0, [sp, #4]
    3588:	0002      	movs	r2, r0
    358a:	3204      	adds	r2, #4
    358c:	3034      	adds	r0, #52	; 0x34
    358e:	2100      	movs	r1, #0
    3590:	c202      	stmia	r2!, {r1}
    3592:	4282      	cmp	r2, r0
    3594:	d1fc      	bne.n	3590 <tcc_init+0x2a0>
    3596:	2200      	movs	r2, #0
    3598:	9801      	ldr	r0, [sp, #4]
    359a:	6342      	str	r2, [r0, #52]	; 0x34
    359c:	6382      	str	r2, [r0, #56]	; 0x38
    359e:	0099      	lsls	r1, r3, #2
    35a0:	4a22      	ldr	r2, [pc, #136]	; (362c <tcc_init+0x33c>)
    35a2:	5088      	str	r0, [r1, r2]
    35a4:	6004      	str	r4, [r0, #0]
    35a6:	22a0      	movs	r2, #160	; 0xa0
    35a8:	5ca9      	ldrb	r1, [r5, r2]
    35aa:	3a64      	subs	r2, #100	; 0x64
    35ac:	5481      	strb	r1, [r0, r2]
    35ae:	a90d      	add	r1, sp, #52	; 0x34
    35b0:	7aaa      	ldrb	r2, [r5, #10]
    35b2:	700a      	strb	r2, [r1, #0]
    35b4:	4a1e      	ldr	r2, [pc, #120]	; (3630 <tcc_init+0x340>)
    35b6:	5cd6      	ldrb	r6, [r2, r3]
    35b8:	0030      	movs	r0, r6
    35ba:	4b1e      	ldr	r3, [pc, #120]	; (3634 <tcc_init+0x344>)
    35bc:	4798      	blx	r3
    35be:	0030      	movs	r0, r6
    35c0:	4b1d      	ldr	r3, [pc, #116]	; (3638 <tcc_init+0x348>)
    35c2:	4798      	blx	r3
    35c4:	464b      	mov	r3, r9
    35c6:	2b00      	cmp	r3, #0
    35c8:	dd3c      	ble.n	3644 <tcc_init+0x354>
    35ca:	002e      	movs	r6, r5
    35cc:	3658      	adds	r6, #88	; 0x58
    35ce:	3398      	adds	r3, #152	; 0x98
    35d0:	4698      	mov	r8, r3
    35d2:	44a8      	add	r8, r5
    35d4:	2301      	movs	r3, #1
    35d6:	4699      	mov	r9, r3
    35d8:	46ab      	mov	fp, r5
    35da:	4645      	mov	r5, r8
    35dc:	46a0      	mov	r8, r4
    35de:	9c08      	ldr	r4, [sp, #32]
    35e0:	e003      	b.n	35ea <tcc_init+0x2fa>
    35e2:	3401      	adds	r4, #1
    35e4:	3604      	adds	r6, #4
    35e6:	42ac      	cmp	r4, r5
    35e8:	d02a      	beq.n	3640 <tcc_init+0x350>
    35ea:	7823      	ldrb	r3, [r4, #0]
    35ec:	2b00      	cmp	r3, #0
    35ee:	d0f8      	beq.n	35e2 <tcc_init+0x2f2>
    35f0:	ab0c      	add	r3, sp, #48	; 0x30
    35f2:	464a      	mov	r2, r9
    35f4:	709a      	strb	r2, [r3, #2]
    35f6:	2300      	movs	r3, #0
    35f8:	aa0c      	add	r2, sp, #48	; 0x30
    35fa:	70d3      	strb	r3, [r2, #3]
    35fc:	0013      	movs	r3, r2
    35fe:	2220      	movs	r2, #32
    3600:	18b2      	adds	r2, r6, r2
    3602:	7812      	ldrb	r2, [r2, #0]
    3604:	701a      	strb	r2, [r3, #0]
    3606:	464a      	mov	r2, r9
    3608:	705a      	strb	r2, [r3, #1]
    360a:	7830      	ldrb	r0, [r6, #0]
    360c:	0019      	movs	r1, r3
    360e:	4b0b      	ldr	r3, [pc, #44]	; (363c <tcc_init+0x34c>)
    3610:	4798      	blx	r3
    3612:	e7e6      	b.n	35e2 <tcc_init+0x2f2>
    3614:	00003109 	.word	0x00003109
    3618:	40000400 	.word	0x40000400
    361c:	00008004 	.word	0x00008004
    3620:	00008018 	.word	0x00008018
    3624:	00008024 	.word	0x00008024
    3628:	00008010 	.word	0x00008010
    362c:	200003cc 	.word	0x200003cc
    3630:	00008014 	.word	0x00008014
    3634:	00002fd5 	.word	0x00002fd5
    3638:	00002f49 	.word	0x00002f49
    363c:	000030cd 	.word	0x000030cd
    3640:	4644      	mov	r4, r8
    3642:	465d      	mov	r5, fp
    3644:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3646:	031b      	lsls	r3, r3, #12
    3648:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    364a:	0212      	lsls	r2, r2, #8
    364c:	4313      	orrs	r3, r2
    364e:	9a02      	ldr	r2, [sp, #8]
    3650:	4313      	orrs	r3, r2
    3652:	6023      	str	r3, [r4, #0]
    3654:	2204      	movs	r2, #4
    3656:	68a3      	ldr	r3, [r4, #8]
    3658:	421a      	tst	r2, r3
    365a:	d1fc      	bne.n	3656 <tcc_init+0x366>
    365c:	23ff      	movs	r3, #255	; 0xff
    365e:	7123      	strb	r3, [r4, #4]
    3660:	2204      	movs	r2, #4
    3662:	68a3      	ldr	r3, [r4, #8]
    3664:	421a      	tst	r2, r3
    3666:	d1fc      	bne.n	3662 <tcc_init+0x372>
    3668:	466b      	mov	r3, sp
    366a:	7e1b      	ldrb	r3, [r3, #24]
    366c:	7163      	strb	r3, [r4, #5]
    366e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3670:	60e3      	str	r3, [r4, #12]
    3672:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3674:	6123      	str	r3, [r4, #16]
    3676:	61a7      	str	r7, [r4, #24]
    3678:	4a1d      	ldr	r2, [pc, #116]	; (36f0 <tcc_init+0x400>)
    367a:	68a3      	ldr	r3, [r4, #8]
    367c:	4213      	tst	r3, r2
    367e:	d1fc      	bne.n	367a <tcc_init+0x38a>
    3680:	4653      	mov	r3, sl
    3682:	63e3      	str	r3, [r4, #60]	; 0x3c
    3684:	2210      	movs	r2, #16
    3686:	68a3      	ldr	r3, [r4, #8]
    3688:	421a      	tst	r2, r3
    368a:	d1fc      	bne.n	3686 <tcc_init+0x396>
    368c:	682b      	ldr	r3, [r5, #0]
    368e:	6363      	str	r3, [r4, #52]	; 0x34
    3690:	4a18      	ldr	r2, [pc, #96]	; (36f4 <tcc_init+0x404>)
    3692:	68a3      	ldr	r3, [r4, #8]
    3694:	4213      	tst	r3, r2
    3696:	d1fc      	bne.n	3692 <tcc_init+0x3a2>
    3698:	686b      	ldr	r3, [r5, #4]
    369a:	6423      	str	r3, [r4, #64]	; 0x40
    369c:	9805      	ldr	r0, [sp, #20]
    369e:	2800      	cmp	r0, #0
    36a0:	dd22      	ble.n	36e8 <tcc_init+0x3f8>
    36a2:	351c      	adds	r5, #28
    36a4:	2100      	movs	r1, #0
    36a6:	4e14      	ldr	r6, [pc, #80]	; (36f8 <tcc_init+0x408>)
    36a8:	0032      	movs	r2, r6
    36aa:	408a      	lsls	r2, r1
    36ac:	68a3      	ldr	r3, [r4, #8]
    36ae:	421a      	tst	r2, r3
    36b0:	d1fc      	bne.n	36ac <tcc_init+0x3bc>
    36b2:	cd04      	ldmia	r5!, {r2}
    36b4:	000b      	movs	r3, r1
    36b6:	3310      	adds	r3, #16
    36b8:	009b      	lsls	r3, r3, #2
    36ba:	18e3      	adds	r3, r4, r3
    36bc:	605a      	str	r2, [r3, #4]
    36be:	3101      	adds	r1, #1
    36c0:	4288      	cmp	r0, r1
    36c2:	dcf1      	bgt.n	36a8 <tcc_init+0x3b8>
    36c4:	2000      	movs	r0, #0
    36c6:	e62d      	b.n	3324 <tcc_init+0x34>
    36c8:	2017      	movs	r0, #23
    36ca:	e62b      	b.n	3324 <tcc_init+0x34>
    36cc:	2017      	movs	r0, #23
    36ce:	e629      	b.n	3324 <tcc_init+0x34>
    36d0:	2017      	movs	r0, #23
    36d2:	e627      	b.n	3324 <tcc_init+0x34>
    36d4:	2017      	movs	r0, #23
    36d6:	e625      	b.n	3324 <tcc_init+0x34>
    36d8:	2017      	movs	r0, #23
    36da:	e623      	b.n	3324 <tcc_init+0x34>
    36dc:	2017      	movs	r0, #23
    36de:	e621      	b.n	3324 <tcc_init+0x34>
    36e0:	2017      	movs	r0, #23
    36e2:	e61f      	b.n	3324 <tcc_init+0x34>
    36e4:	2017      	movs	r0, #23
    36e6:	e61d      	b.n	3324 <tcc_init+0x34>
    36e8:	2000      	movs	r0, #0
    36ea:	e61b      	b.n	3324 <tcc_init+0x34>
    36ec:	2017      	movs	r0, #23
    36ee:	e619      	b.n	3324 <tcc_init+0x34>
    36f0:	00020040 	.word	0x00020040
    36f4:	00040080 	.word	0x00040080
    36f8:	00080100 	.word	0x00080100

000036fc <tcc_set_compare_value>:
    36fc:	b510      	push	{r4, lr}
    36fe:	233c      	movs	r3, #60	; 0x3c
    3700:	5cc3      	ldrb	r3, [r0, r3]
    3702:	4c01      	ldr	r4, [pc, #4]	; (3708 <tcc_set_compare_value+0xc>)
    3704:	47a0      	blx	r4
    3706:	bd10      	pop	{r4, pc}
    3708:	0000313d 	.word	0x0000313d

0000370c <_tcc_interrupt_handler>:
    370c:	b5f0      	push	{r4, r5, r6, r7, lr}
    370e:	46c6      	mov	lr, r8
    3710:	b500      	push	{lr}
    3712:	0080      	lsls	r0, r0, #2
    3714:	4b0e      	ldr	r3, [pc, #56]	; (3750 <_tcc_interrupt_handler+0x44>)
    3716:	58c7      	ldr	r7, [r0, r3]
    3718:	683b      	ldr	r3, [r7, #0]
    371a:	6ade      	ldr	r6, [r3, #44]	; 0x2c
    371c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    371e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    3720:	4013      	ands	r3, r2
    3722:	401e      	ands	r6, r3
    3724:	2400      	movs	r4, #0
    3726:	4b0b      	ldr	r3, [pc, #44]	; (3754 <_tcc_interrupt_handler+0x48>)
    3728:	4698      	mov	r8, r3
    372a:	e002      	b.n	3732 <_tcc_interrupt_handler+0x26>
    372c:	3404      	adds	r4, #4
    372e:	2c30      	cmp	r4, #48	; 0x30
    3730:	d00a      	beq.n	3748 <_tcc_interrupt_handler+0x3c>
    3732:	4643      	mov	r3, r8
    3734:	58e5      	ldr	r5, [r4, r3]
    3736:	4235      	tst	r5, r6
    3738:	d0f8      	beq.n	372c <_tcc_interrupt_handler+0x20>
    373a:	193b      	adds	r3, r7, r4
    373c:	685b      	ldr	r3, [r3, #4]
    373e:	0038      	movs	r0, r7
    3740:	4798      	blx	r3
    3742:	683b      	ldr	r3, [r7, #0]
    3744:	62dd      	str	r5, [r3, #44]	; 0x2c
    3746:	e7f1      	b.n	372c <_tcc_interrupt_handler+0x20>
    3748:	bc04      	pop	{r2}
    374a:	4690      	mov	r8, r2
    374c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    374e:	46c0      	nop			; (mov r8, r8)
    3750:	200003cc 	.word	0x200003cc
    3754:	00008028 	.word	0x00008028

00003758 <TCC0_Handler>:
    3758:	b510      	push	{r4, lr}
    375a:	2000      	movs	r0, #0
    375c:	4b01      	ldr	r3, [pc, #4]	; (3764 <TCC0_Handler+0xc>)
    375e:	4798      	blx	r3
    3760:	bd10      	pop	{r4, pc}
    3762:	46c0      	nop			; (mov r8, r8)
    3764:	0000370d 	.word	0x0000370d

00003768 <TCC1_Handler>:
    3768:	b510      	push	{r4, lr}
    376a:	2001      	movs	r0, #1
    376c:	4b01      	ldr	r3, [pc, #4]	; (3774 <TCC1_Handler+0xc>)
    376e:	4798      	blx	r3
    3770:	bd10      	pop	{r4, pc}
    3772:	46c0      	nop			; (mov r8, r8)
    3774:	0000370d 	.word	0x0000370d

00003778 <TCC2_Handler>:
    3778:	b510      	push	{r4, lr}
    377a:	2002      	movs	r0, #2
    377c:	4b01      	ldr	r3, [pc, #4]	; (3784 <TCC2_Handler+0xc>)
    377e:	4798      	blx	r3
    3780:	bd10      	pop	{r4, pc}
    3782:	46c0      	nop			; (mov r8, r8)
    3784:	0000370d 	.word	0x0000370d

00003788 <tc_register_callback>:
	/* Sanity check arguments */
	Assert(module);
	Assert(callback_func);

	/* Register callback function */
	module->callback[callback_type] = callback_func;
    3788:	1c93      	adds	r3, r2, #2
    378a:	009b      	lsls	r3, r3, #2
    378c:	5019      	str	r1, [r3, r0]

	/* Set the bit corresponding to the callback_type */
	if (callback_type == TC_CALLBACK_CC_CHANNEL0) {
    378e:	2a02      	cmp	r2, #2
    3790:	d009      	beq.n	37a6 <tc_register_callback+0x1e>
		module->register_callback_mask |= TC_INTFLAG_MC(1);
	}
	else if (callback_type == TC_CALLBACK_CC_CHANNEL1) {
    3792:	2a03      	cmp	r2, #3
    3794:	d00c      	beq.n	37b0 <tc_register_callback+0x28>
		module->register_callback_mask |= TC_INTFLAG_MC(2);
	}
	else {
		module->register_callback_mask |= (1 << callback_type);
    3796:	2301      	movs	r3, #1
    3798:	4093      	lsls	r3, r2
    379a:	001a      	movs	r2, r3
    379c:	7e03      	ldrb	r3, [r0, #24]
    379e:	4313      	orrs	r3, r2
    37a0:	7603      	strb	r3, [r0, #24]
	}
	return STATUS_OK;
}
    37a2:	2000      	movs	r0, #0
    37a4:	4770      	bx	lr
		module->register_callback_mask |= TC_INTFLAG_MC(1);
    37a6:	7e03      	ldrb	r3, [r0, #24]
    37a8:	2210      	movs	r2, #16
    37aa:	4313      	orrs	r3, r2
    37ac:	7603      	strb	r3, [r0, #24]
    37ae:	e7f8      	b.n	37a2 <tc_register_callback+0x1a>
		module->register_callback_mask |= TC_INTFLAG_MC(2);
    37b0:	7e03      	ldrb	r3, [r0, #24]
    37b2:	2220      	movs	r2, #32
    37b4:	4313      	orrs	r3, r2
    37b6:	7603      	strb	r3, [r0, #24]
    37b8:	e7f3      	b.n	37a2 <tc_register_callback+0x1a>
	...

000037bc <_tc_interrupt_handler>:
 * \param[in]  instance  ID of the TC instance calling the interrupt
 *                       handler
 */
void _tc_interrupt_handler(
		uint8_t instance)
{
    37bc:	b570      	push	{r4, r5, r6, lr}
	/* Temporary variable */
	uint8_t interrupt_and_callback_status_mask;

	/* Get device instance from the look-up table */
	struct tc_module *module
    37be:	0080      	lsls	r0, r0, #2
    37c0:	4b19      	ldr	r3, [pc, #100]	; (3828 <_tc_interrupt_handler+0x6c>)
    37c2:	58c4      	ldr	r4, [r0, r3]
			= (struct tc_module *)_tc_instances[instance];

	/* Read and mask interrupt flag register */
	interrupt_and_callback_status_mask = module->hw->COUNT8.INTFLAG.reg &
    37c4:	6823      	ldr	r3, [r4, #0]
    37c6:	7b9d      	ldrb	r5, [r3, #14]
    37c8:	7e22      	ldrb	r2, [r4, #24]
    37ca:	7e63      	ldrb	r3, [r4, #25]
    37cc:	4013      	ands	r3, r2
    37ce:	401d      	ands	r5, r3
			module->register_callback_mask &
			module->enable_callback_mask;

	/* Check if an Overflow interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_OVF) {
    37d0:	07eb      	lsls	r3, r5, #31
    37d2:	d40c      	bmi.n	37ee <_tc_interrupt_handler+0x32>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
	}

	/* Check if an Error interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_ERR) {
    37d4:	07ab      	lsls	r3, r5, #30
    37d6:	d411      	bmi.n	37fc <_tc_interrupt_handler+0x40>
		(module->callback[TC_CALLBACK_ERROR])(module);
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_ERR;
	}
	
	interrupt_and_callback_status_mask = module->hw->COUNT8.INTFLAG.reg &
    37d8:	6823      	ldr	r3, [r4, #0]
    37da:	7b9d      	ldrb	r5, [r3, #14]
    37dc:	7e22      	ldrb	r2, [r4, #24]
    37de:	7e63      	ldrb	r3, [r4, #25]
    37e0:	4013      	ands	r3, r2
    37e2:	401d      	ands	r5, r3
			module->register_callback_mask &
			module->enable_callback_mask;

	/* Check if an Match/Capture Channel 0 interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_MC(1)) {
    37e4:	06eb      	lsls	r3, r5, #27
    37e6:	d410      	bmi.n	380a <_tc_interrupt_handler+0x4e>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(1);
	}

	/* Check if an Match/Capture Channel 1 interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_MC(2)) {
    37e8:	06ab      	lsls	r3, r5, #26
    37ea:	d415      	bmi.n	3818 <_tc_interrupt_handler+0x5c>
		/* Invoke registered and enabled callback function */
		(module->callback[TC_CALLBACK_CC_CHANNEL1])(module);
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(2);
	}
}
    37ec:	bd70      	pop	{r4, r5, r6, pc}
		(module->callback[TC_CALLBACK_OVERFLOW])(module);
    37ee:	0020      	movs	r0, r4
    37f0:	68a3      	ldr	r3, [r4, #8]
    37f2:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
    37f4:	2301      	movs	r3, #1
    37f6:	6822      	ldr	r2, [r4, #0]
    37f8:	7393      	strb	r3, [r2, #14]
    37fa:	e7eb      	b.n	37d4 <_tc_interrupt_handler+0x18>
		(module->callback[TC_CALLBACK_ERROR])(module);
    37fc:	0020      	movs	r0, r4
    37fe:	68e3      	ldr	r3, [r4, #12]
    3800:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_ERR;
    3802:	2302      	movs	r3, #2
    3804:	6822      	ldr	r2, [r4, #0]
    3806:	7393      	strb	r3, [r2, #14]
    3808:	e7e6      	b.n	37d8 <_tc_interrupt_handler+0x1c>
		(module->callback[TC_CALLBACK_CC_CHANNEL0])(module);
    380a:	0020      	movs	r0, r4
    380c:	6923      	ldr	r3, [r4, #16]
    380e:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(1);
    3810:	2310      	movs	r3, #16
    3812:	6822      	ldr	r2, [r4, #0]
    3814:	7393      	strb	r3, [r2, #14]
    3816:	e7e7      	b.n	37e8 <_tc_interrupt_handler+0x2c>
		(module->callback[TC_CALLBACK_CC_CHANNEL1])(module);
    3818:	0020      	movs	r0, r4
    381a:	6963      	ldr	r3, [r4, #20]
    381c:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(2);
    381e:	6823      	ldr	r3, [r4, #0]
    3820:	2220      	movs	r2, #32
    3822:	739a      	strb	r2, [r3, #14]
}
    3824:	e7e2      	b.n	37ec <_tc_interrupt_handler+0x30>
    3826:	46c0      	nop			; (mov r8, r8)
    3828:	200003d8 	.word	0x200003d8

0000382c <TC3_Handler>:
	MRECURSION(TC_INST_NUM, _TC_INTERRUPT_HANDLER, TC_INST_MAX_ID)
    382c:	b510      	push	{r4, lr}
    382e:	2000      	movs	r0, #0
    3830:	4b01      	ldr	r3, [pc, #4]	; (3838 <TC3_Handler+0xc>)
    3832:	4798      	blx	r3
    3834:	bd10      	pop	{r4, pc}
    3836:	46c0      	nop			; (mov r8, r8)
    3838:	000037bd 	.word	0x000037bd

0000383c <TC4_Handler>:
    383c:	b510      	push	{r4, lr}
    383e:	2001      	movs	r0, #1
    3840:	4b01      	ldr	r3, [pc, #4]	; (3848 <TC4_Handler+0xc>)
    3842:	4798      	blx	r3
    3844:	bd10      	pop	{r4, pc}
    3846:	46c0      	nop			; (mov r8, r8)
    3848:	000037bd 	.word	0x000037bd

0000384c <TC5_Handler>:
    384c:	b510      	push	{r4, lr}
    384e:	2002      	movs	r0, #2
    3850:	4b01      	ldr	r3, [pc, #4]	; (3858 <TC5_Handler+0xc>)
    3852:	4798      	blx	r3
    3854:	bd10      	pop	{r4, pc}
    3856:	46c0      	nop			; (mov r8, r8)
    3858:	000037bd 	.word	0x000037bd

0000385c <_tc_get_inst_index>:
 *
 * \return Index of the given TC module instance.
 */
uint8_t _tc_get_inst_index(
		Tc *const hw)
{
    385c:	b530      	push	{r4, r5, lr}
    385e:	b085      	sub	sp, #20
	/* List of available TC modules. */
	Tc *const tc_modules[TC_INST_NUM] = TC_INSTS;
    3860:	aa01      	add	r2, sp, #4
    3862:	4b0b      	ldr	r3, [pc, #44]	; (3890 <_tc_get_inst_index+0x34>)
    3864:	cb32      	ldmia	r3!, {r1, r4, r5}
    3866:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for TC instance. */
	for (uint32_t i = 0; i < TC_INST_NUM; i++) {
		if (hw == tc_modules[i]) {
    3868:	9b01      	ldr	r3, [sp, #4]
    386a:	4298      	cmp	r0, r3
    386c:	d00d      	beq.n	388a <_tc_get_inst_index+0x2e>
    386e:	9b02      	ldr	r3, [sp, #8]
    3870:	4298      	cmp	r0, r3
    3872:	d008      	beq.n	3886 <_tc_get_inst_index+0x2a>
		}
	}

	/* Invalid data given. */
	Assert(false);
	return 0;
    3874:	2300      	movs	r3, #0
		if (hw == tc_modules[i]) {
    3876:	9a03      	ldr	r2, [sp, #12]
    3878:	4282      	cmp	r2, r0
    387a:	d002      	beq.n	3882 <_tc_get_inst_index+0x26>
}
    387c:	0018      	movs	r0, r3
    387e:	b005      	add	sp, #20
    3880:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < TC_INST_NUM; i++) {
    3882:	3302      	adds	r3, #2
    3884:	e002      	b.n	388c <_tc_get_inst_index+0x30>
    3886:	2301      	movs	r3, #1
    3888:	e000      	b.n	388c <_tc_get_inst_index+0x30>
    388a:	2300      	movs	r3, #0
			return i;
    388c:	b2db      	uxtb	r3, r3
    388e:	e7f5      	b.n	387c <_tc_get_inst_index+0x20>
    3890:	00008058 	.word	0x00008058

00003894 <tc_init>:
 */
enum status_code tc_init(
		struct tc_module *const module_inst,
		Tc *const hw,
		const struct tc_config *const config)
{
    3894:	b5f0      	push	{r4, r5, r6, r7, lr}
    3896:	b087      	sub	sp, #28
    3898:	0004      	movs	r4, r0
    389a:	000d      	movs	r5, r1
    389c:	0016      	movs	r6, r2
	uint8_t ctrlbset_tmp = 0;
	/* Temporary variable to hold all updates to the CTRLC
	 * register before they are written to it */
	uint8_t ctrlc_tmp = 0;
	/* Temporary variable to hold TC instance number */
	uint8_t instance = _tc_get_inst_index(hw);
    389e:	0008      	movs	r0, r1
    38a0:	4b85      	ldr	r3, [pc, #532]	; (3ab8 <tc_init+0x224>)
    38a2:	4798      	blx	r3
    38a4:	0007      	movs	r7, r0

	/* Array of GLCK ID for different TC instances */
	uint8_t inst_gclk_id[] = TC_INST_GCLK_ID;
    38a6:	ab05      	add	r3, sp, #20
    38a8:	221b      	movs	r2, #27
    38aa:	701a      	strb	r2, [r3, #0]
    38ac:	3201      	adds	r2, #1
    38ae:	705a      	strb	r2, [r3, #1]
    38b0:	709a      	strb	r2, [r3, #2]
	/* Array of PM APBC mask bit position for different TC instances */
	uint16_t inst_pm_apbmask[] = TC_INST_PM_APBCMASK;
    38b2:	ab03      	add	r3, sp, #12
    38b4:	2280      	movs	r2, #128	; 0x80
    38b6:	0112      	lsls	r2, r2, #4
    38b8:	801a      	strh	r2, [r3, #0]
    38ba:	2280      	movs	r2, #128	; 0x80
    38bc:	0152      	lsls	r2, r2, #5
    38be:	805a      	strh	r2, [r3, #2]
    38c0:	2280      	movs	r2, #128	; 0x80
    38c2:	0192      	lsls	r2, r2, #6
    38c4:	809a      	strh	r2, [r3, #4]
	struct system_gclk_chan_config gclk_chan_config;

#if TC_ASYNC == true
	/* Initialize parameters */
	for (uint8_t i = 0; i < TC_CALLBACK_N; i++) {
		module_inst->callback[i]        = NULL;
    38c6:	2300      	movs	r3, #0
    38c8:	60a3      	str	r3, [r4, #8]
    38ca:	60e3      	str	r3, [r4, #12]
    38cc:	6123      	str	r3, [r4, #16]
    38ce:	6163      	str	r3, [r4, #20]
	}
	module_inst->register_callback_mask     = 0x00;
    38d0:	7623      	strb	r3, [r4, #24]
	module_inst->enable_callback_mask       = 0x00;
    38d2:	7663      	strb	r3, [r4, #25]

	/* Register this instance for callbacks*/
	_tc_instances[instance] = module_inst;
    38d4:	0082      	lsls	r2, r0, #2
    38d6:	4b79      	ldr	r3, [pc, #484]	; (3abc <tc_init+0x228>)
    38d8:	50d4      	str	r4, [r2, r3]
#endif

	/* Associate the given device instance with the hardware module */
	module_inst->hw = hw;
    38da:	6025      	str	r5, [r4, #0]
#else
	/* Check if odd numbered TC modules are being configured in 32-bit
	 * counter size. Only even numbered counters are allowed to be
	 * configured in 32-bit counter size.
	 */
	if ((config->counter_size == TC_COUNTER_SIZE_32BIT) &&
    38dc:	78b3      	ldrb	r3, [r6, #2]
    38de:	2b08      	cmp	r3, #8
    38e0:	d006      	beq.n	38f0 <tc_init+0x5c>
#endif

	/* Make the counter size variable in the module_inst struct reflect
	 * the counter size in the module
	 */
	module_inst->counter_size = config->counter_size;
    38e2:	7123      	strb	r3, [r4, #4]

	if (hw->COUNT8.CTRLA.reg & TC_CTRLA_SWRST) {
    38e4:	882b      	ldrh	r3, [r5, #0]
		/* We are in the middle of a reset. Abort. */
		return STATUS_BUSY;
    38e6:	2005      	movs	r0, #5
	if (hw->COUNT8.CTRLA.reg & TC_CTRLA_SWRST) {
    38e8:	07db      	lsls	r3, r3, #31
    38ea:	d505      	bpl.n	38f8 <tc_init+0x64>
			return STATUS_OK;
	}

	Assert(false);
	return STATUS_ERR_INVALID_ARG;
}
    38ec:	b007      	add	sp, #28
    38ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return STATUS_ERR_INVALID_ARG;
    38f0:	2017      	movs	r0, #23
	if ((config->counter_size == TC_COUNTER_SIZE_32BIT) &&
    38f2:	07fa      	lsls	r2, r7, #31
    38f4:	d5fa      	bpl.n	38ec <tc_init+0x58>
    38f6:	e7f4      	b.n	38e2 <tc_init+0x4e>
	if (hw->COUNT8.STATUS.reg & TC_STATUS_SLAVE) {
    38f8:	7beb      	ldrb	r3, [r5, #15]
		return STATUS_ERR_DENIED;
    38fa:	3017      	adds	r0, #23
	if (hw->COUNT8.STATUS.reg & TC_STATUS_SLAVE) {
    38fc:	06db      	lsls	r3, r3, #27
    38fe:	d4f5      	bmi.n	38ec <tc_init+0x58>
	if (hw->COUNT8.CTRLA.reg & TC_CTRLA_ENABLE) {
    3900:	882b      	ldrh	r3, [r5, #0]
    3902:	079b      	lsls	r3, r3, #30
    3904:	d4f2      	bmi.n	38ec <tc_init+0x58>
	if (config->pwm_channel[0].enabled) {
    3906:	7c33      	ldrb	r3, [r6, #16]
    3908:	2b00      	cmp	r3, #0
    390a:	d179      	bne.n	3a00 <tc_init+0x16c>
	if (config->pwm_channel[1].enabled) {
    390c:	7f33      	ldrb	r3, [r6, #28]
    390e:	2b00      	cmp	r3, #0
    3910:	d000      	beq.n	3914 <tc_init+0x80>
    3912:	e081      	b.n	3a18 <tc_init+0x184>
    3914:	496a      	ldr	r1, [pc, #424]	; (3ac0 <tc_init+0x22c>)
    3916:	6a08      	ldr	r0, [r1, #32]
			inst_pm_apbmask[instance]);
    3918:	007a      	lsls	r2, r7, #1
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC,
    391a:	ab03      	add	r3, sp, #12
    391c:	5ad3      	ldrh	r3, [r2, r3]
    391e:	4303      	orrs	r3, r0
    3920:	620b      	str	r3, [r1, #32]
	if ((config->counter_size == TC_COUNTER_SIZE_32BIT))
    3922:	78b3      	ldrb	r3, [r6, #2]
    3924:	2b08      	cmp	r3, #8
    3926:	d100      	bne.n	392a <tc_init+0x96>
    3928:	e086      	b.n	3a38 <tc_init+0x1a4>
	gclk_chan_config.source_generator = config->clock_source;
    392a:	a901      	add	r1, sp, #4
    392c:	7833      	ldrb	r3, [r6, #0]
    392e:	700b      	strb	r3, [r1, #0]
	system_gclk_chan_set_config(inst_gclk_id[instance], &gclk_chan_config);
    3930:	ab05      	add	r3, sp, #20
    3932:	5ddf      	ldrb	r7, [r3, r7]
    3934:	0038      	movs	r0, r7
    3936:	4b63      	ldr	r3, [pc, #396]	; (3ac4 <tc_init+0x230>)
    3938:	4798      	blx	r3
	system_gclk_chan_enable(inst_gclk_id[instance]);
    393a:	0038      	movs	r0, r7
    393c:	4b62      	ldr	r3, [pc, #392]	; (3ac8 <tc_init+0x234>)
    393e:	4798      	blx	r3
	ctrla_tmp =
    3940:	8931      	ldrh	r1, [r6, #8]
    3942:	88b3      	ldrh	r3, [r6, #4]
    3944:	430b      	orrs	r3, r1
			(uint32_t)config->wave_generation |
    3946:	78b1      	ldrb	r1, [r6, #2]
    3948:	79b2      	ldrb	r2, [r6, #6]
    394a:	4311      	orrs	r1, r2
	ctrla_tmp =
    394c:	4319      	orrs	r1, r3
	if (config->run_in_standby) {
    394e:	7873      	ldrb	r3, [r6, #1]
    3950:	2b00      	cmp	r3, #0
    3952:	d002      	beq.n	395a <tc_init+0xc6>
		ctrla_tmp |= TC_CTRLA_RUNSTDBY;
    3954:	2380      	movs	r3, #128	; 0x80
    3956:	011b      	lsls	r3, r3, #4
    3958:	4319      	orrs	r1, r3
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    395a:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    395c:	7bd3      	ldrb	r3, [r2, #15]
	while (tc_is_syncing(module_inst)) {
    395e:	b25b      	sxtb	r3, r3
    3960:	2b00      	cmp	r3, #0
    3962:	dbfb      	blt.n	395c <tc_init+0xc8>
	hw->COUNT8.CTRLA.reg = ctrla_tmp;
    3964:	8029      	strh	r1, [r5, #0]
	if (config->oneshot) {
    3966:	7b71      	ldrb	r1, [r6, #13]
		ctrlbset_tmp = TC_CTRLBSET_ONESHOT;
    3968:	1e4b      	subs	r3, r1, #1
    396a:	4199      	sbcs	r1, r3
    396c:	0089      	lsls	r1, r1, #2
	if (config->count_direction) {
    396e:	7bb3      	ldrb	r3, [r6, #14]
    3970:	2b00      	cmp	r3, #0
    3972:	d001      	beq.n	3978 <tc_init+0xe4>
		ctrlbset_tmp |= TC_CTRLBSET_DIR;
    3974:	2301      	movs	r3, #1
    3976:	4319      	orrs	r1, r3
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    3978:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    397a:	7bd3      	ldrb	r3, [r2, #15]
	while (tc_is_syncing(module_inst)) {
    397c:	b25b      	sxtb	r3, r3
    397e:	2b00      	cmp	r3, #0
    3980:	dbfb      	blt.n	397a <tc_init+0xe6>
	hw->COUNT8.CTRLBCLR.reg = 0xFF;
    3982:	23ff      	movs	r3, #255	; 0xff
    3984:	712b      	strb	r3, [r5, #4]
	if (ctrlbset_tmp) {
    3986:	2900      	cmp	r1, #0
    3988:	d005      	beq.n	3996 <tc_init+0x102>
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    398a:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    398c:	7bd3      	ldrb	r3, [r2, #15]
		while (tc_is_syncing(module_inst)) {
    398e:	b25b      	sxtb	r3, r3
    3990:	2b00      	cmp	r3, #0
    3992:	dbfb      	blt.n	398c <tc_init+0xf8>
		hw->COUNT8.CTRLBSET.reg = ctrlbset_tmp;
    3994:	7169      	strb	r1, [r5, #5]
	ctrlc_tmp = config->waveform_invert_output;
    3996:	7ab1      	ldrb	r1, [r6, #10]
		if (config->enable_capture_on_channel[i] == true) {
    3998:	7af3      	ldrb	r3, [r6, #11]
    399a:	2b00      	cmp	r3, #0
    399c:	d001      	beq.n	39a2 <tc_init+0x10e>
			ctrlc_tmp |= (TC_CTRLC_CPTEN(1) << i);
    399e:	2310      	movs	r3, #16
    39a0:	4319      	orrs	r1, r3
		if (config->enable_capture_on_channel[i] == true) {
    39a2:	7b33      	ldrb	r3, [r6, #12]
    39a4:	2b00      	cmp	r3, #0
    39a6:	d001      	beq.n	39ac <tc_init+0x118>
			ctrlc_tmp |= (TC_CTRLC_CPTEN(1) << i);
    39a8:	2320      	movs	r3, #32
    39aa:	4319      	orrs	r1, r3
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    39ac:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    39ae:	7bd3      	ldrb	r3, [r2, #15]
	while (tc_is_syncing(module_inst)) {
    39b0:	b25b      	sxtb	r3, r3
    39b2:	2b00      	cmp	r3, #0
    39b4:	dbfb      	blt.n	39ae <tc_init+0x11a>
	hw->COUNT8.CTRLC.reg = ctrlc_tmp;
    39b6:	71a9      	strb	r1, [r5, #6]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    39b8:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    39ba:	7bd3      	ldrb	r3, [r2, #15]
	while (tc_is_syncing(module_inst)) {
    39bc:	b25b      	sxtb	r3, r3
    39be:	2b00      	cmp	r3, #0
    39c0:	dbfb      	blt.n	39ba <tc_init+0x126>
	switch (module_inst->counter_size) {
    39c2:	7923      	ldrb	r3, [r4, #4]
    39c4:	2b04      	cmp	r3, #4
    39c6:	d03f      	beq.n	3a48 <tc_init+0x1b4>
    39c8:	2b08      	cmp	r3, #8
    39ca:	d05e      	beq.n	3a8a <tc_init+0x1f6>
	return STATUS_ERR_INVALID_ARG;
    39cc:	2017      	movs	r0, #23
	switch (module_inst->counter_size) {
    39ce:	2b00      	cmp	r3, #0
    39d0:	d000      	beq.n	39d4 <tc_init+0x140>
    39d2:	e78b      	b.n	38ec <tc_init+0x58>
    39d4:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    39d6:	b25b      	sxtb	r3, r3
    39d8:	2b00      	cmp	r3, #0
    39da:	dbfb      	blt.n	39d4 <tc_init+0x140>
				= config->counter_16_bit.value;
    39dc:	8d33      	ldrh	r3, [r6, #40]	; 0x28
    39de:	822b      	strh	r3, [r5, #16]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    39e0:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    39e2:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    39e4:	b25b      	sxtb	r3, r3
    39e6:	2b00      	cmp	r3, #0
    39e8:	dbfb      	blt.n	39e2 <tc_init+0x14e>
					config->counter_16_bit.compare_capture_channel[0];
    39ea:	8d73      	ldrh	r3, [r6, #42]	; 0x2a
			hw->COUNT16.CC[0].reg =
    39ec:	832b      	strh	r3, [r5, #24]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    39ee:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    39f0:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    39f2:	b25b      	sxtb	r3, r3
    39f4:	2b00      	cmp	r3, #0
    39f6:	dbfb      	blt.n	39f0 <tc_init+0x15c>
					config->counter_16_bit.compare_capture_channel[1];
    39f8:	8db3      	ldrh	r3, [r6, #44]	; 0x2c
			hw->COUNT16.CC[1].reg =
    39fa:	836b      	strh	r3, [r5, #26]
			return STATUS_OK;
    39fc:	2000      	movs	r0, #0
    39fe:	e775      	b.n	38ec <tc_init+0x58>
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
    3a00:	a902      	add	r1, sp, #8
    3a02:	2301      	movs	r3, #1
    3a04:	708b      	strb	r3, [r1, #2]
	config->powersave    = false;
    3a06:	2200      	movs	r2, #0
    3a08:	70ca      	strb	r2, [r1, #3]
		pin_config.mux_position = config->pwm_channel[0].pin_mux;
    3a0a:	7e32      	ldrb	r2, [r6, #24]
    3a0c:	700a      	strb	r2, [r1, #0]
		pin_config.direction = SYSTEM_PINMUX_PIN_DIR_OUTPUT;
    3a0e:	704b      	strb	r3, [r1, #1]
		system_pinmux_pin_set_config(
    3a10:	7d30      	ldrb	r0, [r6, #20]
    3a12:	4b2e      	ldr	r3, [pc, #184]	; (3acc <tc_init+0x238>)
    3a14:	4798      	blx	r3
    3a16:	e779      	b.n	390c <tc_init+0x78>
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
    3a18:	a902      	add	r1, sp, #8
    3a1a:	2301      	movs	r3, #1
    3a1c:	708b      	strb	r3, [r1, #2]
	config->powersave    = false;
    3a1e:	2200      	movs	r2, #0
    3a20:	70ca      	strb	r2, [r1, #3]
		pin_config.mux_position = config->pwm_channel[1].pin_mux;
    3a22:	3224      	adds	r2, #36	; 0x24
    3a24:	18b2      	adds	r2, r6, r2
    3a26:	7812      	ldrb	r2, [r2, #0]
    3a28:	700a      	strb	r2, [r1, #0]
		pin_config.direction = SYSTEM_PINMUX_PIN_DIR_OUTPUT;
    3a2a:	704b      	strb	r3, [r1, #1]
		system_pinmux_pin_set_config(
    3a2c:	331f      	adds	r3, #31
    3a2e:	18f3      	adds	r3, r6, r3
    3a30:	7818      	ldrb	r0, [r3, #0]
    3a32:	4b26      	ldr	r3, [pc, #152]	; (3acc <tc_init+0x238>)
    3a34:	4798      	blx	r3
    3a36:	e76d      	b.n	3914 <tc_init+0x80>
    3a38:	6a08      	ldr	r0, [r1, #32]
				inst_pm_apbmask[instance + 1]);
    3a3a:	1c7a      	adds	r2, r7, #1
    3a3c:	0052      	lsls	r2, r2, #1
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC,
    3a3e:	ab03      	add	r3, sp, #12
    3a40:	5ad3      	ldrh	r3, [r2, r3]
    3a42:	4303      	orrs	r3, r0
    3a44:	620b      	str	r3, [r1, #32]
    3a46:	e770      	b.n	392a <tc_init+0x96>
    3a48:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    3a4a:	b25b      	sxtb	r3, r3
    3a4c:	2b00      	cmp	r3, #0
    3a4e:	dbfb      	blt.n	3a48 <tc_init+0x1b4>
					config->counter_8_bit.value;
    3a50:	2328      	movs	r3, #40	; 0x28
    3a52:	5cf3      	ldrb	r3, [r6, r3]
			hw->COUNT8.COUNT.reg =
    3a54:	742b      	strb	r3, [r5, #16]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    3a56:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    3a58:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    3a5a:	b25b      	sxtb	r3, r3
    3a5c:	2b00      	cmp	r3, #0
    3a5e:	dbfb      	blt.n	3a58 <tc_init+0x1c4>
					config->counter_8_bit.period;
    3a60:	2329      	movs	r3, #41	; 0x29
    3a62:	5cf3      	ldrb	r3, [r6, r3]
			hw->COUNT8.PER.reg =
    3a64:	752b      	strb	r3, [r5, #20]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    3a66:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    3a68:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    3a6a:	b25b      	sxtb	r3, r3
    3a6c:	2b00      	cmp	r3, #0
    3a6e:	dbfb      	blt.n	3a68 <tc_init+0x1d4>
					config->counter_8_bit.compare_capture_channel[0];
    3a70:	232a      	movs	r3, #42	; 0x2a
    3a72:	5cf3      	ldrb	r3, [r6, r3]
			hw->COUNT8.CC[0].reg =
    3a74:	762b      	strb	r3, [r5, #24]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    3a76:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    3a78:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    3a7a:	b25b      	sxtb	r3, r3
    3a7c:	2b00      	cmp	r3, #0
    3a7e:	dbfb      	blt.n	3a78 <tc_init+0x1e4>
					config->counter_8_bit.compare_capture_channel[1];
    3a80:	232b      	movs	r3, #43	; 0x2b
    3a82:	5cf3      	ldrb	r3, [r6, r3]
			hw->COUNT8.CC[1].reg =
    3a84:	766b      	strb	r3, [r5, #25]
			return STATUS_OK;
    3a86:	2000      	movs	r0, #0
    3a88:	e730      	b.n	38ec <tc_init+0x58>
    3a8a:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    3a8c:	b25b      	sxtb	r3, r3
    3a8e:	2b00      	cmp	r3, #0
    3a90:	dbfb      	blt.n	3a8a <tc_init+0x1f6>
				= config->counter_32_bit.value;
    3a92:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    3a94:	612b      	str	r3, [r5, #16]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    3a96:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    3a98:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    3a9a:	b25b      	sxtb	r3, r3
    3a9c:	2b00      	cmp	r3, #0
    3a9e:	dbfb      	blt.n	3a98 <tc_init+0x204>
			hw->COUNT32.CC[0].reg =
    3aa0:	6af3      	ldr	r3, [r6, #44]	; 0x2c
    3aa2:	61ab      	str	r3, [r5, #24]
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);
    3aa4:	6822      	ldr	r2, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
    3aa6:	7bd3      	ldrb	r3, [r2, #15]
			while (tc_is_syncing(module_inst)) {
    3aa8:	b25b      	sxtb	r3, r3
    3aaa:	2b00      	cmp	r3, #0
    3aac:	dbfb      	blt.n	3aa6 <tc_init+0x212>
					config->counter_32_bit.compare_capture_channel[1];
    3aae:	6b33      	ldr	r3, [r6, #48]	; 0x30
			hw->COUNT32.CC[1].reg =
    3ab0:	61eb      	str	r3, [r5, #28]
			return STATUS_OK;
    3ab2:	2000      	movs	r0, #0
    3ab4:	e71a      	b.n	38ec <tc_init+0x58>
    3ab6:	46c0      	nop			; (mov r8, r8)
    3ab8:	0000385d 	.word	0x0000385d
    3abc:	200003d8 	.word	0x200003d8
    3ac0:	40000400 	.word	0x40000400
    3ac4:	00002fd5 	.word	0x00002fd5
    3ac8:	00002f49 	.word	0x00002f49
    3acc:	000030cd 	.word	0x000030cd

00003ad0 <tc_set_count_value>:
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance*/
	Tc *const tc_module = module_inst->hw;
    3ad0:	6802      	ldr	r2, [r0, #0]
    3ad2:	7bd3      	ldrb	r3, [r2, #15]

	while (tc_is_syncing(module_inst)) {
    3ad4:	b25b      	sxtb	r3, r3
    3ad6:	2b00      	cmp	r3, #0
    3ad8:	dbfb      	blt.n	3ad2 <tc_set_count_value+0x2>
		/* Wait for sync */
	}

	/* Write to based on the TC counter_size */
	switch (module_inst->counter_size) {
    3ada:	7903      	ldrb	r3, [r0, #4]
    3adc:	2b04      	cmp	r3, #4
    3ade:	d005      	beq.n	3aec <tc_set_count_value+0x1c>
    3ae0:	2b08      	cmp	r3, #8
    3ae2:	d00b      	beq.n	3afc <tc_set_count_value+0x2c>
		case TC_COUNTER_SIZE_32BIT:
			tc_module->COUNT32.COUNT.reg = (uint32_t)count;
			return STATUS_OK;

		default:
			return STATUS_ERR_INVALID_ARG;
    3ae4:	2017      	movs	r0, #23
	switch (module_inst->counter_size) {
    3ae6:	2b00      	cmp	r3, #0
    3ae8:	d004      	beq.n	3af4 <tc_set_count_value+0x24>
	}
}
    3aea:	4770      	bx	lr
			tc_module->COUNT8.COUNT.reg  = (uint8_t)count;
    3aec:	b2c9      	uxtb	r1, r1
    3aee:	7411      	strb	r1, [r2, #16]
			return STATUS_OK;
    3af0:	2000      	movs	r0, #0
    3af2:	e7fa      	b.n	3aea <tc_set_count_value+0x1a>
			tc_module->COUNT16.COUNT.reg = (uint16_t)count;
    3af4:	b289      	uxth	r1, r1
    3af6:	8211      	strh	r1, [r2, #16]
			return STATUS_OK;
    3af8:	2000      	movs	r0, #0
    3afa:	e7f6      	b.n	3aea <tc_set_count_value+0x1a>
			tc_module->COUNT32.COUNT.reg = (uint32_t)count;
    3afc:	6111      	str	r1, [r2, #16]
			return STATUS_OK;
    3afe:	2000      	movs	r0, #0
    3b00:	e7f3      	b.n	3aea <tc_set_count_value+0x1a>

00003b02 <tc_get_count_value>:
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	Tc *const tc_module = module_inst->hw;
    3b02:	6802      	ldr	r2, [r0, #0]
    3b04:	7bd3      	ldrb	r3, [r2, #15]

	while (tc_is_syncing(module_inst)) {
    3b06:	b25b      	sxtb	r3, r3
    3b08:	2b00      	cmp	r3, #0
    3b0a:	dbfb      	blt.n	3b04 <tc_get_count_value+0x2>
		/* Wait for sync */
	}

	/* Read from based on the TC counter size */
	switch (module_inst->counter_size) {
    3b0c:	7903      	ldrb	r3, [r0, #4]
    3b0e:	2b04      	cmp	r3, #4
    3b10:	d005      	beq.n	3b1e <tc_get_count_value+0x1c>
    3b12:	2b08      	cmp	r3, #8
    3b14:	d009      	beq.n	3b2a <tc_get_count_value+0x28>
		case TC_COUNTER_SIZE_32BIT:
			return tc_module->COUNT32.COUNT.reg;
	}

	Assert(false);
	return 0;
    3b16:	2000      	movs	r0, #0
	switch (module_inst->counter_size) {
    3b18:	2b00      	cmp	r3, #0
    3b1a:	d003      	beq.n	3b24 <tc_get_count_value+0x22>
}
    3b1c:	4770      	bx	lr
			return (uint32_t)tc_module->COUNT8.COUNT.reg;
    3b1e:	7c10      	ldrb	r0, [r2, #16]
    3b20:	b2c0      	uxtb	r0, r0
    3b22:	e7fb      	b.n	3b1c <tc_get_count_value+0x1a>
			return (uint32_t)tc_module->COUNT16.COUNT.reg;
    3b24:	8a10      	ldrh	r0, [r2, #16]
    3b26:	b280      	uxth	r0, r0
    3b28:	e7f8      	b.n	3b1c <tc_get_count_value+0x1a>
			return tc_module->COUNT32.COUNT.reg;
    3b2a:	6910      	ldr	r0, [r2, #16]
    3b2c:	e7f6      	b.n	3b1c <tc_get_count_value+0x1a>

00003b2e <tc_set_compare_value>:
 */
enum status_code tc_set_compare_value(
		const struct tc_module *const module_inst,
		const enum tc_compare_capture_channel channel_index,
		const uint32_t compare)
{
    3b2e:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	Tc *const tc_module = module_inst->hw;
    3b30:	6804      	ldr	r4, [r0, #0]
    3b32:	7be3      	ldrb	r3, [r4, #15]

	while (tc_is_syncing(module_inst)) {
    3b34:	b25b      	sxtb	r3, r3
    3b36:	2b00      	cmp	r3, #0
    3b38:	dbfb      	blt.n	3b32 <tc_set_compare_value+0x4>
		/* Wait for sync */
	}

	/* Read out based on the TC counter size */
	switch (module_inst->counter_size) {
    3b3a:	7903      	ldrb	r3, [r0, #4]
    3b3c:	2b04      	cmp	r3, #4
    3b3e:	d005      	beq.n	3b4c <tc_set_compare_value+0x1e>
    3b40:	2b08      	cmp	r3, #8
    3b42:	d014      	beq.n	3b6e <tc_set_compare_value+0x40>
						(uint32_t)compare;
				return STATUS_OK;
			}
	}

	return STATUS_ERR_INVALID_ARG;
    3b44:	2017      	movs	r0, #23
	switch (module_inst->counter_size) {
    3b46:	2b00      	cmp	r3, #0
    3b48:	d008      	beq.n	3b5c <tc_set_compare_value+0x2e>
}
    3b4a:	bd10      	pop	{r4, pc}
	return STATUS_ERR_INVALID_ARG;
    3b4c:	2017      	movs	r0, #23
			if (channel_index <
    3b4e:	2901      	cmp	r1, #1
    3b50:	d8fb      	bhi.n	3b4a <tc_set_compare_value+0x1c>
						(uint8_t)compare;
    3b52:	b2d2      	uxtb	r2, r2
				tc_module->COUNT8.CC[channel_index].reg  =
    3b54:	1861      	adds	r1, r4, r1
    3b56:	760a      	strb	r2, [r1, #24]
				return STATUS_OK;
    3b58:	2000      	movs	r0, #0
    3b5a:	e7f6      	b.n	3b4a <tc_set_compare_value+0x1c>
	return STATUS_ERR_INVALID_ARG;
    3b5c:	2017      	movs	r0, #23
			if (channel_index <
    3b5e:	2901      	cmp	r1, #1
    3b60:	d8f3      	bhi.n	3b4a <tc_set_compare_value+0x1c>
						(uint16_t)compare;
    3b62:	b292      	uxth	r2, r2
				tc_module->COUNT16.CC[channel_index].reg =
    3b64:	310c      	adds	r1, #12
    3b66:	0049      	lsls	r1, r1, #1
    3b68:	530a      	strh	r2, [r1, r4]
				return STATUS_OK;
    3b6a:	2000      	movs	r0, #0
    3b6c:	e7ed      	b.n	3b4a <tc_set_compare_value+0x1c>
	return STATUS_ERR_INVALID_ARG;
    3b6e:	2017      	movs	r0, #23
			if (channel_index <
    3b70:	2901      	cmp	r1, #1
    3b72:	d8ea      	bhi.n	3b4a <tc_set_compare_value+0x1c>
				tc_module->COUNT32.CC[channel_index].reg =
    3b74:	3106      	adds	r1, #6
    3b76:	0089      	lsls	r1, r1, #2
    3b78:	510a      	str	r2, [r1, r4]
				return STATUS_OK;
    3b7a:	2000      	movs	r0, #0
    3b7c:	e7e5      	b.n	3b4a <tc_set_compare_value+0x1c>

00003b7e <tc_set_inital_value>:

enum status_code tc_set_inital_value(
const struct tc_module *const module_inst,
const enum tc_compare_capture_channel channel_index,
const uint32_t initial_value)
{
    3b7e:	b510      	push	{r4, lr}
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */

	Tc *const tc_module = module_inst->hw;
    3b80:	6804      	ldr	r4, [r0, #0]
    3b82:	7be3      	ldrb	r3, [r4, #15]

	while (tc_is_syncing(module_inst)) {
    3b84:	b25b      	sxtb	r3, r3
    3b86:	2b00      	cmp	r3, #0
    3b88:	dbfb      	blt.n	3b82 <tc_set_inital_value+0x4>
		/* Wait for sync */
	}
	/* Read out based on the TC counter size */
	switch (module_inst->counter_size) {
    3b8a:	7903      	ldrb	r3, [r0, #4]
    3b8c:	2b04      	cmp	r3, #4
    3b8e:	d005      	beq.n	3b9c <tc_set_inital_value+0x1e>
    3b90:	2b08      	cmp	r3, #8
    3b92:	d011      	beq.n	3bb8 <tc_set_inital_value+0x3a>
			(uint32_t)initial_value;
			return STATUS_OK;
		}
	}

	return STATUS_ERR_INVALID_ARG;
    3b94:	2017      	movs	r0, #23
	switch (module_inst->counter_size) {
    3b96:	2b00      	cmp	r3, #0
    3b98:	d007      	beq.n	3baa <tc_set_inital_value+0x2c>
}
    3b9a:	bd10      	pop	{r4, pc}
	return STATUS_ERR_INVALID_ARG;
    3b9c:	2017      	movs	r0, #23
		if (channel_index <
    3b9e:	2901      	cmp	r1, #1
    3ba0:	d8fb      	bhi.n	3b9a <tc_set_inital_value+0x1c>
			(uint8_t)initial_value;
    3ba2:	b2d2      	uxtb	r2, r2
			tc_module->COUNT8.COUNT.reg  =
    3ba4:	7422      	strb	r2, [r4, #16]
			return STATUS_OK;
    3ba6:	2000      	movs	r0, #0
    3ba8:	e7f7      	b.n	3b9a <tc_set_inital_value+0x1c>
	return STATUS_ERR_INVALID_ARG;
    3baa:	2017      	movs	r0, #23
		if (channel_index <
    3bac:	2901      	cmp	r1, #1
    3bae:	d8f4      	bhi.n	3b9a <tc_set_inital_value+0x1c>
			(uint16_t)initial_value;
    3bb0:	b292      	uxth	r2, r2
			tc_module->COUNT16.COUNT.reg =
    3bb2:	8222      	strh	r2, [r4, #16]
			return STATUS_OK;
    3bb4:	2000      	movs	r0, #0
    3bb6:	e7f0      	b.n	3b9a <tc_set_inital_value+0x1c>
	return STATUS_ERR_INVALID_ARG;
    3bb8:	2017      	movs	r0, #23
		if (channel_index <
    3bba:	2901      	cmp	r1, #1
    3bbc:	d8ed      	bhi.n	3b9a <tc_set_inital_value+0x1c>
			tc_module->COUNT32.COUNT.reg =
    3bbe:	6122      	str	r2, [r4, #16]
			return STATUS_OK;
    3bc0:	2000      	movs	r0, #0
    3bc2:	e7ea      	b.n	3b9a <tc_set_inital_value+0x1c>

00003bc4 <udd_sleep_mode>:
/** \brief Manages the sleep mode following the USB state
 *
 * \param new_state  New USB state
 */
static void udd_sleep_mode(enum udd_usb_state_enum new_state)
{
    3bc4:	b510      	push	{r4, lr}
    3bc6:	b082      	sub	sp, #8
	enum sleepmgr_mode sleep_mode[] = {
    3bc8:	ab01      	add	r3, sp, #4
    3bca:	2200      	movs	r2, #0
    3bcc:	701a      	strb	r2, [r3, #0]
    3bce:	3203      	adds	r2, #3
    3bd0:	705a      	strb	r2, [r3, #1]
    3bd2:	3a01      	subs	r2, #1
    3bd4:	709a      	strb	r2, [r3, #2]
    3bd6:	3a01      	subs	r2, #1
    3bd8:	70da      	strb	r2, [r3, #3]
	#endif	
	};

	static enum udd_usb_state_enum udd_state = UDD_STATE_OFF;

	if (udd_state == new_state) {
    3bda:	4b22      	ldr	r3, [pc, #136]	; (3c64 <udd_sleep_mode+0xa0>)
    3bdc:	781b      	ldrb	r3, [r3, #0]
    3bde:	4283      	cmp	r3, r0
    3be0:	d03d      	beq.n	3c5e <udd_sleep_mode+0x9a>
		return; // No change
	}
	if (new_state != UDD_STATE_OFF) {
    3be2:	2800      	cmp	r0, #0
    3be4:	d01a      	beq.n	3c1c <udd_sleep_mode+0x58>
		/* Lock new limit */
		sleepmgr_lock_mode(sleep_mode[new_state]);
    3be6:	ab01      	add	r3, sp, #4
static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] >= 0xff) {
    3be8:	5c1a      	ldrb	r2, [r3, r0]
    3bea:	4b1f      	ldr	r3, [pc, #124]	; (3c68 <udd_sleep_mode+0xa4>)
    3bec:	5c9b      	ldrb	r3, [r3, r2]
    3bee:	2bff      	cmp	r3, #255	; 0xff
    3bf0:	d100      	bne.n	3bf4 <udd_sleep_mode+0x30>
    3bf2:	e7fe      	b.n	3bf2 <udd_sleep_mode+0x2e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    3bf4:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
    3bf8:	b672      	cpsid	i
    3bfa:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    3bfe:	2400      	movs	r4, #0
    3c00:	491a      	ldr	r1, [pc, #104]	; (3c6c <udd_sleep_mode+0xa8>)
    3c02:	700c      	strb	r4, [r1, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
    3c04:	4c18      	ldr	r4, [pc, #96]	; (3c68 <udd_sleep_mode+0xa4>)
    3c06:	5ca1      	ldrb	r1, [r4, r2]
    3c08:	3101      	adds	r1, #1
    3c0a:	54a1      	strb	r1, [r4, r2]
	if (cpu_irq_is_enabled_flags(flags))
    3c0c:	2b00      	cmp	r3, #0
    3c0e:	d105      	bne.n	3c1c <udd_sleep_mode+0x58>
		cpu_irq_enable();
    3c10:	2201      	movs	r2, #1
    3c12:	4b16      	ldr	r3, [pc, #88]	; (3c6c <udd_sleep_mode+0xa8>)
    3c14:	701a      	strb	r2, [r3, #0]
    3c16:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    3c1a:	b662      	cpsie	i
	}
	if (udd_state != UDD_STATE_OFF) {
    3c1c:	4b11      	ldr	r3, [pc, #68]	; (3c64 <udd_sleep_mode+0xa0>)
    3c1e:	781b      	ldrb	r3, [r3, #0]
    3c20:	2b00      	cmp	r3, #0
    3c22:	d01a      	beq.n	3c5a <udd_sleep_mode+0x96>
		/* Unlock old limit */
		sleepmgr_unlock_mode(sleep_mode[udd_state]);
    3c24:	aa01      	add	r2, sp, #4
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
    3c26:	5cd2      	ldrb	r2, [r2, r3]
    3c28:	4b0f      	ldr	r3, [pc, #60]	; (3c68 <udd_sleep_mode+0xa4>)
    3c2a:	5c9b      	ldrb	r3, [r3, r2]
    3c2c:	2b00      	cmp	r3, #0
    3c2e:	d100      	bne.n	3c32 <udd_sleep_mode+0x6e>
    3c30:	e7fe      	b.n	3c30 <udd_sleep_mode+0x6c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    3c32:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
    3c36:	b672      	cpsid	i
    3c38:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    3c3c:	2400      	movs	r4, #0
    3c3e:	490b      	ldr	r1, [pc, #44]	; (3c6c <udd_sleep_mode+0xa8>)
    3c40:	700c      	strb	r4, [r1, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
    3c42:	4c09      	ldr	r4, [pc, #36]	; (3c68 <udd_sleep_mode+0xa4>)
    3c44:	5ca1      	ldrb	r1, [r4, r2]
    3c46:	3901      	subs	r1, #1
    3c48:	54a1      	strb	r1, [r4, r2]
	if (cpu_irq_is_enabled_flags(flags))
    3c4a:	2b00      	cmp	r3, #0
    3c4c:	d105      	bne.n	3c5a <udd_sleep_mode+0x96>
		cpu_irq_enable();
    3c4e:	2201      	movs	r2, #1
    3c50:	4b06      	ldr	r3, [pc, #24]	; (3c6c <udd_sleep_mode+0xa8>)
    3c52:	701a      	strb	r2, [r3, #0]
    3c54:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    3c58:	b662      	cpsie	i
	}
	udd_state = new_state;
    3c5a:	4b02      	ldr	r3, [pc, #8]	; (3c64 <udd_sleep_mode+0xa0>)
    3c5c:	7018      	strb	r0, [r3, #0]
}
    3c5e:	b002      	add	sp, #8
    3c60:	bd10      	pop	{r4, pc}
    3c62:	46c0      	nop			; (mov r8, r8)
    3c64:	2000021c 	.word	0x2000021c
    3c68:	2000036c 	.word	0x2000036c
    3c6c:	20000116 	.word	0x20000116

00003c70 <udd_ep_get_job>:
 * \param[in] ep  Endpoint Address
 * \retval    pointer to an udd_ep_job_t structure instance
 */
static udd_ep_job_t* udd_ep_get_job(udd_ep_id_t ep)
{
	return &udd_ep_job[(2 * (ep & USB_EP_ADDR_MASK) + ((ep & USB_EP_DIR_IN) ? 1 : 0)) - 2];
    3c70:	230f      	movs	r3, #15
    3c72:	4003      	ands	r3, r0
    3c74:	005b      	lsls	r3, r3, #1
    3c76:	09c0      	lsrs	r0, r0, #7
    3c78:	1818      	adds	r0, r3, r0
    3c7a:	3802      	subs	r0, #2
    3c7c:	0083      	lsls	r3, r0, #2
    3c7e:	1818      	adds	r0, r3, r0
    3c80:	0080      	lsls	r0, r0, #2
    3c82:	4b01      	ldr	r3, [pc, #4]	; (3c88 <udd_ep_get_job+0x18>)
    3c84:	1818      	adds	r0, r3, r0
}
    3c86:	4770      	bx	lr
    3c88:	200001cc 	.word	0x200001cc

00003c8c <udd_ep_transfer_process>:
 * \brief     Endpoint Transfer Complete callback function, to do the next transfer depends on the direction(IN or OUT)
 * \param[in] module_inst Pointer to USB module instance
 * \param[in] pointer Pointer to the endpoint transfer status parameter struct from driver layer.
 */
static void udd_ep_transfer_process(struct usb_module *module_inst, void* pointer)
{
    3c8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c8e:	46d6      	mov	lr, sl
    3c90:	464f      	mov	r7, r9
    3c92:	4646      	mov	r6, r8
    3c94:	b5c0      	push	{r6, r7, lr}
    3c96:	4689      	mov	r9, r1
	struct usb_endpoint_callback_parameter *ep_callback_para = (struct usb_endpoint_callback_parameter*)pointer;
	udd_ep_id_t ep = ep_callback_para->endpoint_address;
    3c98:	798d      	ldrb	r5, [r1, #6]

	if (ep & USB_EP_DIR_IN) {
    3c9a:	b26b      	sxtb	r3, r5
    3c9c:	2b00      	cmp	r3, #0
    3c9e:	db26      	blt.n	3cee <udd_ep_transfer_process+0x62>
	ptr_job = udd_ep_get_job(ep);
    3ca0:	0028      	movs	r0, r5
    3ca2:	4b5e      	ldr	r3, [pc, #376]	; (3e1c <udd_ep_transfer_process+0x190>)
    3ca4:	4798      	blx	r3
    3ca6:	0004      	movs	r4, r0
	ep_num = ep & USB_EP_ADDR_MASK;
    3ca8:	270f      	movs	r7, #15
    3caa:	402f      	ands	r7, r5
	ep_size = ptr_job->ep_size;
    3cac:	8a03      	ldrh	r3, [r0, #16]
    3cae:	4698      	mov	r8, r3
	nb_trans = ep_callback_para->received_bytes;
    3cb0:	464b      	mov	r3, r9
    3cb2:	881b      	ldrh	r3, [r3, #0]
    3cb4:	469a      	mov	sl, r3
	if (ptr_job->b_use_out_cache_buffer) {
    3cb6:	7c83      	ldrb	r3, [r0, #18]
    3cb8:	075b      	lsls	r3, r3, #29
    3cba:	d46a      	bmi.n	3d92 <udd_ep_transfer_process+0x106>
	ptr_job->nb_trans += nb_trans;
    3cbc:	68e3      	ldr	r3, [r4, #12]
    3cbe:	4453      	add	r3, sl
    3cc0:	001e      	movs	r6, r3
    3cc2:	60e3      	str	r3, [r4, #12]
	if (ptr_job->nb_trans > ptr_job->buf_size) {
    3cc4:	68a3      	ldr	r3, [r4, #8]
    3cc6:	429e      	cmp	r6, r3
    3cc8:	d800      	bhi.n	3ccc <udd_ep_transfer_process+0x40>
    3cca:	e074      	b.n	3db6 <udd_ep_transfer_process+0x12a>
		ptr_job->nb_trans = ptr_job->buf_size;
    3ccc:	60e3      	str	r3, [r4, #12]
	ptr_job->busy = false;
    3cce:	7ca3      	ldrb	r3, [r4, #18]
    3cd0:	2201      	movs	r2, #1
    3cd2:	4393      	bics	r3, r2
    3cd4:	74a3      	strb	r3, [r4, #18]
	if (NULL != ptr_job->call_trans) {
    3cd6:	6823      	ldr	r3, [r4, #0]
    3cd8:	2b00      	cmp	r3, #0
    3cda:	d003      	beq.n	3ce4 <udd_ep_transfer_process+0x58>
		ptr_job->call_trans(UDD_EP_TRANSFER_OK, ptr_job->nb_trans, ep);
    3cdc:	68e1      	ldr	r1, [r4, #12]
    3cde:	002a      	movs	r2, r5
    3ce0:	2000      	movs	r0, #0
    3ce2:	4798      	blx	r3
		udd_ep_trans_in_next(pointer);
	} else {
		udd_ep_trans_out_next(pointer);
	}
}
    3ce4:	bc1c      	pop	{r2, r3, r4}
    3ce6:	4690      	mov	r8, r2
    3ce8:	4699      	mov	r9, r3
    3cea:	46a2      	mov	sl, r4
    3cec:	bdf0      	pop	{r4, r5, r6, r7, pc}
	ptr_job = udd_ep_get_job(ep);
    3cee:	0028      	movs	r0, r5
    3cf0:	4b4a      	ldr	r3, [pc, #296]	; (3e1c <udd_ep_transfer_process+0x190>)
    3cf2:	4798      	blx	r3
    3cf4:	0004      	movs	r4, r0
	ep_num = ep & USB_EP_ADDR_MASK;
    3cf6:	270f      	movs	r7, #15
    3cf8:	402f      	ands	r7, r5
	ep_size = ptr_job->ep_size;
    3cfa:	8a03      	ldrh	r3, [r0, #16]
    3cfc:	4698      	mov	r8, r3
	ptr_job->nb_trans += nb_trans;
    3cfe:	464b      	mov	r3, r9
    3d00:	885e      	ldrh	r6, [r3, #2]
    3d02:	68c3      	ldr	r3, [r0, #12]
    3d04:	469c      	mov	ip, r3
    3d06:	4466      	add	r6, ip
    3d08:	60c6      	str	r6, [r0, #12]
	if (ptr_job->nb_trans != ptr_job->buf_size) {
    3d0a:	6881      	ldr	r1, [r0, #8]
    3d0c:	428e      	cmp	r6, r1
    3d0e:	d025      	beq.n	3d5c <udd_ep_transfer_process+0xd0>
		next_trans = ptr_job->buf_size - ptr_job->nb_trans;
    3d10:	1b8d      	subs	r5, r1, r6
    3d12:	b2ad      	uxth	r5, r5
		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    3d14:	4b42      	ldr	r3, [pc, #264]	; (3e20 <udd_ep_transfer_process+0x194>)
    3d16:	429d      	cmp	r5, r3
    3d18:	d906      	bls.n	3d28 <udd_ep_transfer_process+0x9c>
			next_trans = UDD_ENDPOINT_MAX_TRANS -(UDD_ENDPOINT_MAX_TRANS % ep_size);
    3d1a:	001d      	movs	r5, r3
    3d1c:	4641      	mov	r1, r8
    3d1e:	0018      	movs	r0, r3
    3d20:	4b40      	ldr	r3, [pc, #256]	; (3e24 <udd_ep_transfer_process+0x198>)
    3d22:	4798      	blx	r3
    3d24:	1a6d      	subs	r5, r5, r1
    3d26:	b2ad      	uxth	r5, r5
		ptr_job->b_shortpacket = ptr_job->b_shortpacket && (0 == (next_trans % ep_size));
    3d28:	7ca2      	ldrb	r2, [r4, #18]
    3d2a:	2300      	movs	r3, #0
    3d2c:	0792      	lsls	r2, r2, #30
    3d2e:	d507      	bpl.n	3d40 <udd_ep_transfer_process+0xb4>
    3d30:	4641      	mov	r1, r8
    3d32:	0028      	movs	r0, r5
    3d34:	4b3c      	ldr	r3, [pc, #240]	; (3e28 <udd_ep_transfer_process+0x19c>)
    3d36:	4798      	blx	r3
    3d38:	b289      	uxth	r1, r1
    3d3a:	424b      	negs	r3, r1
    3d3c:	414b      	adcs	r3, r1
    3d3e:	b2db      	uxtb	r3, r3
    3d40:	005b      	lsls	r3, r3, #1
    3d42:	7ca2      	ldrb	r2, [r4, #18]
    3d44:	2102      	movs	r1, #2
    3d46:	438a      	bics	r2, r1
    3d48:	4313      	orrs	r3, r2
    3d4a:	74a3      	strb	r3, [r4, #18]
		usb_device_endpoint_write_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],next_trans);
    3d4c:	6862      	ldr	r2, [r4, #4]
    3d4e:	1992      	adds	r2, r2, r6
    3d50:	002b      	movs	r3, r5
    3d52:	0039      	movs	r1, r7
    3d54:	4835      	ldr	r0, [pc, #212]	; (3e2c <udd_ep_transfer_process+0x1a0>)
    3d56:	4c36      	ldr	r4, [pc, #216]	; (3e30 <udd_ep_transfer_process+0x1a4>)
    3d58:	47a0      	blx	r4
    3d5a:	e7c3      	b.n	3ce4 <udd_ep_transfer_process+0x58>
	if (ptr_job->b_shortpacket) {
    3d5c:	7c83      	ldrb	r3, [r0, #18]
    3d5e:	079b      	lsls	r3, r3, #30
    3d60:	d40b      	bmi.n	3d7a <udd_ep_transfer_process+0xee>
	ptr_job->busy = false;
    3d62:	7c83      	ldrb	r3, [r0, #18]
    3d64:	2201      	movs	r2, #1
    3d66:	4393      	bics	r3, r2
    3d68:	7483      	strb	r3, [r0, #18]
	if (NULL != ptr_job->call_trans) {
    3d6a:	6803      	ldr	r3, [r0, #0]
    3d6c:	2b00      	cmp	r3, #0
    3d6e:	d0b9      	beq.n	3ce4 <udd_ep_transfer_process+0x58>
		ptr_job->call_trans(UDD_EP_TRANSFER_OK, ptr_job->nb_trans, ep);
    3d70:	002a      	movs	r2, r5
    3d72:	0031      	movs	r1, r6
    3d74:	2000      	movs	r0, #0
    3d76:	4798      	blx	r3
    3d78:	e7b4      	b.n	3ce4 <udd_ep_transfer_process+0x58>
		ptr_job->b_shortpacket = false;
    3d7a:	7c83      	ldrb	r3, [r0, #18]
    3d7c:	2202      	movs	r2, #2
    3d7e:	4393      	bics	r3, r2
    3d80:	7483      	strb	r3, [r0, #18]
		usb_device_endpoint_write_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],0);
    3d82:	6842      	ldr	r2, [r0, #4]
    3d84:	1992      	adds	r2, r2, r6
    3d86:	2300      	movs	r3, #0
    3d88:	0039      	movs	r1, r7
    3d8a:	4828      	ldr	r0, [pc, #160]	; (3e2c <udd_ep_transfer_process+0x1a0>)
    3d8c:	4c28      	ldr	r4, [pc, #160]	; (3e30 <udd_ep_transfer_process+0x1a4>)
    3d8e:	47a0      	blx	r4
    3d90:	e7a8      	b.n	3ce4 <udd_ep_transfer_process+0x58>
		memcpy(&ptr_job->buf[ptr_job->nb_trans], udd_ep_out_cache_buffer[ep_num - 1], ptr_job->buf_size % ep_size);
    3d92:	6843      	ldr	r3, [r0, #4]
    3d94:	68c2      	ldr	r2, [r0, #12]
    3d96:	4694      	mov	ip, r2
    3d98:	4463      	add	r3, ip
    3d9a:	001e      	movs	r6, r3
    3d9c:	4641      	mov	r1, r8
    3d9e:	6880      	ldr	r0, [r0, #8]
    3da0:	4b21      	ldr	r3, [pc, #132]	; (3e28 <udd_ep_transfer_process+0x19c>)
    3da2:	4798      	blx	r3
    3da4:	000a      	movs	r2, r1
    3da6:	1e7b      	subs	r3, r7, #1
    3da8:	019b      	lsls	r3, r3, #6
    3daa:	4922      	ldr	r1, [pc, #136]	; (3e34 <udd_ep_transfer_process+0x1a8>)
    3dac:	1859      	adds	r1, r3, r1
    3dae:	0030      	movs	r0, r6
    3db0:	4b21      	ldr	r3, [pc, #132]	; (3e38 <udd_ep_transfer_process+0x1ac>)
    3db2:	4798      	blx	r3
    3db4:	e782      	b.n	3cbc <udd_ep_transfer_process+0x30>
	if ((nb_trans == ep_callback_para->out_buffer_size) && (ptr_job->nb_trans != ptr_job->buf_size)) {
    3db6:	464a      	mov	r2, r9
    3db8:	8892      	ldrh	r2, [r2, #4]
    3dba:	4552      	cmp	r2, sl
    3dbc:	d000      	beq.n	3dc0 <udd_ep_transfer_process+0x134>
    3dbe:	e786      	b.n	3cce <udd_ep_transfer_process+0x42>
    3dc0:	429e      	cmp	r6, r3
    3dc2:	d100      	bne.n	3dc6 <udd_ep_transfer_process+0x13a>
    3dc4:	e783      	b.n	3cce <udd_ep_transfer_process+0x42>
		next_trans = ptr_job->buf_size - ptr_job->nb_trans;
    3dc6:	1b9b      	subs	r3, r3, r6
    3dc8:	b29d      	uxth	r5, r3
		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    3dca:	4b15      	ldr	r3, [pc, #84]	; (3e20 <udd_ep_transfer_process+0x194>)
    3dcc:	429d      	cmp	r5, r3
    3dce:	d916      	bls.n	3dfe <udd_ep_transfer_process+0x172>
		next_trans = UDD_ENDPOINT_MAX_TRANS - (UDD_ENDPOINT_MAX_TRANS % ep_size);
    3dd0:	001d      	movs	r5, r3
    3dd2:	4641      	mov	r1, r8
    3dd4:	0018      	movs	r0, r3
    3dd6:	4b13      	ldr	r3, [pc, #76]	; (3e24 <udd_ep_transfer_process+0x198>)
    3dd8:	4798      	blx	r3
    3dda:	1a6b      	subs	r3, r5, r1
    3ddc:	b29b      	uxth	r3, r3
		if (next_trans < ep_size) {
    3dde:	4598      	cmp	r8, r3
    3de0:	d914      	bls.n	3e0c <udd_ep_transfer_process+0x180>
			ptr_job->b_use_out_cache_buffer = true;
    3de2:	7ca3      	ldrb	r3, [r4, #18]
    3de4:	2204      	movs	r2, #4
    3de6:	4313      	orrs	r3, r2
    3de8:	74a3      	strb	r3, [r4, #18]
			usb_device_endpoint_read_buffer_job(&usb_device,ep_num,udd_ep_out_cache_buffer[ep_num - 1],ep_size);
    3dea:	1e7a      	subs	r2, r7, #1
    3dec:	0192      	lsls	r2, r2, #6
    3dee:	4b11      	ldr	r3, [pc, #68]	; (3e34 <udd_ep_transfer_process+0x1a8>)
    3df0:	18d2      	adds	r2, r2, r3
    3df2:	4643      	mov	r3, r8
    3df4:	0039      	movs	r1, r7
    3df6:	480d      	ldr	r0, [pc, #52]	; (3e2c <udd_ep_transfer_process+0x1a0>)
    3df8:	4c10      	ldr	r4, [pc, #64]	; (3e3c <udd_ep_transfer_process+0x1b0>)
    3dfa:	47a0      	blx	r4
    3dfc:	e772      	b.n	3ce4 <udd_ep_transfer_process+0x58>
			next_trans -= next_trans % ep_size;
    3dfe:	4641      	mov	r1, r8
    3e00:	0028      	movs	r0, r5
    3e02:	4b09      	ldr	r3, [pc, #36]	; (3e28 <udd_ep_transfer_process+0x19c>)
    3e04:	4798      	blx	r3
    3e06:	1a6b      	subs	r3, r5, r1
    3e08:	b29b      	uxth	r3, r3
    3e0a:	e7e8      	b.n	3dde <udd_ep_transfer_process+0x152>
			usb_device_endpoint_read_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],next_trans);
    3e0c:	6862      	ldr	r2, [r4, #4]
    3e0e:	1992      	adds	r2, r2, r6
    3e10:	0039      	movs	r1, r7
    3e12:	4806      	ldr	r0, [pc, #24]	; (3e2c <udd_ep_transfer_process+0x1a0>)
    3e14:	4c09      	ldr	r4, [pc, #36]	; (3e3c <udd_ep_transfer_process+0x1b0>)
    3e16:	47a0      	blx	r4
    3e18:	e764      	b.n	3ce4 <udd_ep_transfer_process+0x58>
    3e1a:	46c0      	nop			; (mov r8, r8)
    3e1c:	00003c71 	.word	0x00003c71
    3e20:	00001fff 	.word	0x00001fff
    3e24:	00005fd9 	.word	0x00005fd9
    3e28:	00005e05 	.word	0x00005e05
    3e2c:	20000464 	.word	0x20000464
    3e30:	00004e1d 	.word	0x00004e1d
    3e34:	200003e4 	.word	0x200003e4
    3e38:	00007d81 	.word	0x00007d81
    3e3c:	00004e71 	.word	0x00004e71

00003e40 <udd_ctrl_stall_data>:

/**
 * \brief Control Endpoint stall sending data
 */
static void udd_ctrl_stall_data(void)
{
    3e40:	b510      	push	{r4, lr}
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    3e42:	2205      	movs	r2, #5
    3e44:	4b05      	ldr	r3, [pc, #20]	; (3e5c <udd_ctrl_stall_data+0x1c>)
    3e46:	701a      	strb	r2, [r3, #0]

	usb_device_endpoint_set_halt(&usb_device, USB_EP_DIR_IN);
    3e48:	4c05      	ldr	r4, [pc, #20]	; (3e60 <udd_ctrl_stall_data+0x20>)
    3e4a:	2180      	movs	r1, #128	; 0x80
    3e4c:	0020      	movs	r0, r4
    3e4e:	4b05      	ldr	r3, [pc, #20]	; (3e64 <udd_ctrl_stall_data+0x24>)
    3e50:	4798      	blx	r3
	usb_device_endpoint_clear_halt(&usb_device, USB_EP_DIR_OUT);
    3e52:	2100      	movs	r1, #0
    3e54:	0020      	movs	r0, r4
    3e56:	4b04      	ldr	r3, [pc, #16]	; (3e68 <udd_ctrl_stall_data+0x28>)
    3e58:	4798      	blx	r3
}
    3e5a:	bd10      	pop	{r4, pc}
    3e5c:	200001ca 	.word	0x200001ca
    3e60:	20000464 	.word	0x20000464
    3e64:	00004d71 	.word	0x00004d71
    3e68:	00004d97 	.word	0x00004d97

00003e6c <_usb_device_lpm_suspend>:
#endif
}

#ifdef  USB_DEVICE_LPM_SUPPORT
static void _usb_device_lpm_suspend(struct usb_module *module_inst, void *pointer)
{
    3e6c:	b570      	push	{r4, r5, r6, lr}
	dbg_print("LPM_SUSP\n");

	uint32_t *lpm_wakeup_enable;
	lpm_wakeup_enable = (uint32_t *)pointer;

	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    3e6e:	4c08      	ldr	r4, [pc, #32]	; (3e90 <_usb_device_lpm_suspend+0x24>)
    3e70:	2106      	movs	r1, #6
    3e72:	0020      	movs	r0, r4
    3e74:	4d07      	ldr	r5, [pc, #28]	; (3e94 <_usb_device_lpm_suspend+0x28>)
    3e76:	47a8      	blx	r5
	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    3e78:	2104      	movs	r1, #4
    3e7a:	0020      	movs	r0, r4
    3e7c:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    3e7e:	2102      	movs	r1, #2
    3e80:	0020      	movs	r0, r4
    3e82:	4b05      	ldr	r3, [pc, #20]	; (3e98 <_usb_device_lpm_suspend+0x2c>)
    3e84:	4798      	blx	r3

//#warning Here the sleep mode must be choose to have a DFLL startup time < bmAttribut.HIRD
	udd_sleep_mode(UDD_STATE_SUSPEND_LPM);  // Enter in LPM SUSPEND mode
    3e86:	2002      	movs	r0, #2
    3e88:	4b04      	ldr	r3, [pc, #16]	; (3e9c <_usb_device_lpm_suspend+0x30>)
    3e8a:	4798      	blx	r3
	}
	if (!(*lpm_wakeup_enable)) {
		UDC_REMOTEWAKEUP_LPM_DISABLE();
	}
	UDC_SUSPEND_LPM_EVENT();
}
    3e8c:	bd70      	pop	{r4, r5, r6, pc}
    3e8e:	46c0      	nop			; (mov r8, r8)
    3e90:	20000464 	.word	0x20000464
    3e94:	000048b1 	.word	0x000048b1
    3e98:	00004891 	.word	0x00004891
    3e9c:	00003bc5 	.word	0x00003bc5

00003ea0 <_usb_on_wakeup>:
 * \brief Control endpoint Wakeup callback function
 * \param[in] module_inst Pointer to USB module instance
 * \param[in] pointer Pointer to the callback parameter from driver layer.
 */
static void _usb_on_wakeup(struct usb_module *module_inst, void *pointer)
{
    3ea0:	b570      	push	{r4, r5, r6, lr}
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    3ea2:	4b13      	ldr	r3, [pc, #76]	; (3ef0 <_usb_on_wakeup+0x50>)
    3ea4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    3ea6:	069b      	lsls	r3, r3, #26
    3ea8:	d41c      	bmi.n	3ee4 <_usb_on_wakeup+0x44>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    3eaa:	4911      	ldr	r1, [pc, #68]	; (3ef0 <_usb_on_wakeup+0x50>)
    3eac:	22d0      	movs	r2, #208	; 0xd0
    3eae:	68cb      	ldr	r3, [r1, #12]
    3eb0:	4013      	ands	r3, r2
    3eb2:	2bd0      	cmp	r3, #208	; 0xd0
    3eb4:	d1fb      	bne.n	3eae <_usb_on_wakeup+0xe>
	udd_wait_clock_ready();

	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    3eb6:	4c0f      	ldr	r4, [pc, #60]	; (3ef4 <_usb_on_wakeup+0x54>)
    3eb8:	2102      	movs	r1, #2
    3eba:	0020      	movs	r0, r4
    3ebc:	4b0e      	ldr	r3, [pc, #56]	; (3ef8 <_usb_on_wakeup+0x58>)
    3ebe:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    3ec0:	2104      	movs	r1, #4
    3ec2:	0020      	movs	r0, r4
    3ec4:	4d0d      	ldr	r5, [pc, #52]	; (3efc <_usb_on_wakeup+0x5c>)
    3ec6:	47a8      	blx	r5
#ifdef  USB_DEVICE_LPM_SUPPORT
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP, _usb_device_lpm_suspend);
    3ec8:	4a0d      	ldr	r2, [pc, #52]	; (3f00 <_usb_on_wakeup+0x60>)
    3eca:	2106      	movs	r1, #6
    3ecc:	0020      	movs	r0, r4
    3ece:	4b0d      	ldr	r3, [pc, #52]	; (3f04 <_usb_on_wakeup+0x64>)
    3ed0:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    3ed2:	2106      	movs	r1, #6
    3ed4:	0020      	movs	r0, r4
    3ed6:	47a8      	blx	r5
#endif
	udd_sleep_mode(UDD_STATE_IDLE);
    3ed8:	2003      	movs	r0, #3
    3eda:	4b0b      	ldr	r3, [pc, #44]	; (3f08 <_usb_on_wakeup+0x68>)
    3edc:	4798      	blx	r3
#ifdef UDC_RESUME_EVENT
	UDC_RESUME_EVENT();
    3ede:	4b0b      	ldr	r3, [pc, #44]	; (3f0c <_usb_on_wakeup+0x6c>)
    3ee0:	4798      	blx	r3
#endif
}
    3ee2:	bd70      	pop	{r4, r5, r6, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    3ee4:	4902      	ldr	r1, [pc, #8]	; (3ef0 <_usb_on_wakeup+0x50>)
    3ee6:	2210      	movs	r2, #16
    3ee8:	68cb      	ldr	r3, [r1, #12]
    3eea:	421a      	tst	r2, r3
    3eec:	d0fc      	beq.n	3ee8 <_usb_on_wakeup+0x48>
    3eee:	e7e2      	b.n	3eb6 <_usb_on_wakeup+0x16>
    3ef0:	40000800 	.word	0x40000800
    3ef4:	20000464 	.word	0x20000464
    3ef8:	000048b1 	.word	0x000048b1
    3efc:	00004891 	.word	0x00004891
    3f00:	00003e6d 	.word	0x00003e6d
    3f04:	0000486d 	.word	0x0000486d
    3f08:	00003bc5 	.word	0x00003bc5
    3f0c:	00005c91 	.word	0x00005c91

00003f10 <_usb_on_bus_reset>:
{
    3f10:	b570      	push	{r4, r5, r6, lr}
    3f12:	b082      	sub	sp, #8
    3f14:	0004      	movs	r4, r0
	udc_reset();
    3f16:	4b1e      	ldr	r3, [pc, #120]	; (3f90 <_usb_on_bus_reset+0x80>)
    3f18:	4798      	blx	r3
 * \param module_inst Pointer to USB device module instance
 * \param address     USB device address value
 */
static inline void usb_device_set_address(struct usb_module *module_inst, uint8_t address)
{
	module_inst->hw->DEVICE.DADD.reg = USB_DEVICE_DADD_ADDEN | address;
    3f1a:	2380      	movs	r3, #128	; 0x80
    3f1c:	6822      	ldr	r2, [r4, #0]
    3f1e:	7293      	strb	r3, [r2, #10]
	 usb_device_endpoint_get_config_defaults(&config_ep0);
    3f20:	ad01      	add	r5, sp, #4
    3f22:	0028      	movs	r0, r5
    3f24:	4b1b      	ldr	r3, [pc, #108]	; (3f94 <_usb_on_bus_reset+0x84>)
    3f26:	4798      	blx	r3
	 config_ep0.ep_size = (enum usb_endpoint_size)(32 - clz(((uint32_t)Min(Max(USB_DEVICE_EP_CTRL_SIZE, 8), 1024) << 1) - 1) - 1 - 3);
    3f28:	2600      	movs	r6, #0
    3f2a:	706e      	strb	r6, [r5, #1]
	 usb_device_endpoint_set_config(module_inst,&config_ep0);
    3f2c:	0029      	movs	r1, r5
    3f2e:	0020      	movs	r0, r4
    3f30:	4b19      	ldr	r3, [pc, #100]	; (3f98 <_usb_on_bus_reset+0x88>)
    3f32:	4798      	blx	r3
	 usb_device_endpoint_setup_buffer_job(module_inst,udd_ctrl_buffer);
    3f34:	4919      	ldr	r1, [pc, #100]	; (3f9c <_usb_on_bus_reset+0x8c>)
    3f36:	0020      	movs	r0, r4
    3f38:	4b19      	ldr	r3, [pc, #100]	; (3fa0 <_usb_on_bus_reset+0x90>)
    3f3a:	4798      	blx	r3
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_RXSTP, _usb_ep0_on_setup );
    3f3c:	4b19      	ldr	r3, [pc, #100]	; (3fa4 <_usb_on_bus_reset+0x94>)
    3f3e:	2202      	movs	r2, #2
    3f40:	2100      	movs	r1, #0
    3f42:	0020      	movs	r0, r4
    3f44:	4d18      	ldr	r5, [pc, #96]	; (3fa8 <_usb_on_bus_reset+0x98>)
    3f46:	47a8      	blx	r5
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT,_usb_ep0_on_tansfer_ok );
    3f48:	4b18      	ldr	r3, [pc, #96]	; (3fac <_usb_on_bus_reset+0x9c>)
    3f4a:	2200      	movs	r2, #0
    3f4c:	2100      	movs	r1, #0
    3f4e:	0020      	movs	r0, r4
    3f50:	47a8      	blx	r5
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL,_usb_ep0_on_tansfer_fail );
    3f52:	4b17      	ldr	r3, [pc, #92]	; (3fb0 <_usb_on_bus_reset+0xa0>)
    3f54:	2201      	movs	r2, #1
    3f56:	2100      	movs	r1, #0
    3f58:	0020      	movs	r0, r4
    3f5a:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_RXSTP);
    3f5c:	2202      	movs	r2, #2
    3f5e:	2100      	movs	r1, #0
    3f60:	0020      	movs	r0, r4
    3f62:	4d14      	ldr	r5, [pc, #80]	; (3fb4 <_usb_on_bus_reset+0xa4>)
    3f64:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    3f66:	2200      	movs	r2, #0
    3f68:	2100      	movs	r1, #0
    3f6a:	0020      	movs	r0, r4
    3f6c:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL);
    3f6e:	2201      	movs	r2, #1
    3f70:	2100      	movs	r1, #0
    3f72:	0020      	movs	r0, r4
    3f74:	47a8      	blx	r5
 * \param lpm_mode    LPM mode
 */
static inline void usb_device_set_lpm_mode(struct usb_module *module_inst,
		enum usb_device_lpm_mode lpm_mode)
{
	module_inst->hw->DEVICE.CTRLB.bit.LPMHDSK = lpm_mode;
    3f76:	6821      	ldr	r1, [r4, #0]
    3f78:	890b      	ldrh	r3, [r1, #8]
    3f7a:	4a0f      	ldr	r2, [pc, #60]	; (3fb8 <_usb_on_bus_reset+0xa8>)
    3f7c:	401a      	ands	r2, r3
    3f7e:	2380      	movs	r3, #128	; 0x80
    3f80:	00db      	lsls	r3, r3, #3
    3f82:	4313      	orrs	r3, r2
    3f84:	810b      	strh	r3, [r1, #8]
	 udd_ep_control_state = UDD_EPCTRL_SETUP;
    3f86:	4b0d      	ldr	r3, [pc, #52]	; (3fbc <_usb_on_bus_reset+0xac>)
    3f88:	701e      	strb	r6, [r3, #0]
}
    3f8a:	b002      	add	sp, #8
    3f8c:	bd70      	pop	{r4, r5, r6, pc}
    3f8e:	46c0      	nop			; (mov r8, r8)
    3f90:	00001695 	.word	0x00001695
    3f94:	00004abd 	.word	0x00004abd
    3f98:	00004acd 	.word	0x00004acd
    3f9c:	200005e4 	.word	0x200005e4
    3fa0:	00004ec1 	.word	0x00004ec1
    3fa4:	000040f9 	.word	0x000040f9
    3fa8:	000048cd 	.word	0x000048cd
    3fac:	00004415 	.word	0x00004415
    3fb0:	00003ffd 	.word	0x00003ffd
    3fb4:	0000491d 	.word	0x0000491d
    3fb8:	fffff3ff 	.word	0xfffff3ff
    3fbc:	200001ca 	.word	0x200001ca

00003fc0 <udd_ctrl_send_zlp_in>:
{
    3fc0:	b510      	push	{r4, lr}
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
    3fc2:	2203      	movs	r2, #3
    3fc4:	4b07      	ldr	r3, [pc, #28]	; (3fe4 <udd_ctrl_send_zlp_in+0x24>)
    3fc6:	701a      	strb	r2, [r3, #0]
	usb_device_endpoint_setup_buffer_job(&usb_device,udd_ctrl_buffer);
    3fc8:	4c07      	ldr	r4, [pc, #28]	; (3fe8 <udd_ctrl_send_zlp_in+0x28>)
    3fca:	4908      	ldr	r1, [pc, #32]	; (3fec <udd_ctrl_send_zlp_in+0x2c>)
    3fcc:	0020      	movs	r0, r4
    3fce:	4b08      	ldr	r3, [pc, #32]	; (3ff0 <udd_ctrl_send_zlp_in+0x30>)
    3fd0:	4798      	blx	r3
	usb_device_endpoint_write_buffer_job(&usb_device,0,udd_g_ctrlreq.payload,0);
    3fd2:	4b08      	ldr	r3, [pc, #32]	; (3ff4 <udd_ctrl_send_zlp_in+0x34>)
    3fd4:	689a      	ldr	r2, [r3, #8]
    3fd6:	2300      	movs	r3, #0
    3fd8:	2100      	movs	r1, #0
    3fda:	0020      	movs	r0, r4
    3fdc:	4c06      	ldr	r4, [pc, #24]	; (3ff8 <udd_ctrl_send_zlp_in+0x38>)
    3fde:	47a0      	blx	r4
}
    3fe0:	bd10      	pop	{r4, pc}
    3fe2:	46c0      	nop			; (mov r8, r8)
    3fe4:	200001ca 	.word	0x200001ca
    3fe8:	20000464 	.word	0x20000464
    3fec:	200005e4 	.word	0x200005e4
    3ff0:	00004ec1 	.word	0x00004ec1
    3ff4:	200005cc 	.word	0x200005cc
    3ff8:	00004e1d 	.word	0x00004e1d

00003ffc <_usb_ep0_on_tansfer_fail>:
{
    3ffc:	b510      	push	{r4, lr}
	if(ep_callback_para->endpoint_address & USB_EP_DIR_IN) {
    3ffe:	7989      	ldrb	r1, [r1, #6]
    4000:	b24b      	sxtb	r3, r1
    4002:	2b00      	cmp	r3, #0
    4004:	db06      	blt.n	4014 <_usb_ep0_on_tansfer_fail+0x18>
	if (UDD_EPCTRL_DATA_IN == udd_ep_control_state) {
    4006:	4b0e      	ldr	r3, [pc, #56]	; (4040 <_usb_ep0_on_tansfer_fail+0x44>)
    4008:	781b      	ldrb	r3, [r3, #0]
    400a:	2b02      	cmp	r3, #2
    400c:	d00f      	beq.n	402e <_usb_ep0_on_tansfer_fail+0x32>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
    400e:	2b03      	cmp	r3, #3
    4010:	d011      	beq.n	4036 <_usb_ep0_on_tansfer_fail+0x3a>
}
    4012:	bd10      	pop	{r4, pc}
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
    4014:	4b0a      	ldr	r3, [pc, #40]	; (4040 <_usb_ep0_on_tansfer_fail+0x44>)
    4016:	781b      	ldrb	r3, [r3, #0]
    4018:	2b01      	cmp	r3, #1
    401a:	d005      	beq.n	4028 <_usb_ep0_on_tansfer_fail+0x2c>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
    401c:	2b04      	cmp	r3, #4
    401e:	d1f8      	bne.n	4012 <_usb_ep0_on_tansfer_fail+0x16>
		usb_device_endpoint_set_halt(&usb_device, ep_callback_para->endpoint_address);
    4020:	4808      	ldr	r0, [pc, #32]	; (4044 <_usb_ep0_on_tansfer_fail+0x48>)
    4022:	4b09      	ldr	r3, [pc, #36]	; (4048 <_usb_ep0_on_tansfer_fail+0x4c>)
    4024:	4798      	blx	r3
    4026:	e7f4      	b.n	4012 <_usb_ep0_on_tansfer_fail+0x16>
		udd_ctrl_send_zlp_in();
    4028:	4b08      	ldr	r3, [pc, #32]	; (404c <_usb_ep0_on_tansfer_fail+0x50>)
    402a:	4798      	blx	r3
    402c:	e7f1      	b.n	4012 <_usb_ep0_on_tansfer_fail+0x16>
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
    402e:	2204      	movs	r2, #4
    4030:	4b03      	ldr	r3, [pc, #12]	; (4040 <_usb_ep0_on_tansfer_fail+0x44>)
    4032:	701a      	strb	r2, [r3, #0]
    4034:	e7ed      	b.n	4012 <_usb_ep0_on_tansfer_fail+0x16>
		usb_device_endpoint_set_halt(&usb_device, ep_callback_para->endpoint_address);
    4036:	4803      	ldr	r0, [pc, #12]	; (4044 <_usb_ep0_on_tansfer_fail+0x48>)
    4038:	4b03      	ldr	r3, [pc, #12]	; (4048 <_usb_ep0_on_tansfer_fail+0x4c>)
    403a:	4798      	blx	r3
}
    403c:	e7e9      	b.n	4012 <_usb_ep0_on_tansfer_fail+0x16>
    403e:	46c0      	nop			; (mov r8, r8)
    4040:	200001ca 	.word	0x200001ca
    4044:	20000464 	.word	0x20000464
    4048:	00004d71 	.word	0x00004d71
    404c:	00003fc1 	.word	0x00003fc1

00004050 <udd_ctrl_in_sent>:
{
    4050:	b570      	push	{r4, r5, r6, lr}
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
    4052:	4b20      	ldr	r3, [pc, #128]	; (40d4 <udd_ctrl_in_sent+0x84>)
    4054:	881b      	ldrh	r3, [r3, #0]
    4056:	4a20      	ldr	r2, [pc, #128]	; (40d8 <udd_ctrl_in_sent+0x88>)
    4058:	8994      	ldrh	r4, [r2, #12]
    405a:	1ae4      	subs	r4, r4, r3
    405c:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
    405e:	2c00      	cmp	r4, #0
    4060:	d118      	bne.n	4094 <udd_ctrl_in_sent+0x44>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
    4062:	4a1e      	ldr	r2, [pc, #120]	; (40dc <udd_ctrl_in_sent+0x8c>)
    4064:	8811      	ldrh	r1, [r2, #0]
    4066:	185b      	adds	r3, r3, r1
    4068:	b29b      	uxth	r3, r3
    406a:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_nb_trans) || b_shortpacket) {
    406c:	4a1a      	ldr	r2, [pc, #104]	; (40d8 <udd_ctrl_in_sent+0x88>)
    406e:	88d2      	ldrh	r2, [r2, #6]
    4070:	429a      	cmp	r2, r3
    4072:	d023      	beq.n	40bc <udd_ctrl_in_sent+0x6c>
    4074:	4b1a      	ldr	r3, [pc, #104]	; (40e0 <udd_ctrl_in_sent+0x90>)
    4076:	781b      	ldrb	r3, [r3, #0]
    4078:	2b00      	cmp	r3, #0
    407a:	d11f      	bne.n	40bc <udd_ctrl_in_sent+0x6c>
		if ((!udd_g_ctrlreq.over_under_run) || (!udd_g_ctrlreq.over_under_run())) {
    407c:	4b16      	ldr	r3, [pc, #88]	; (40d8 <udd_ctrl_in_sent+0x88>)
    407e:	695b      	ldr	r3, [r3, #20]
    4080:	2b00      	cmp	r3, #0
    4082:	d023      	beq.n	40cc <udd_ctrl_in_sent+0x7c>
    4084:	4798      	blx	r3
    4086:	2800      	cmp	r0, #0
    4088:	d020      	beq.n	40cc <udd_ctrl_in_sent+0x7c>
			udd_ctrl_payload_nb_trans = 0;
    408a:	2200      	movs	r2, #0
    408c:	4b11      	ldr	r3, [pc, #68]	; (40d4 <udd_ctrl_in_sent+0x84>)
    408e:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
    4090:	4b11      	ldr	r3, [pc, #68]	; (40d8 <udd_ctrl_in_sent+0x88>)
    4092:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
    4094:	2c07      	cmp	r4, #7
    4096:	d919      	bls.n	40cc <udd_ctrl_in_sent+0x7c>
		b_shortpacket = false;
    4098:	2200      	movs	r2, #0
    409a:	4b11      	ldr	r3, [pc, #68]	; (40e0 <udd_ctrl_in_sent+0x90>)
    409c:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
    409e:	2408      	movs	r4, #8
	usb_device_endpoint_write_buffer_job(&usb_device,0,udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans,nb_remain);
    40a0:	4d0c      	ldr	r5, [pc, #48]	; (40d4 <udd_ctrl_in_sent+0x84>)
    40a2:	882b      	ldrh	r3, [r5, #0]
    40a4:	4a0c      	ldr	r2, [pc, #48]	; (40d8 <udd_ctrl_in_sent+0x88>)
    40a6:	6892      	ldr	r2, [r2, #8]
    40a8:	18d2      	adds	r2, r2, r3
    40aa:	0023      	movs	r3, r4
    40ac:	2100      	movs	r1, #0
    40ae:	480d      	ldr	r0, [pc, #52]	; (40e4 <udd_ctrl_in_sent+0x94>)
    40b0:	4e0d      	ldr	r6, [pc, #52]	; (40e8 <udd_ctrl_in_sent+0x98>)
    40b2:	47b0      	blx	r6
	udd_ctrl_payload_nb_trans += nb_remain;
    40b4:	882b      	ldrh	r3, [r5, #0]
    40b6:	18e4      	adds	r4, r4, r3
    40b8:	802c      	strh	r4, [r5, #0]
}
    40ba:	bd70      	pop	{r4, r5, r6, pc}
			udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
    40bc:	2204      	movs	r2, #4
    40be:	4b0b      	ldr	r3, [pc, #44]	; (40ec <udd_ctrl_in_sent+0x9c>)
    40c0:	701a      	strb	r2, [r3, #0]
			usb_device_endpoint_setup_buffer_job(&usb_device,udd_ctrl_buffer);
    40c2:	490b      	ldr	r1, [pc, #44]	; (40f0 <udd_ctrl_in_sent+0xa0>)
    40c4:	4807      	ldr	r0, [pc, #28]	; (40e4 <udd_ctrl_in_sent+0x94>)
    40c6:	4b0b      	ldr	r3, [pc, #44]	; (40f4 <udd_ctrl_in_sent+0xa4>)
    40c8:	4798      	blx	r3
			return;
    40ca:	e7f6      	b.n	40ba <udd_ctrl_in_sent+0x6a>
		b_shortpacket = true;
    40cc:	2201      	movs	r2, #1
    40ce:	4b04      	ldr	r3, [pc, #16]	; (40e0 <udd_ctrl_in_sent+0x90>)
    40d0:	701a      	strb	r2, [r3, #0]
    40d2:	e7e5      	b.n	40a0 <udd_ctrl_in_sent+0x50>
    40d4:	200001c6 	.word	0x200001c6
    40d8:	200005cc 	.word	0x200005cc
    40dc:	200001c8 	.word	0x200001c8
    40e0:	200001c4 	.word	0x200001c4
    40e4:	20000464 	.word	0x20000464
    40e8:	00004e1d 	.word	0x00004e1d
    40ec:	200001ca 	.word	0x200001ca
    40f0:	200005e4 	.word	0x200005e4
    40f4:	00004ec1 	.word	0x00004ec1

000040f8 <_usb_ep0_on_setup>:
{
    40f8:	b510      	push	{r4, lr}
    40fa:	000c      	movs	r4, r1
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
    40fc:	4b2c      	ldr	r3, [pc, #176]	; (41b0 <_usb_ep0_on_setup+0xb8>)
    40fe:	781b      	ldrb	r3, [r3, #0]
    4100:	2b00      	cmp	r3, #0
    4102:	d007      	beq.n	4114 <_usb_ep0_on_setup+0x1c>
		if (NULL != udd_g_ctrlreq.callback) {
    4104:	4b2b      	ldr	r3, [pc, #172]	; (41b4 <_usb_ep0_on_setup+0xbc>)
    4106:	691b      	ldr	r3, [r3, #16]
    4108:	2b00      	cmp	r3, #0
    410a:	d000      	beq.n	410e <_usb_ep0_on_setup+0x16>
			udd_g_ctrlreq.callback();
    410c:	4798      	blx	r3
		udd_ep_control_state = UDD_EPCTRL_SETUP;
    410e:	2200      	movs	r2, #0
    4110:	4b27      	ldr	r3, [pc, #156]	; (41b0 <_usb_ep0_on_setup+0xb8>)
    4112:	701a      	strb	r2, [r3, #0]
	if ( 8 != ep_callback_para->received_bytes) {
    4114:	8823      	ldrh	r3, [r4, #0]
    4116:	2b08      	cmp	r3, #8
    4118:	d002      	beq.n	4120 <_usb_ep0_on_setup+0x28>
		udd_ctrl_stall_data();
    411a:	4b27      	ldr	r3, [pc, #156]	; (41b8 <_usb_ep0_on_setup+0xc0>)
    411c:	4798      	blx	r3
}
    411e:	bd10      	pop	{r4, pc}
	udd_g_ctrlreq.req.bmRequestType = udd_ctrl_buffer[0];
    4120:	4a24      	ldr	r2, [pc, #144]	; (41b4 <_usb_ep0_on_setup+0xbc>)
    4122:	4b26      	ldr	r3, [pc, #152]	; (41bc <_usb_ep0_on_setup+0xc4>)
    4124:	7819      	ldrb	r1, [r3, #0]
    4126:	7011      	strb	r1, [r2, #0]
	udd_g_ctrlreq.req.bRequest = udd_ctrl_buffer[1];
    4128:	7859      	ldrb	r1, [r3, #1]
    412a:	7051      	strb	r1, [r2, #1]
	udd_g_ctrlreq.req.wValue = ((uint16_t)(udd_ctrl_buffer[3]) << 8) + udd_ctrl_buffer[2];
    412c:	78d8      	ldrb	r0, [r3, #3]
    412e:	0200      	lsls	r0, r0, #8
    4130:	7899      	ldrb	r1, [r3, #2]
    4132:	1809      	adds	r1, r1, r0
    4134:	8051      	strh	r1, [r2, #2]
	udd_g_ctrlreq.req.wIndex = ((uint16_t)(udd_ctrl_buffer[5]) << 8) + udd_ctrl_buffer[4];
    4136:	7958      	ldrb	r0, [r3, #5]
    4138:	0200      	lsls	r0, r0, #8
    413a:	7919      	ldrb	r1, [r3, #4]
    413c:	1809      	adds	r1, r1, r0
    413e:	8091      	strh	r1, [r2, #4]
	udd_g_ctrlreq.req.wLength = ((uint16_t)(udd_ctrl_buffer[7]) << 8) + udd_ctrl_buffer[6];
    4140:	79d9      	ldrb	r1, [r3, #7]
    4142:	0209      	lsls	r1, r1, #8
    4144:	799b      	ldrb	r3, [r3, #6]
    4146:	185b      	adds	r3, r3, r1
    4148:	80d3      	strh	r3, [r2, #6]
		if (false == udc_process_setup()) {
    414a:	4b1d      	ldr	r3, [pc, #116]	; (41c0 <_usb_ep0_on_setup+0xc8>)
    414c:	4798      	blx	r3
    414e:	2800      	cmp	r0, #0
    4150:	d016      	beq.n	4180 <_usb_ep0_on_setup+0x88>
		} else if (Udd_setup_is_in()) {
    4152:	4b18      	ldr	r3, [pc, #96]	; (41b4 <_usb_ep0_on_setup+0xbc>)
    4154:	781b      	ldrb	r3, [r3, #0]
    4156:	2b7f      	cmp	r3, #127	; 0x7f
    4158:	d815      	bhi.n	4186 <_usb_ep0_on_setup+0x8e>
			if(0 == udd_g_ctrlreq.req.wLength) {
    415a:	4b16      	ldr	r3, [pc, #88]	; (41b4 <_usb_ep0_on_setup+0xbc>)
    415c:	88db      	ldrh	r3, [r3, #6]
    415e:	2b00      	cmp	r3, #0
    4160:	d022      	beq.n	41a8 <_usb_ep0_on_setup+0xb0>
				udd_ctrl_prev_payload_nb_trans = 0;
    4162:	2300      	movs	r3, #0
    4164:	4a17      	ldr	r2, [pc, #92]	; (41c4 <_usb_ep0_on_setup+0xcc>)
    4166:	8013      	strh	r3, [r2, #0]
				udd_ctrl_payload_nb_trans = 0;
    4168:	4a17      	ldr	r2, [pc, #92]	; (41c8 <_usb_ep0_on_setup+0xd0>)
    416a:	8013      	strh	r3, [r2, #0]
				udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
    416c:	2201      	movs	r2, #1
    416e:	4b10      	ldr	r3, [pc, #64]	; (41b0 <_usb_ep0_on_setup+0xb8>)
    4170:	701a      	strb	r2, [r3, #0]
				usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    4172:	2308      	movs	r3, #8
    4174:	4a11      	ldr	r2, [pc, #68]	; (41bc <_usb_ep0_on_setup+0xc4>)
    4176:	2100      	movs	r1, #0
    4178:	4814      	ldr	r0, [pc, #80]	; (41cc <_usb_ep0_on_setup+0xd4>)
    417a:	4c15      	ldr	r4, [pc, #84]	; (41d0 <_usb_ep0_on_setup+0xd8>)
    417c:	47a0      	blx	r4
    417e:	e7ce      	b.n	411e <_usb_ep0_on_setup+0x26>
			udd_ctrl_stall_data();
    4180:	4b0d      	ldr	r3, [pc, #52]	; (41b8 <_usb_ep0_on_setup+0xc0>)
    4182:	4798      	blx	r3
			return;
    4184:	e7cb      	b.n	411e <_usb_ep0_on_setup+0x26>
			udd_ctrl_prev_payload_nb_trans = 0;
    4186:	2300      	movs	r3, #0
    4188:	4a0e      	ldr	r2, [pc, #56]	; (41c4 <_usb_ep0_on_setup+0xcc>)
    418a:	8013      	strh	r3, [r2, #0]
			udd_ctrl_payload_nb_trans = 0;
    418c:	4a0e      	ldr	r2, [pc, #56]	; (41c8 <_usb_ep0_on_setup+0xd0>)
    418e:	8013      	strh	r3, [r2, #0]
			udd_ep_control_state = UDD_EPCTRL_DATA_IN;
    4190:	2202      	movs	r2, #2
    4192:	4b07      	ldr	r3, [pc, #28]	; (41b0 <_usb_ep0_on_setup+0xb8>)
    4194:	701a      	strb	r2, [r3, #0]
			usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    4196:	2308      	movs	r3, #8
    4198:	4a08      	ldr	r2, [pc, #32]	; (41bc <_usb_ep0_on_setup+0xc4>)
    419a:	2100      	movs	r1, #0
    419c:	480b      	ldr	r0, [pc, #44]	; (41cc <_usb_ep0_on_setup+0xd4>)
    419e:	4c0c      	ldr	r4, [pc, #48]	; (41d0 <_usb_ep0_on_setup+0xd8>)
    41a0:	47a0      	blx	r4
			udd_ctrl_in_sent();
    41a2:	4b0c      	ldr	r3, [pc, #48]	; (41d4 <_usb_ep0_on_setup+0xdc>)
    41a4:	4798      	blx	r3
    41a6:	e7ba      	b.n	411e <_usb_ep0_on_setup+0x26>
				udd_ctrl_send_zlp_in();
    41a8:	4b0b      	ldr	r3, [pc, #44]	; (41d8 <_usb_ep0_on_setup+0xe0>)
    41aa:	4798      	blx	r3
				return;
    41ac:	e7b7      	b.n	411e <_usb_ep0_on_setup+0x26>
    41ae:	46c0      	nop			; (mov r8, r8)
    41b0:	200001ca 	.word	0x200001ca
    41b4:	200005cc 	.word	0x200005cc
    41b8:	00003e41 	.word	0x00003e41
    41bc:	200005e4 	.word	0x200005e4
    41c0:	00001739 	.word	0x00001739
    41c4:	200001c8 	.word	0x200001c8
    41c8:	200001c6 	.word	0x200001c6
    41cc:	20000464 	.word	0x20000464
    41d0:	00004e71 	.word	0x00004e71
    41d4:	00004051 	.word	0x00004051
    41d8:	00003fc1 	.word	0x00003fc1

000041dc <_usb_on_sof_notify>:
{
    41dc:	b510      	push	{r4, lr}
	udc_sof_notify();
    41de:	4b02      	ldr	r3, [pc, #8]	; (41e8 <_usb_on_sof_notify+0xc>)
    41e0:	4798      	blx	r3
	UDC_SOF_EVENT();
    41e2:	4b02      	ldr	r3, [pc, #8]	; (41ec <_usb_on_sof_notify+0x10>)
    41e4:	4798      	blx	r3
}
    41e6:	bd10      	pop	{r4, pc}
    41e8:	000016f5 	.word	0x000016f5
    41ec:	00005c9d 	.word	0x00005c9d

000041f0 <_usb_on_suspend>:
{
    41f0:	b510      	push	{r4, lr}
	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    41f2:	4c07      	ldr	r4, [pc, #28]	; (4210 <_usb_on_suspend+0x20>)
    41f4:	2104      	movs	r1, #4
    41f6:	0020      	movs	r0, r4
    41f8:	4b06      	ldr	r3, [pc, #24]	; (4214 <_usb_on_suspend+0x24>)
    41fa:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    41fc:	2102      	movs	r1, #2
    41fe:	0020      	movs	r0, r4
    4200:	4b05      	ldr	r3, [pc, #20]	; (4218 <_usb_on_suspend+0x28>)
    4202:	4798      	blx	r3
	udd_sleep_mode(UDD_STATE_SUSPEND);
    4204:	2001      	movs	r0, #1
    4206:	4b05      	ldr	r3, [pc, #20]	; (421c <_usb_on_suspend+0x2c>)
    4208:	4798      	blx	r3
	UDC_SUSPEND_EVENT();
    420a:	4b05      	ldr	r3, [pc, #20]	; (4220 <_usb_on_suspend+0x30>)
    420c:	4798      	blx	r3
}
    420e:	bd10      	pop	{r4, pc}
    4210:	20000464 	.word	0x20000464
    4214:	000048b1 	.word	0x000048b1
    4218:	00004891 	.word	0x00004891
    421c:	00003bc5 	.word	0x00003bc5
    4220:	00005c85 	.word	0x00005c85

00004224 <udd_ep_abort>:
{
    4224:	b510      	push	{r4, lr}
    4226:	0004      	movs	r4, r0
	usb_device_endpoint_abort_job(&usb_device, ep);
    4228:	0001      	movs	r1, r0
    422a:	480a      	ldr	r0, [pc, #40]	; (4254 <udd_ep_abort+0x30>)
    422c:	4b0a      	ldr	r3, [pc, #40]	; (4258 <udd_ep_abort+0x34>)
    422e:	4798      	blx	r3
	ptr_job = udd_ep_get_job(ep);
    4230:	0020      	movs	r0, r4
    4232:	4b0a      	ldr	r3, [pc, #40]	; (425c <udd_ep_abort+0x38>)
    4234:	4798      	blx	r3
	if (!ptr_job->busy) {
    4236:	7c83      	ldrb	r3, [r0, #18]
    4238:	07db      	lsls	r3, r3, #31
    423a:	d50a      	bpl.n	4252 <udd_ep_abort+0x2e>
	ptr_job->busy = false;
    423c:	7c83      	ldrb	r3, [r0, #18]
    423e:	2201      	movs	r2, #1
    4240:	4393      	bics	r3, r2
    4242:	7483      	strb	r3, [r0, #18]
	if (NULL != ptr_job->call_trans) {
    4244:	6803      	ldr	r3, [r0, #0]
    4246:	2b00      	cmp	r3, #0
    4248:	d003      	beq.n	4252 <udd_ep_abort+0x2e>
		ptr_job->call_trans(UDD_EP_TRANSFER_ABORT, ptr_job->nb_trans, ep);
    424a:	68c1      	ldr	r1, [r0, #12]
    424c:	0022      	movs	r2, r4
    424e:	2001      	movs	r0, #1
    4250:	4798      	blx	r3
}
    4252:	bd10      	pop	{r4, pc}
    4254:	20000464 	.word	0x20000464
    4258:	00004d11 	.word	0x00004d11
    425c:	00003c71 	.word	0x00003c71

00004260 <udd_get_frame_number>:
	return ((uint16_t)(module_inst->hw->DEVICE.FNUM.bit.FNUM));
    4260:	4b02      	ldr	r3, [pc, #8]	; (426c <udd_get_frame_number+0xc>)
    4262:	681b      	ldr	r3, [r3, #0]
    4264:	8a18      	ldrh	r0, [r3, #16]
    4266:	0480      	lsls	r0, r0, #18
    4268:	0d40      	lsrs	r0, r0, #21
}
    426a:	4770      	bx	lr
    426c:	20000464 	.word	0x20000464

00004270 <udd_ep_free>:
{
    4270:	b570      	push	{r4, r5, r6, lr}
    4272:	b082      	sub	sp, #8
    4274:	0004      	movs	r4, r0
	usb_device_endpoint_get_config_defaults(&config_ep);
    4276:	ad01      	add	r5, sp, #4
    4278:	0028      	movs	r0, r5
    427a:	4b0d      	ldr	r3, [pc, #52]	; (42b0 <udd_ep_free+0x40>)
    427c:	4798      	blx	r3
	udd_ep_abort(ep);
    427e:	0020      	movs	r0, r4
    4280:	4b0c      	ldr	r3, [pc, #48]	; (42b4 <udd_ep_free+0x44>)
    4282:	4798      	blx	r3
	config_ep.ep_address = ep;
    4284:	702c      	strb	r4, [r5, #0]
	config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_DISABLE;
    4286:	2300      	movs	r3, #0
    4288:	70eb      	strb	r3, [r5, #3]
	usb_device_endpoint_set_config(&usb_device, &config_ep);
    428a:	4e0b      	ldr	r6, [pc, #44]	; (42b8 <udd_ep_free+0x48>)
    428c:	0029      	movs	r1, r5
    428e:	0030      	movs	r0, r6
    4290:	4b0a      	ldr	r3, [pc, #40]	; (42bc <udd_ep_free+0x4c>)
    4292:	4798      	blx	r3
	usb_device_endpoint_unregister_callback(&usb_device,ep_num,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    4294:	210f      	movs	r1, #15
    4296:	4021      	ands	r1, r4
    4298:	2200      	movs	r2, #0
    429a:	0030      	movs	r0, r6
    429c:	4b08      	ldr	r3, [pc, #32]	; (42c0 <udd_ep_free+0x50>)
    429e:	4798      	blx	r3
	usb_device_endpoint_disable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    42a0:	2200      	movs	r2, #0
    42a2:	0021      	movs	r1, r4
    42a4:	0030      	movs	r0, r6
    42a6:	4b07      	ldr	r3, [pc, #28]	; (42c4 <udd_ep_free+0x54>)
    42a8:	4798      	blx	r3
}
    42aa:	b002      	add	sp, #8
    42ac:	bd70      	pop	{r4, r5, r6, pc}
    42ae:	46c0      	nop			; (mov r8, r8)
    42b0:	00004abd 	.word	0x00004abd
    42b4:	00004225 	.word	0x00004225
    42b8:	20000464 	.word	0x20000464
    42bc:	00004acd 	.word	0x00004acd
    42c0:	000048f5 	.word	0x000048f5
    42c4:	000049ed 	.word	0x000049ed

000042c8 <udd_ep_alloc>:
{
    42c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    42ca:	b083      	sub	sp, #12
    42cc:	0005      	movs	r5, r0
    42ce:	000f      	movs	r7, r1
    42d0:	0014      	movs	r4, r2
	usb_device_endpoint_get_config_defaults(&config_ep);
    42d2:	ae01      	add	r6, sp, #4
    42d4:	0030      	movs	r0, r6
    42d6:	4b36      	ldr	r3, [pc, #216]	; (43b0 <udd_ep_alloc+0xe8>)
    42d8:	4798      	blx	r3
	config_ep.ep_address = ep;
    42da:	7035      	strb	r5, [r6, #0]
	if(MaxEndpointSize <= 8) {
    42dc:	2c08      	cmp	r4, #8
    42de:	d813      	bhi.n	4308 <udd_ep_alloc+0x40>
		config_ep.ep_size = USB_ENDPOINT_8_BYTE;
    42e0:	2200      	movs	r2, #0
    42e2:	ab01      	add	r3, sp, #4
    42e4:	705a      	strb	r2, [r3, #1]
	udd_ep_job_t *ptr_job = udd_ep_get_job(ep);
    42e6:	0028      	movs	r0, r5
    42e8:	4b32      	ldr	r3, [pc, #200]	; (43b4 <udd_ep_alloc+0xec>)
    42ea:	4798      	blx	r3
	ptr_job->ep_size = MaxEndpointSize;
    42ec:	8204      	strh	r4, [r0, #16]
	bmAttributes = bmAttributes & USB_EP_TYPE_MASK;
    42ee:	2103      	movs	r1, #3
    42f0:	4039      	ands	r1, r7
	if(USB_EP_TYPE_ISOCHRONOUS == bmAttributes) {
    42f2:	2901      	cmp	r1, #1
    42f4:	d038      	beq.n	4368 <udd_ep_alloc+0xa0>
	} else if (USB_EP_TYPE_BULK == bmAttributes) {
    42f6:	2902      	cmp	r1, #2
    42f8:	d043      	beq.n	4382 <udd_ep_alloc+0xba>
		return false;
    42fa:	2300      	movs	r3, #0
	} else if (USB_EP_TYPE_INTERRUPT == bmAttributes) {
    42fc:	2903      	cmp	r1, #3
    42fe:	d13d      	bne.n	437c <udd_ep_alloc+0xb4>
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_INTERRUPT;
    4300:	2204      	movs	r2, #4
    4302:	ab01      	add	r3, sp, #4
    4304:	70da      	strb	r2, [r3, #3]
    4306:	e032      	b.n	436e <udd_ep_alloc+0xa6>
	} else if(MaxEndpointSize <= 16) {
    4308:	2c10      	cmp	r4, #16
    430a:	d803      	bhi.n	4314 <udd_ep_alloc+0x4c>
		config_ep.ep_size = USB_ENDPOINT_16_BYTE;
    430c:	2201      	movs	r2, #1
    430e:	ab01      	add	r3, sp, #4
    4310:	705a      	strb	r2, [r3, #1]
    4312:	e7e8      	b.n	42e6 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 32) {
    4314:	2c20      	cmp	r4, #32
    4316:	d803      	bhi.n	4320 <udd_ep_alloc+0x58>
		config_ep.ep_size = USB_ENDPOINT_32_BYTE;
    4318:	2202      	movs	r2, #2
    431a:	ab01      	add	r3, sp, #4
    431c:	705a      	strb	r2, [r3, #1]
    431e:	e7e2      	b.n	42e6 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 64) {
    4320:	2c40      	cmp	r4, #64	; 0x40
    4322:	d803      	bhi.n	432c <udd_ep_alloc+0x64>
		config_ep.ep_size = USB_ENDPOINT_64_BYTE;
    4324:	2203      	movs	r2, #3
    4326:	ab01      	add	r3, sp, #4
    4328:	705a      	strb	r2, [r3, #1]
    432a:	e7dc      	b.n	42e6 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 128) {
    432c:	2c80      	cmp	r4, #128	; 0x80
    432e:	d803      	bhi.n	4338 <udd_ep_alloc+0x70>
		config_ep.ep_size = USB_ENDPOINT_128_BYTE;
    4330:	2204      	movs	r2, #4
    4332:	ab01      	add	r3, sp, #4
    4334:	705a      	strb	r2, [r3, #1]
    4336:	e7d6      	b.n	42e6 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 256) {
    4338:	2380      	movs	r3, #128	; 0x80
    433a:	005b      	lsls	r3, r3, #1
    433c:	429c      	cmp	r4, r3
    433e:	d803      	bhi.n	4348 <udd_ep_alloc+0x80>
		config_ep.ep_size = USB_ENDPOINT_256_BYTE;
    4340:	2205      	movs	r2, #5
    4342:	ab01      	add	r3, sp, #4
    4344:	705a      	strb	r2, [r3, #1]
    4346:	e7ce      	b.n	42e6 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 512) {
    4348:	2380      	movs	r3, #128	; 0x80
    434a:	009b      	lsls	r3, r3, #2
    434c:	429c      	cmp	r4, r3
    434e:	d803      	bhi.n	4358 <udd_ep_alloc+0x90>
		config_ep.ep_size = USB_ENDPOINT_512_BYTE;
    4350:	2206      	movs	r2, #6
    4352:	ab01      	add	r3, sp, #4
    4354:	705a      	strb	r2, [r3, #1]
    4356:	e7c6      	b.n	42e6 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 1023) {
    4358:	4a17      	ldr	r2, [pc, #92]	; (43b8 <udd_ep_alloc+0xf0>)
		return false;
    435a:	2300      	movs	r3, #0
	} else if(MaxEndpointSize <= 1023) {
    435c:	4294      	cmp	r4, r2
    435e:	d80d      	bhi.n	437c <udd_ep_alloc+0xb4>
		config_ep.ep_size = USB_ENDPOINT_1023_BYTE;
    4360:	2207      	movs	r2, #7
    4362:	ab01      	add	r3, sp, #4
    4364:	705a      	strb	r2, [r3, #1]
    4366:	e7be      	b.n	42e6 <udd_ep_alloc+0x1e>
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_ISOCHRONOUS;
    4368:	2202      	movs	r2, #2
    436a:	ab01      	add	r3, sp, #4
    436c:	70da      	strb	r2, [r3, #3]
	if (STATUS_OK != usb_device_endpoint_set_config(&usb_device, &config_ep)) {
    436e:	a901      	add	r1, sp, #4
    4370:	4812      	ldr	r0, [pc, #72]	; (43bc <udd_ep_alloc+0xf4>)
    4372:	4b13      	ldr	r3, [pc, #76]	; (43c0 <udd_ep_alloc+0xf8>)
    4374:	4798      	blx	r3
		return false;
    4376:	2300      	movs	r3, #0
	if (STATUS_OK != usb_device_endpoint_set_config(&usb_device, &config_ep)) {
    4378:	2800      	cmp	r0, #0
    437a:	d006      	beq.n	438a <udd_ep_alloc+0xc2>
}
    437c:	0018      	movs	r0, r3
    437e:	b003      	add	sp, #12
    4380:	bdf0      	pop	{r4, r5, r6, r7, pc}
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_BULK;
    4382:	2203      	movs	r2, #3
    4384:	ab01      	add	r3, sp, #4
    4386:	70da      	strb	r2, [r3, #3]
    4388:	e7f1      	b.n	436e <udd_ep_alloc+0xa6>
	usb_device_endpoint_register_callback(&usb_device,ep_num,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT,udd_ep_transfer_process);
    438a:	210f      	movs	r1, #15
    438c:	4029      	ands	r1, r5
    438e:	4c0b      	ldr	r4, [pc, #44]	; (43bc <udd_ep_alloc+0xf4>)
    4390:	4b0c      	ldr	r3, [pc, #48]	; (43c4 <udd_ep_alloc+0xfc>)
    4392:	2200      	movs	r2, #0
    4394:	0020      	movs	r0, r4
    4396:	4e0c      	ldr	r6, [pc, #48]	; (43c8 <udd_ep_alloc+0x100>)
    4398:	47b0      	blx	r6
	usb_device_endpoint_enable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    439a:	2200      	movs	r2, #0
    439c:	0029      	movs	r1, r5
    439e:	0020      	movs	r0, r4
    43a0:	4e0a      	ldr	r6, [pc, #40]	; (43cc <udd_ep_alloc+0x104>)
    43a2:	47b0      	blx	r6
	usb_device_endpoint_enable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL);
    43a4:	2201      	movs	r2, #1
    43a6:	0029      	movs	r1, r5
    43a8:	0020      	movs	r0, r4
    43aa:	47b0      	blx	r6
	return true;
    43ac:	2301      	movs	r3, #1
    43ae:	e7e5      	b.n	437c <udd_ep_alloc+0xb4>
    43b0:	00004abd 	.word	0x00004abd
    43b4:	00003c71 	.word	0x00003c71
    43b8:	000003ff 	.word	0x000003ff
    43bc:	20000464 	.word	0x20000464
    43c0:	00004acd 	.word	0x00004acd
    43c4:	00003c8d 	.word	0x00003c8d
    43c8:	000048cd 	.word	0x000048cd
    43cc:	0000491d 	.word	0x0000491d

000043d0 <udd_ep_is_halted>:
{
    43d0:	b510      	push	{r4, lr}
    43d2:	0001      	movs	r1, r0
	return usb_device_endpoint_is_halted(&usb_device, ep);
    43d4:	4801      	ldr	r0, [pc, #4]	; (43dc <udd_ep_is_halted+0xc>)
    43d6:	4b02      	ldr	r3, [pc, #8]	; (43e0 <udd_ep_is_halted+0x10>)
    43d8:	4798      	blx	r3
}
    43da:	bd10      	pop	{r4, pc}
    43dc:	20000464 	.word	0x20000464
    43e0:	00004d47 	.word	0x00004d47

000043e4 <udd_ep_set_halt>:
{
    43e4:	b510      	push	{r4, lr}
    43e6:	0004      	movs	r4, r0
	if (USB_DEVICE_MAX_EP < ep_num) {
    43e8:	230f      	movs	r3, #15
    43ea:	4003      	ands	r3, r0
		return false;
    43ec:	2000      	movs	r0, #0
	if (USB_DEVICE_MAX_EP < ep_num) {
    43ee:	2b02      	cmp	r3, #2
    43f0:	d900      	bls.n	43f4 <udd_ep_set_halt+0x10>
}
    43f2:	bd10      	pop	{r4, pc}
	usb_device_endpoint_set_halt(&usb_device, ep);
    43f4:	0021      	movs	r1, r4
    43f6:	4804      	ldr	r0, [pc, #16]	; (4408 <udd_ep_set_halt+0x24>)
    43f8:	4b04      	ldr	r3, [pc, #16]	; (440c <udd_ep_set_halt+0x28>)
    43fa:	4798      	blx	r3
	udd_ep_abort(ep);
    43fc:	0020      	movs	r0, r4
    43fe:	4b04      	ldr	r3, [pc, #16]	; (4410 <udd_ep_set_halt+0x2c>)
    4400:	4798      	blx	r3
	return true;
    4402:	2001      	movs	r0, #1
    4404:	e7f5      	b.n	43f2 <udd_ep_set_halt+0xe>
    4406:	46c0      	nop			; (mov r8, r8)
    4408:	20000464 	.word	0x20000464
    440c:	00004d71 	.word	0x00004d71
    4410:	00004225 	.word	0x00004225

00004414 <_usb_ep0_on_tansfer_ok>:
{
    4414:	b570      	push	{r4, r5, r6, lr}
		if (UDD_EPCTRL_DATA_OUT  == udd_ep_control_state) { /* handshake Out for status stage */
    4416:	4b34      	ldr	r3, [pc, #208]	; (44e8 <_usb_ep0_on_tansfer_ok+0xd4>)
    4418:	781b      	ldrb	r3, [r3, #0]
    441a:	2b01      	cmp	r3, #1
    441c:	d00a      	beq.n	4434 <_usb_ep0_on_tansfer_ok+0x20>
		} else if (UDD_EPCTRL_DATA_IN == udd_ep_control_state) { /* handshake In for status stage */
    441e:	2b02      	cmp	r3, #2
    4420:	d05f      	beq.n	44e2 <_usb_ep0_on_tansfer_ok+0xce>
			if (NULL != udd_g_ctrlreq.callback) {
    4422:	4b32      	ldr	r3, [pc, #200]	; (44ec <_usb_ep0_on_tansfer_ok+0xd8>)
    4424:	691b      	ldr	r3, [r3, #16]
    4426:	2b00      	cmp	r3, #0
    4428:	d000      	beq.n	442c <_usb_ep0_on_tansfer_ok+0x18>
				udd_g_ctrlreq.callback();
    442a:	4798      	blx	r3
			udd_ep_control_state = UDD_EPCTRL_SETUP;
    442c:	2200      	movs	r2, #0
    442e:	4b2e      	ldr	r3, [pc, #184]	; (44e8 <_usb_ep0_on_tansfer_ok+0xd4>)
    4430:	701a      	strb	r2, [r3, #0]
}
    4432:	bd70      	pop	{r4, r5, r6, pc}
	nb_data = ep_callback_para->received_bytes; /* Read data received during OUT phase */
    4434:	880d      	ldrh	r5, [r1, #0]
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_nb_trans + nb_data)) {
    4436:	4b2d      	ldr	r3, [pc, #180]	; (44ec <_usb_ep0_on_tansfer_ok+0xd8>)
    4438:	899b      	ldrh	r3, [r3, #12]
    443a:	4a2d      	ldr	r2, [pc, #180]	; (44f0 <_usb_ep0_on_tansfer_ok+0xdc>)
    443c:	8814      	ldrh	r4, [r2, #0]
    443e:	1962      	adds	r2, r4, r5
    4440:	4293      	cmp	r3, r2
    4442:	da01      	bge.n	4448 <_usb_ep0_on_tansfer_ok+0x34>
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
    4444:	1b1d      	subs	r5, r3, r4
    4446:	b2ad      	uxth	r5, r5
	memcpy((uint8_t *) (udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans), udd_ctrl_buffer, nb_data);
    4448:	4b28      	ldr	r3, [pc, #160]	; (44ec <_usb_ep0_on_tansfer_ok+0xd8>)
    444a:	6898      	ldr	r0, [r3, #8]
    444c:	1900      	adds	r0, r0, r4
    444e:	002a      	movs	r2, r5
    4450:	4928      	ldr	r1, [pc, #160]	; (44f4 <_usb_ep0_on_tansfer_ok+0xe0>)
    4452:	4b29      	ldr	r3, [pc, #164]	; (44f8 <_usb_ep0_on_tansfer_ok+0xe4>)
    4454:	4798      	blx	r3
	udd_ctrl_payload_nb_trans += nb_data;
    4456:	1964      	adds	r4, r4, r5
    4458:	b2a4      	uxth	r4, r4
    445a:	4b25      	ldr	r3, [pc, #148]	; (44f0 <_usb_ep0_on_tansfer_ok+0xdc>)
    445c:	801c      	strh	r4, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data) || \
    445e:	2d08      	cmp	r5, #8
    4460:	d00a      	beq.n	4478 <_usb_ep0_on_tansfer_ok+0x64>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_nb_trans;
    4462:	4b22      	ldr	r3, [pc, #136]	; (44ec <_usb_ep0_on_tansfer_ok+0xd8>)
    4464:	819c      	strh	r4, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
    4466:	695b      	ldr	r3, [r3, #20]
    4468:	2b00      	cmp	r3, #0
    446a:	d002      	beq.n	4472 <_usb_ep0_on_tansfer_ok+0x5e>
			if (!udd_g_ctrlreq.over_under_run()) {
    446c:	4798      	blx	r3
    446e:	2800      	cmp	r0, #0
    4470:	d014      	beq.n	449c <_usb_ep0_on_tansfer_ok+0x88>
		udd_ctrl_send_zlp_in();
    4472:	4b22      	ldr	r3, [pc, #136]	; (44fc <_usb_ep0_on_tansfer_ok+0xe8>)
    4474:	4798      	blx	r3
    4476:	e7dc      	b.n	4432 <_usb_ep0_on_tansfer_ok+0x1e>
	(udd_g_ctrlreq.req.wLength <= (udd_ctrl_prev_payload_nb_trans + udd_ctrl_payload_nb_trans))) {
    4478:	4b1c      	ldr	r3, [pc, #112]	; (44ec <_usb_ep0_on_tansfer_ok+0xd8>)
    447a:	88da      	ldrh	r2, [r3, #6]
    447c:	4b20      	ldr	r3, [pc, #128]	; (4500 <_usb_ep0_on_tansfer_ok+0xec>)
    447e:	881b      	ldrh	r3, [r3, #0]
    4480:	191b      	adds	r3, r3, r4
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data) || \
    4482:	429a      	cmp	r2, r3
    4484:	dded      	ble.n	4462 <_usb_ep0_on_tansfer_ok+0x4e>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_nb_trans) {
    4486:	4b19      	ldr	r3, [pc, #100]	; (44ec <_usb_ep0_on_tansfer_ok+0xd8>)
    4488:	899b      	ldrh	r3, [r3, #12]
    448a:	42a3      	cmp	r3, r4
    448c:	d00c      	beq.n	44a8 <_usb_ep0_on_tansfer_ok+0x94>
	usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    448e:	2308      	movs	r3, #8
    4490:	4a18      	ldr	r2, [pc, #96]	; (44f4 <_usb_ep0_on_tansfer_ok+0xe0>)
    4492:	2100      	movs	r1, #0
    4494:	481b      	ldr	r0, [pc, #108]	; (4504 <_usb_ep0_on_tansfer_ok+0xf0>)
    4496:	4c1c      	ldr	r4, [pc, #112]	; (4508 <_usb_ep0_on_tansfer_ok+0xf4>)
    4498:	47a0      	blx	r4
    449a:	e7ca      	b.n	4432 <_usb_ep0_on_tansfer_ok+0x1e>
				udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    449c:	2205      	movs	r2, #5
    449e:	4b12      	ldr	r3, [pc, #72]	; (44e8 <_usb_ep0_on_tansfer_ok+0xd4>)
    44a0:	701a      	strb	r2, [r3, #0]
				udd_ep_set_halt(0);
    44a2:	4b1a      	ldr	r3, [pc, #104]	; (450c <_usb_ep0_on_tansfer_ok+0xf8>)
    44a4:	4798      	blx	r3
    44a6:	e7c4      	b.n	4432 <_usb_ep0_on_tansfer_ok+0x1e>
		if (!udd_g_ctrlreq.over_under_run) {
    44a8:	4b10      	ldr	r3, [pc, #64]	; (44ec <_usb_ep0_on_tansfer_ok+0xd8>)
    44aa:	695b      	ldr	r3, [r3, #20]
    44ac:	2b00      	cmp	r3, #0
    44ae:	d00b      	beq.n	44c8 <_usb_ep0_on_tansfer_ok+0xb4>
		if (!udd_g_ctrlreq.over_under_run()) {
    44b0:	4798      	blx	r3
    44b2:	2800      	cmp	r0, #0
    44b4:	d00f      	beq.n	44d6 <_usb_ep0_on_tansfer_ok+0xc2>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
    44b6:	4912      	ldr	r1, [pc, #72]	; (4500 <_usb_ep0_on_tansfer_ok+0xec>)
    44b8:	4a0d      	ldr	r2, [pc, #52]	; (44f0 <_usb_ep0_on_tansfer_ok+0xdc>)
    44ba:	880b      	ldrh	r3, [r1, #0]
    44bc:	8810      	ldrh	r0, [r2, #0]
    44be:	181b      	adds	r3, r3, r0
    44c0:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_nb_trans = 0;
    44c2:	2300      	movs	r3, #0
    44c4:	8013      	strh	r3, [r2, #0]
    44c6:	e7e2      	b.n	448e <_usb_ep0_on_tansfer_ok+0x7a>
			udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    44c8:	2205      	movs	r2, #5
    44ca:	4b07      	ldr	r3, [pc, #28]	; (44e8 <_usb_ep0_on_tansfer_ok+0xd4>)
    44cc:	701a      	strb	r2, [r3, #0]
			udd_ep_set_halt(0);
    44ce:	2000      	movs	r0, #0
    44d0:	4b0e      	ldr	r3, [pc, #56]	; (450c <_usb_ep0_on_tansfer_ok+0xf8>)
    44d2:	4798      	blx	r3
    44d4:	e7ad      	b.n	4432 <_usb_ep0_on_tansfer_ok+0x1e>
			udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    44d6:	2205      	movs	r2, #5
    44d8:	4b03      	ldr	r3, [pc, #12]	; (44e8 <_usb_ep0_on_tansfer_ok+0xd4>)
    44da:	701a      	strb	r2, [r3, #0]
			udd_ep_set_halt(0);
    44dc:	4b0b      	ldr	r3, [pc, #44]	; (450c <_usb_ep0_on_tansfer_ok+0xf8>)
    44de:	4798      	blx	r3
    44e0:	e7a7      	b.n	4432 <_usb_ep0_on_tansfer_ok+0x1e>
			udd_ctrl_in_sent();
    44e2:	4b0b      	ldr	r3, [pc, #44]	; (4510 <_usb_ep0_on_tansfer_ok+0xfc>)
    44e4:	4798      	blx	r3
    44e6:	e7a4      	b.n	4432 <_usb_ep0_on_tansfer_ok+0x1e>
    44e8:	200001ca 	.word	0x200001ca
    44ec:	200005cc 	.word	0x200005cc
    44f0:	200001c6 	.word	0x200001c6
    44f4:	200005e4 	.word	0x200005e4
    44f8:	00007d81 	.word	0x00007d81
    44fc:	00003fc1 	.word	0x00003fc1
    4500:	200001c8 	.word	0x200001c8
    4504:	20000464 	.word	0x20000464
    4508:	00004e71 	.word	0x00004e71
    450c:	000043e5 	.word	0x000043e5
    4510:	00004051 	.word	0x00004051

00004514 <udd_ep_clear_halt>:
{
    4514:	b570      	push	{r4, r5, r6, lr}
    4516:	0004      	movs	r4, r0
	if (USB_DEVICE_MAX_EP < ep_num) {
    4518:	230f      	movs	r3, #15
    451a:	4003      	ands	r3, r0
		return false;
    451c:	2000      	movs	r0, #0
	if (USB_DEVICE_MAX_EP < ep_num) {
    451e:	2b02      	cmp	r3, #2
    4520:	d900      	bls.n	4524 <udd_ep_clear_halt+0x10>
}
    4522:	bd70      	pop	{r4, r5, r6, pc}
	ptr_job = udd_ep_get_job(ep);
    4524:	0020      	movs	r0, r4
    4526:	4b09      	ldr	r3, [pc, #36]	; (454c <udd_ep_clear_halt+0x38>)
    4528:	4798      	blx	r3
    452a:	0005      	movs	r5, r0
	usb_device_endpoint_clear_halt(&usb_device, ep);
    452c:	0021      	movs	r1, r4
    452e:	4808      	ldr	r0, [pc, #32]	; (4550 <udd_ep_clear_halt+0x3c>)
    4530:	4b08      	ldr	r3, [pc, #32]	; (4554 <udd_ep_clear_halt+0x40>)
    4532:	4798      	blx	r3
	if (ptr_job->busy == true) {
    4534:	7cab      	ldrb	r3, [r5, #18]
	return true;
    4536:	2001      	movs	r0, #1
	if (ptr_job->busy == true) {
    4538:	07db      	lsls	r3, r3, #31
    453a:	d5f2      	bpl.n	4522 <udd_ep_clear_halt+0xe>
		ptr_job->busy = false;
    453c:	7cab      	ldrb	r3, [r5, #18]
    453e:	2201      	movs	r2, #1
    4540:	4393      	bics	r3, r2
    4542:	74ab      	strb	r3, [r5, #18]
		ptr_job->call_nohalt();
    4544:	682b      	ldr	r3, [r5, #0]
    4546:	4798      	blx	r3
	return true;
    4548:	2001      	movs	r0, #1
    454a:	e7ea      	b.n	4522 <udd_ep_clear_halt+0xe>
    454c:	00003c71 	.word	0x00003c71
    4550:	20000464 	.word	0x20000464
    4554:	00004d97 	.word	0x00004d97

00004558 <udd_ep_run>:
{
    4558:	b5f0      	push	{r4, r5, r6, r7, lr}
    455a:	b085      	sub	sp, #20
    455c:	0005      	movs	r5, r0
    455e:	9103      	str	r1, [sp, #12]
    4560:	9202      	str	r2, [sp, #8]
    4562:	9301      	str	r3, [sp, #4]
	ep_num = ep & USB_EP_ADDR_MASK;
    4564:	260f      	movs	r6, #15
    4566:	4006      	ands	r6, r0
		return false;
    4568:	2400      	movs	r4, #0
	if ((USB_DEVICE_MAX_EP < ep_num) || (udd_ep_is_halted(ep))) {
    456a:	2e02      	cmp	r6, #2
    456c:	d902      	bls.n	4574 <udd_ep_run+0x1c>
}
    456e:	0020      	movs	r0, r4
    4570:	b005      	add	sp, #20
    4572:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if ((USB_DEVICE_MAX_EP < ep_num) || (udd_ep_is_halted(ep))) {
    4574:	4b62      	ldr	r3, [pc, #392]	; (4700 <udd_ep_run+0x1a8>)
    4576:	4798      	blx	r3
    4578:	1e04      	subs	r4, r0, #0
    457a:	d000      	beq.n	457e <udd_ep_run+0x26>
    457c:	e0b9      	b.n	46f2 <udd_ep_run+0x19a>
	ptr_job = udd_ep_get_job(ep);
    457e:	0028      	movs	r0, r5
    4580:	4b60      	ldr	r3, [pc, #384]	; (4704 <udd_ep_run+0x1ac>)
    4582:	4798      	blx	r3
    4584:	0007      	movs	r7, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    4586:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
    458a:	b672      	cpsid	i
    458c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    4590:	2200      	movs	r2, #0
    4592:	4b5d      	ldr	r3, [pc, #372]	; (4708 <udd_ep_run+0x1b0>)
    4594:	701a      	strb	r2, [r3, #0]
	if (ptr_job->busy == true) {
    4596:	7c83      	ldrb	r3, [r0, #18]
    4598:	07db      	lsls	r3, r3, #31
    459a:	d508      	bpl.n	45ae <udd_ep_run+0x56>
	if (cpu_irq_is_enabled_flags(flags))
    459c:	2900      	cmp	r1, #0
    459e:	d1e6      	bne.n	456e <udd_ep_run+0x16>
		cpu_irq_enable();
    45a0:	3201      	adds	r2, #1
    45a2:	4b59      	ldr	r3, [pc, #356]	; (4708 <udd_ep_run+0x1b0>)
    45a4:	701a      	strb	r2, [r3, #0]
    45a6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    45aa:	b662      	cpsie	i
    45ac:	e7df      	b.n	456e <udd_ep_run+0x16>
	ptr_job->busy = true;
    45ae:	7c83      	ldrb	r3, [r0, #18]
    45b0:	2201      	movs	r2, #1
    45b2:	4313      	orrs	r3, r2
    45b4:	7483      	strb	r3, [r0, #18]
	if (cpu_irq_is_enabled_flags(flags))
    45b6:	2900      	cmp	r1, #0
    45b8:	d105      	bne.n	45c6 <udd_ep_run+0x6e>
		cpu_irq_enable();
    45ba:	2201      	movs	r2, #1
    45bc:	4b52      	ldr	r3, [pc, #328]	; (4708 <udd_ep_run+0x1b0>)
    45be:	701a      	strb	r2, [r3, #0]
    45c0:	f3bf 8f5f 	dmb	sy
    45c4:	b662      	cpsie	i
	ptr_job->buf = buf;
    45c6:	9b02      	ldr	r3, [sp, #8]
    45c8:	607b      	str	r3, [r7, #4]
	ptr_job->buf_size = buf_size;
    45ca:	9b01      	ldr	r3, [sp, #4]
    45cc:	60bb      	str	r3, [r7, #8]
	ptr_job->nb_trans = 0;
    45ce:	2300      	movs	r3, #0
    45d0:	60fb      	str	r3, [r7, #12]
	ptr_job->call_trans = callback;
    45d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    45d4:	603b      	str	r3, [r7, #0]
	ptr_job->b_shortpacket = b_shortpacket;
    45d6:	2301      	movs	r3, #1
    45d8:	9a03      	ldr	r2, [sp, #12]
    45da:	4013      	ands	r3, r2
    45dc:	005a      	lsls	r2, r3, #1
    45de:	7cbb      	ldrb	r3, [r7, #18]
    45e0:	2102      	movs	r1, #2
    45e2:	438b      	bics	r3, r1
	ptr_job->b_use_out_cache_buffer = false;
    45e4:	4313      	orrs	r3, r2
    45e6:	2204      	movs	r2, #4
    45e8:	4393      	bics	r3, r2
    45ea:	74bb      	strb	r3, [r7, #18]
	if (ep & USB_EP_DIR_IN) {
    45ec:	b26b      	sxtb	r3, r5
    45ee:	2b00      	cmp	r3, #0
    45f0:	db20      	blt.n	4634 <udd_ep_run+0xdc>
		if (0 != ptr_job->buf_size) {
    45f2:	9b01      	ldr	r3, [sp, #4]
    45f4:	2b00      	cmp	r3, #0
    45f6:	d06f      	beq.n	46d8 <udd_ep_run+0x180>
			next_trans = ptr_job->buf_size;
    45f8:	b29c      	uxth	r4, r3
			if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    45fa:	4b44      	ldr	r3, [pc, #272]	; (470c <udd_ep_run+0x1b4>)
    45fc:	429c      	cmp	r4, r3
    45fe:	d95a      	bls.n	46b6 <udd_ep_run+0x15e>
						(UDD_ENDPOINT_MAX_TRANS % ptr_job->ep_size);
    4600:	8a39      	ldrh	r1, [r7, #16]
    4602:	001c      	movs	r4, r3
    4604:	0018      	movs	r0, r3
    4606:	4b42      	ldr	r3, [pc, #264]	; (4710 <udd_ep_run+0x1b8>)
    4608:	4798      	blx	r3
				next_trans = UDD_ENDPOINT_MAX_TRANS -
    460a:	1a63      	subs	r3, r4, r1
    460c:	b29a      	uxth	r2, r3
			if (next_trans < ptr_job->ep_size) {
    460e:	8a3b      	ldrh	r3, [r7, #16]
    4610:	429a      	cmp	r2, r3
    4612:	d257      	bcs.n	46c4 <udd_ep_run+0x16c>
				ptr_job->b_use_out_cache_buffer = true;
    4614:	7cba      	ldrb	r2, [r7, #18]
    4616:	2104      	movs	r1, #4
    4618:	430a      	orrs	r2, r1
    461a:	74ba      	strb	r2, [r7, #18]
								udd_ep_out_cache_buffer[ep_num - 1],
    461c:	1e72      	subs	r2, r6, #1
    461e:	0192      	lsls	r2, r2, #6
    4620:	493c      	ldr	r1, [pc, #240]	; (4714 <udd_ep_run+0x1bc>)
    4622:	1852      	adds	r2, r2, r1
						usb_device_endpoint_read_buffer_job(&usb_device, ep_num,
    4624:	0031      	movs	r1, r6
    4626:	483c      	ldr	r0, [pc, #240]	; (4718 <udd_ep_run+0x1c0>)
    4628:	4c3c      	ldr	r4, [pc, #240]	; (471c <udd_ep_run+0x1c4>)
    462a:	47a0      	blx	r4
				return (STATUS_OK ==
    462c:	4244      	negs	r4, r0
    462e:	4144      	adcs	r4, r0
    4630:	b2e4      	uxtb	r4, r4
    4632:	e79c      	b.n	456e <udd_ep_run+0x16>
		if (0 != ptr_job->buf_size) {
    4634:	9b01      	ldr	r3, [sp, #4]
    4636:	2b00      	cmp	r3, #0
    4638:	d027      	beq.n	468a <udd_ep_run+0x132>
			next_trans = ptr_job->buf_size;
    463a:	b29d      	uxth	r5, r3
			if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    463c:	4b33      	ldr	r3, [pc, #204]	; (470c <udd_ep_run+0x1b4>)
    463e:	429d      	cmp	r5, r3
    4640:	d906      	bls.n	4650 <udd_ep_run+0xf8>
						(UDD_ENDPOINT_MAX_TRANS % ptr_job->ep_size);
    4642:	8a39      	ldrh	r1, [r7, #16]
    4644:	001d      	movs	r5, r3
    4646:	0018      	movs	r0, r3
    4648:	4b31      	ldr	r3, [pc, #196]	; (4710 <udd_ep_run+0x1b8>)
    464a:	4798      	blx	r3
				next_trans = UDD_ENDPOINT_MAX_TRANS -
    464c:	1a6b      	subs	r3, r5, r1
    464e:	b29d      	uxth	r5, r3
			ptr_job->b_shortpacket = ptr_job->b_shortpacket &&
    4650:	7cbb      	ldrb	r3, [r7, #18]
    4652:	079b      	lsls	r3, r3, #30
    4654:	d507      	bpl.n	4666 <udd_ep_run+0x10e>
					(0 == (next_trans % ptr_job->ep_size));
    4656:	8a39      	ldrh	r1, [r7, #16]
    4658:	0028      	movs	r0, r5
    465a:	4b31      	ldr	r3, [pc, #196]	; (4720 <udd_ep_run+0x1c8>)
    465c:	4798      	blx	r3
			ptr_job->b_shortpacket = ptr_job->b_shortpacket &&
    465e:	b289      	uxth	r1, r1
    4660:	424c      	negs	r4, r1
    4662:	414c      	adcs	r4, r1
    4664:	b2e4      	uxtb	r4, r4
    4666:	2001      	movs	r0, #1
    4668:	4020      	ands	r0, r4
    466a:	0040      	lsls	r0, r0, #1
    466c:	7cbc      	ldrb	r4, [r7, #18]
    466e:	2302      	movs	r3, #2
    4670:	439c      	bics	r4, r3
    4672:	4304      	orrs	r4, r0
    4674:	74bc      	strb	r4, [r7, #18]
				usb_device_endpoint_write_buffer_job(&usb_device,
    4676:	002b      	movs	r3, r5
    4678:	9a02      	ldr	r2, [sp, #8]
    467a:	0031      	movs	r1, r6
    467c:	4826      	ldr	r0, [pc, #152]	; (4718 <udd_ep_run+0x1c0>)
    467e:	4c29      	ldr	r4, [pc, #164]	; (4724 <udd_ep_run+0x1cc>)
    4680:	47a0      	blx	r4
		return (STATUS_OK ==
    4682:	4244      	negs	r4, r0
    4684:	4144      	adcs	r4, r0
    4686:	b2e4      	uxtb	r4, r4
    4688:	e771      	b.n	456e <udd_ep_run+0x16>
		} else if (true == ptr_job->b_shortpacket) {
    468a:	7cbb      	ldrb	r3, [r7, #18]
    468c:	079b      	lsls	r3, r3, #30
    468e:	d505      	bpl.n	469c <udd_ep_run+0x144>
			ptr_job->b_shortpacket = false; /* avoid to send zero length packet again */
    4690:	7cbb      	ldrb	r3, [r7, #18]
    4692:	2202      	movs	r2, #2
    4694:	4393      	bics	r3, r2
    4696:	74bb      	strb	r3, [r7, #18]
			next_trans = 0;
    4698:	2500      	movs	r5, #0
    469a:	e7ec      	b.n	4676 <udd_ep_run+0x11e>
			ptr_job->busy = false;
    469c:	7cbb      	ldrb	r3, [r7, #18]
    469e:	2201      	movs	r2, #1
    46a0:	4393      	bics	r3, r2
    46a2:	74bb      	strb	r3, [r7, #18]
			if (NULL != ptr_job->call_trans) {
    46a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    46a6:	2b00      	cmp	r3, #0
    46a8:	d025      	beq.n	46f6 <udd_ep_run+0x19e>
				ptr_job->call_trans(UDD_EP_TRANSFER_OK, 0, ep);
    46aa:	002a      	movs	r2, r5
    46ac:	2100      	movs	r1, #0
    46ae:	2000      	movs	r0, #0
    46b0:	4798      	blx	r3
			return true;
    46b2:	2401      	movs	r4, #1
    46b4:	e75b      	b.n	456e <udd_ep_run+0x16>
				next_trans -= next_trans % ptr_job->ep_size;
    46b6:	8a39      	ldrh	r1, [r7, #16]
    46b8:	0020      	movs	r0, r4
    46ba:	4b19      	ldr	r3, [pc, #100]	; (4720 <udd_ep_run+0x1c8>)
    46bc:	4798      	blx	r3
    46be:	1a63      	subs	r3, r4, r1
    46c0:	b29a      	uxth	r2, r3
    46c2:	e7a4      	b.n	460e <udd_ep_run+0xb6>
						usb_device_endpoint_read_buffer_job(&usb_device, ep_num,
    46c4:	0013      	movs	r3, r2
    46c6:	9a02      	ldr	r2, [sp, #8]
    46c8:	0031      	movs	r1, r6
    46ca:	4813      	ldr	r0, [pc, #76]	; (4718 <udd_ep_run+0x1c0>)
    46cc:	4c13      	ldr	r4, [pc, #76]	; (471c <udd_ep_run+0x1c4>)
    46ce:	47a0      	blx	r4
				return (STATUS_OK ==
    46d0:	4244      	negs	r4, r0
    46d2:	4144      	adcs	r4, r0
    46d4:	b2e4      	uxtb	r4, r4
    46d6:	e74a      	b.n	456e <udd_ep_run+0x16>
			ptr_job->busy = false;
    46d8:	7cbb      	ldrb	r3, [r7, #18]
    46da:	2201      	movs	r2, #1
    46dc:	4393      	bics	r3, r2
    46de:	74bb      	strb	r3, [r7, #18]
			if (NULL != ptr_job->call_trans) {
    46e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    46e2:	2b00      	cmp	r3, #0
    46e4:	d009      	beq.n	46fa <udd_ep_run+0x1a2>
				ptr_job->call_trans(UDD_EP_TRANSFER_OK, 0, ep);
    46e6:	002a      	movs	r2, r5
    46e8:	2100      	movs	r1, #0
    46ea:	2000      	movs	r0, #0
    46ec:	4798      	blx	r3
			return true;
    46ee:	2401      	movs	r4, #1
    46f0:	e73d      	b.n	456e <udd_ep_run+0x16>
		return false;
    46f2:	2400      	movs	r4, #0
    46f4:	e73b      	b.n	456e <udd_ep_run+0x16>
			return true;
    46f6:	2401      	movs	r4, #1
    46f8:	e739      	b.n	456e <udd_ep_run+0x16>
			return true;
    46fa:	2401      	movs	r4, #1
    46fc:	e737      	b.n	456e <udd_ep_run+0x16>
    46fe:	46c0      	nop			; (mov r8, r8)
    4700:	000043d1 	.word	0x000043d1
    4704:	00003c71 	.word	0x00003c71
    4708:	20000116 	.word	0x20000116
    470c:	00001fff 	.word	0x00001fff
    4710:	00005fd9 	.word	0x00005fd9
    4714:	200003e4 	.word	0x200003e4
    4718:	20000464 	.word	0x20000464
    471c:	00004e71 	.word	0x00004e71
    4720:	00005e05 	.word	0x00005e05
    4724:	00004e1d 	.word	0x00004e1d

00004728 <udd_set_address>:
	module_inst->hw->DEVICE.DADD.reg = USB_DEVICE_DADD_ADDEN | address;
    4728:	4b02      	ldr	r3, [pc, #8]	; (4734 <udd_set_address+0xc>)
    472a:	681b      	ldr	r3, [r3, #0]
    472c:	2280      	movs	r2, #128	; 0x80
    472e:	4310      	orrs	r0, r2
    4730:	7298      	strb	r0, [r3, #10]
}
    4732:	4770      	bx	lr
    4734:	20000464 	.word	0x20000464

00004738 <udd_getaddress>:
	return ((uint8_t)(module_inst->hw->DEVICE.DADD.bit.DADD));
    4738:	4b02      	ldr	r3, [pc, #8]	; (4744 <udd_getaddress+0xc>)
    473a:	681b      	ldr	r3, [r3, #0]
    473c:	7a98      	ldrb	r0, [r3, #10]
    473e:	0640      	lsls	r0, r0, #25
    4740:	0e40      	lsrs	r0, r0, #25
}
    4742:	4770      	bx	lr
    4744:	20000464 	.word	0x20000464

00004748 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
    4748:	4b01      	ldr	r3, [pc, #4]	; (4750 <udd_set_setup_payload+0x8>)
    474a:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
    474c:	8199      	strh	r1, [r3, #12]
}
    474e:	4770      	bx	lr
    4750:	200005cc 	.word	0x200005cc

00004754 <udd_attach>:
	usb_device_detach(&usb_device);
	udd_sleep_mode(UDD_STATE_SUSPEND);
}

void udd_attach(void)
{
    4754:	b570      	push	{r4, r5, r6, lr}
	udd_sleep_mode(UDD_STATE_IDLE);
    4756:	2003      	movs	r0, #3
    4758:	4b16      	ldr	r3, [pc, #88]	; (47b4 <udd_attach+0x60>)
    475a:	4798      	blx	r3
	module_inst->hw->DEVICE.CTRLB.reg &= ~USB_DEVICE_CTRLB_DETACH;
    475c:	4c16      	ldr	r4, [pc, #88]	; (47b8 <udd_attach+0x64>)
    475e:	6822      	ldr	r2, [r4, #0]
    4760:	8913      	ldrh	r3, [r2, #8]
    4762:	2101      	movs	r1, #1
    4764:	438b      	bics	r3, r1
    4766:	8113      	strh	r3, [r2, #8]
	usb_device_attach(&usb_device);

	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND, _usb_on_suspend);
    4768:	4a14      	ldr	r2, [pc, #80]	; (47bc <udd_attach+0x68>)
    476a:	3103      	adds	r1, #3
    476c:	0020      	movs	r0, r4
    476e:	4e14      	ldr	r6, [pc, #80]	; (47c0 <udd_attach+0x6c>)
    4770:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_SOF, _usb_on_sof_notify);
    4772:	4a14      	ldr	r2, [pc, #80]	; (47c4 <udd_attach+0x70>)
    4774:	2100      	movs	r1, #0
    4776:	0020      	movs	r0, r4
    4778:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_RESET, _usb_on_bus_reset);
    477a:	4a13      	ldr	r2, [pc, #76]	; (47c8 <udd_attach+0x74>)
    477c:	2101      	movs	r1, #1
    477e:	0020      	movs	r0, r4
    4780:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP, _usb_on_wakeup);
    4782:	4a12      	ldr	r2, [pc, #72]	; (47cc <udd_attach+0x78>)
    4784:	2102      	movs	r1, #2
    4786:	0020      	movs	r0, r4
    4788:	47b0      	blx	r6

	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    478a:	2104      	movs	r1, #4
    478c:	0020      	movs	r0, r4
    478e:	4d10      	ldr	r5, [pc, #64]	; (47d0 <udd_attach+0x7c>)
    4790:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SOF);
    4792:	2100      	movs	r1, #0
    4794:	0020      	movs	r0, r4
    4796:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_RESET);
    4798:	2101      	movs	r1, #1
    479a:	0020      	movs	r0, r4
    479c:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    479e:	2102      	movs	r1, #2
    47a0:	0020      	movs	r0, r4
    47a2:	47a8      	blx	r5
#ifdef  USB_DEVICE_LPM_SUPPORT
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP, _usb_device_lpm_suspend);
    47a4:	4a0b      	ldr	r2, [pc, #44]	; (47d4 <udd_attach+0x80>)
    47a6:	2106      	movs	r1, #6
    47a8:	0020      	movs	r0, r4
    47aa:	47b0      	blx	r6
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    47ac:	2106      	movs	r1, #6
    47ae:	0020      	movs	r0, r4
    47b0:	47a8      	blx	r5
#endif
}
    47b2:	bd70      	pop	{r4, r5, r6, pc}
    47b4:	00003bc5 	.word	0x00003bc5
    47b8:	20000464 	.word	0x20000464
    47bc:	000041f1 	.word	0x000041f1
    47c0:	0000486d 	.word	0x0000486d
    47c4:	000041dd 	.word	0x000041dd
    47c8:	00003f11 	.word	0x00003f11
    47cc:	00003ea1 	.word	0x00003ea1
    47d0:	00004891 	.word	0x00004891
    47d4:	00003e6d 	.word	0x00003e6d

000047d8 <udd_enable>:
	return false;
#endif
}

void udd_enable(void)
{
    47d8:	b570      	push	{r4, r5, r6, lr}
    47da:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    47dc:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
    47e0:	b672      	cpsid	i
    47e2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    47e6:	2600      	movs	r6, #0
    47e8:	4b17      	ldr	r3, [pc, #92]	; (4848 <udd_enable+0x70>)
    47ea:	701e      	strb	r6, [r3, #0]
	}
#endif
	struct usb_config config_usb;

	/* USB Module configuration */
	usb_get_config_defaults(&config_usb);
    47ec:	ad01      	add	r5, sp, #4
    47ee:	0028      	movs	r0, r5
    47f0:	4b16      	ldr	r3, [pc, #88]	; (484c <udd_enable+0x74>)
    47f2:	4798      	blx	r3
	config_usb.source_generator = UDD_CLOCK_GEN;
    47f4:	70ae      	strb	r6, [r5, #2]
	usb_init(&usb_device, USB, &config_usb);
    47f6:	4e16      	ldr	r6, [pc, #88]	; (4850 <udd_enable+0x78>)
    47f8:	002a      	movs	r2, r5
    47fa:	4916      	ldr	r1, [pc, #88]	; (4854 <udd_enable+0x7c>)
    47fc:	0030      	movs	r0, r6
    47fe:	4b16      	ldr	r3, [pc, #88]	; (4858 <udd_enable+0x80>)
    4800:	4798      	blx	r3

	/* USB Module Enable */
	usb_enable(&usb_device);
    4802:	0030      	movs	r0, r6
    4804:	4b15      	ldr	r3, [pc, #84]	; (485c <udd_enable+0x84>)
    4806:	4798      	blx	r3
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    4808:	4b15      	ldr	r3, [pc, #84]	; (4860 <udd_enable+0x88>)
    480a:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    480c:	069b      	lsls	r3, r3, #26
    480e:	d414      	bmi.n	483a <udd_enable+0x62>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    4810:	4913      	ldr	r1, [pc, #76]	; (4860 <udd_enable+0x88>)
    4812:	22d0      	movs	r2, #208	; 0xd0
    4814:	68cb      	ldr	r3, [r1, #12]
    4816:	4013      	ands	r3, r2
    4818:	2bd0      	cmp	r3, #208	; 0xd0
    481a:	d1fb      	bne.n	4814 <udd_enable+0x3c>

	/* Check clock after enable module, request the clock */
	udd_wait_clock_ready();

	udd_sleep_mode(UDD_STATE_SUSPEND);
    481c:	2001      	movs	r0, #1
    481e:	4b11      	ldr	r3, [pc, #68]	; (4864 <udd_enable+0x8c>)
    4820:	4798      	blx	r3
		_uhd_vbus_handler();
	}
#else
	// No VBus detect, assume always high
# ifndef USB_DEVICE_ATTACH_AUTO_DISABLE
	udd_attach();
    4822:	4b11      	ldr	r3, [pc, #68]	; (4868 <udd_enable+0x90>)
    4824:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
    4826:	2c00      	cmp	r4, #0
    4828:	d105      	bne.n	4836 <udd_enable+0x5e>
		cpu_irq_enable();
    482a:	2201      	movs	r2, #1
    482c:	4b06      	ldr	r3, [pc, #24]	; (4848 <udd_enable+0x70>)
    482e:	701a      	strb	r2, [r3, #0]
    4830:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    4834:	b662      	cpsie	i
# endif
#endif

	cpu_irq_restore(flags);
}
    4836:	b002      	add	sp, #8
    4838:	bd70      	pop	{r4, r5, r6, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    483a:	4909      	ldr	r1, [pc, #36]	; (4860 <udd_enable+0x88>)
    483c:	2210      	movs	r2, #16
    483e:	68cb      	ldr	r3, [r1, #12]
    4840:	421a      	tst	r2, r3
    4842:	d0fc      	beq.n	483e <udd_enable+0x66>
    4844:	e7ea      	b.n	481c <udd_enable+0x44>
    4846:	46c0      	nop			; (mov r8, r8)
    4848:	20000116 	.word	0x20000116
    484c:	000054c5 	.word	0x000054c5
    4850:	20000464 	.word	0x20000464
    4854:	41005000 	.word	0x41005000
    4858:	000054d5 	.word	0x000054d5
    485c:	00004ef1 	.word	0x00004ef1
    4860:	40000800 	.word	0x40000800
    4864:	00003bc5 	.word	0x00003bc5
    4868:	00004755 	.word	0x00004755

0000486c <usb_device_register_callback>:
    486c:	b510      	push	{r4, lr}
    486e:	000b      	movs	r3, r1
    4870:	332e      	adds	r3, #46	; 0x2e
    4872:	009b      	lsls	r3, r3, #2
    4874:	501a      	str	r2, [r3, r0]
    4876:	22aa      	movs	r2, #170	; 0xaa
    4878:	0052      	lsls	r2, r2, #1
    487a:	0049      	lsls	r1, r1, #1
    487c:	5a83      	ldrh	r3, [r0, r2]
    487e:	4c03      	ldr	r4, [pc, #12]	; (488c <usb_device_register_callback+0x20>)
    4880:	5b09      	ldrh	r1, [r1, r4]
    4882:	430b      	orrs	r3, r1
    4884:	5283      	strh	r3, [r0, r2]
    4886:	2000      	movs	r0, #0
    4888:	bd10      	pop	{r4, pc}
    488a:	46c0      	nop			; (mov r8, r8)
    488c:	00008078 	.word	0x00008078

00004890 <usb_device_enable_callback>:
    4890:	0049      	lsls	r1, r1, #1
    4892:	4b06      	ldr	r3, [pc, #24]	; (48ac <usb_device_enable_callback+0x1c>)
    4894:	5acb      	ldrh	r3, [r1, r3]
    4896:	6802      	ldr	r2, [r0, #0]
    4898:	8393      	strh	r3, [r2, #28]
    489a:	21ab      	movs	r1, #171	; 0xab
    489c:	0049      	lsls	r1, r1, #1
    489e:	5a42      	ldrh	r2, [r0, r1]
    48a0:	431a      	orrs	r2, r3
    48a2:	5242      	strh	r2, [r0, r1]
    48a4:	6802      	ldr	r2, [r0, #0]
    48a6:	8313      	strh	r3, [r2, #24]
    48a8:	2000      	movs	r0, #0
    48aa:	4770      	bx	lr
    48ac:	00008078 	.word	0x00008078

000048b0 <usb_device_disable_callback>:
    48b0:	0049      	lsls	r1, r1, #1
    48b2:	4b05      	ldr	r3, [pc, #20]	; (48c8 <usb_device_disable_callback+0x18>)
    48b4:	5aca      	ldrh	r2, [r1, r3]
    48b6:	21ab      	movs	r1, #171	; 0xab
    48b8:	0049      	lsls	r1, r1, #1
    48ba:	5a43      	ldrh	r3, [r0, r1]
    48bc:	4393      	bics	r3, r2
    48be:	5243      	strh	r3, [r0, r1]
    48c0:	6803      	ldr	r3, [r0, #0]
    48c2:	829a      	strh	r2, [r3, #20]
    48c4:	2000      	movs	r0, #0
    48c6:	4770      	bx	lr
    48c8:	00008078 	.word	0x00008078

000048cc <usb_device_endpoint_register_callback>:
    48cc:	b510      	push	{r4, lr}
    48ce:	008c      	lsls	r4, r1, #2
    48d0:	18a4      	adds	r4, r4, r2
    48d2:	3434      	adds	r4, #52	; 0x34
    48d4:	00a4      	lsls	r4, r4, #2
    48d6:	1904      	adds	r4, r0, r4
    48d8:	6063      	str	r3, [r4, #4]
    48da:	1840      	adds	r0, r0, r1
    48dc:	3059      	adds	r0, #89	; 0x59
    48de:	30ff      	adds	r0, #255	; 0xff
    48e0:	7803      	ldrb	r3, [r0, #0]
    48e2:	4903      	ldr	r1, [pc, #12]	; (48f0 <usb_device_endpoint_register_callback+0x24>)
    48e4:	5c8a      	ldrb	r2, [r1, r2]
    48e6:	4313      	orrs	r3, r2
    48e8:	7003      	strb	r3, [r0, #0]
    48ea:	2000      	movs	r0, #0
    48ec:	bd10      	pop	{r4, pc}
    48ee:	46c0      	nop			; (mov r8, r8)
    48f0:	00008088 	.word	0x00008088

000048f4 <usb_device_endpoint_unregister_callback>:
    48f4:	b510      	push	{r4, lr}
    48f6:	008b      	lsls	r3, r1, #2
    48f8:	189b      	adds	r3, r3, r2
    48fa:	3334      	adds	r3, #52	; 0x34
    48fc:	009b      	lsls	r3, r3, #2
    48fe:	18c3      	adds	r3, r0, r3
    4900:	2400      	movs	r4, #0
    4902:	605c      	str	r4, [r3, #4]
    4904:	1840      	adds	r0, r0, r1
    4906:	3059      	adds	r0, #89	; 0x59
    4908:	30ff      	adds	r0, #255	; 0xff
    490a:	4b03      	ldr	r3, [pc, #12]	; (4918 <usb_device_endpoint_unregister_callback+0x24>)
    490c:	5c9a      	ldrb	r2, [r3, r2]
    490e:	7803      	ldrb	r3, [r0, #0]
    4910:	4393      	bics	r3, r2
    4912:	7003      	strb	r3, [r0, #0]
    4914:	2000      	movs	r0, #0
    4916:	bd10      	pop	{r4, pc}
    4918:	00008088 	.word	0x00008088

0000491c <usb_device_endpoint_enable_callback>:
    491c:	b570      	push	{r4, r5, r6, lr}
    491e:	230f      	movs	r3, #15
    4920:	400b      	ands	r3, r1
    4922:	18c4      	adds	r4, r0, r3
    4924:	3461      	adds	r4, #97	; 0x61
    4926:	34ff      	adds	r4, #255	; 0xff
    4928:	7825      	ldrb	r5, [r4, #0]
    492a:	4e2f      	ldr	r6, [pc, #188]	; (49e8 <usb_device_endpoint_enable_callback+0xcc>)
    492c:	5cb6      	ldrb	r6, [r6, r2]
    492e:	4335      	orrs	r5, r6
    4930:	7025      	strb	r5, [r4, #0]
    4932:	2a00      	cmp	r2, #0
    4934:	d129      	bne.n	498a <usb_device_endpoint_enable_callback+0x6e>
    4936:	2b00      	cmp	r3, #0
    4938:	d112      	bne.n	4960 <usb_device_endpoint_enable_callback+0x44>
    493a:	2503      	movs	r5, #3
    493c:	240a      	movs	r4, #10
    493e:	34ff      	adds	r4, #255	; 0xff
    4940:	6806      	ldr	r6, [r0, #0]
    4942:	5535      	strb	r5, [r6, r4]
    4944:	2a03      	cmp	r2, #3
    4946:	d109      	bne.n	495c <usb_device_endpoint_enable_callback+0x40>
    4948:	b249      	sxtb	r1, r1
    494a:	2900      	cmp	r1, #0
    494c:	db44      	blt.n	49d8 <usb_device_endpoint_enable_callback+0xbc>
    494e:	6802      	ldr	r2, [r0, #0]
    4950:	015b      	lsls	r3, r3, #5
    4952:	18d3      	adds	r3, r2, r3
    4954:	330a      	adds	r3, #10
    4956:	33ff      	adds	r3, #255	; 0xff
    4958:	2220      	movs	r2, #32
    495a:	701a      	strb	r2, [r3, #0]
    495c:	2000      	movs	r0, #0
    495e:	bd70      	pop	{r4, r5, r6, pc}
    4960:	b24c      	sxtb	r4, r1
    4962:	2c00      	cmp	r4, #0
    4964:	db08      	blt.n	4978 <usb_device_endpoint_enable_callback+0x5c>
    4966:	015c      	lsls	r4, r3, #5
    4968:	6805      	ldr	r5, [r0, #0]
    496a:	46ac      	mov	ip, r5
    496c:	4464      	add	r4, ip
    496e:	340a      	adds	r4, #10
    4970:	34ff      	adds	r4, #255	; 0xff
    4972:	2501      	movs	r5, #1
    4974:	7025      	strb	r5, [r4, #0]
    4976:	e7e5      	b.n	4944 <usb_device_endpoint_enable_callback+0x28>
    4978:	015c      	lsls	r4, r3, #5
    497a:	6805      	ldr	r5, [r0, #0]
    497c:	46ac      	mov	ip, r5
    497e:	4464      	add	r4, ip
    4980:	340a      	adds	r4, #10
    4982:	34ff      	adds	r4, #255	; 0xff
    4984:	2502      	movs	r5, #2
    4986:	7025      	strb	r5, [r4, #0]
    4988:	e7dc      	b.n	4944 <usb_device_endpoint_enable_callback+0x28>
    498a:	2a01      	cmp	r2, #1
    498c:	d11a      	bne.n	49c4 <usb_device_endpoint_enable_callback+0xa8>
    498e:	2b00      	cmp	r3, #0
    4990:	d105      	bne.n	499e <usb_device_endpoint_enable_callback+0x82>
    4992:	6802      	ldr	r2, [r0, #0]
    4994:	210c      	movs	r1, #12
    4996:	230a      	movs	r3, #10
    4998:	33ff      	adds	r3, #255	; 0xff
    499a:	54d1      	strb	r1, [r2, r3]
    499c:	e7de      	b.n	495c <usb_device_endpoint_enable_callback+0x40>
    499e:	b249      	sxtb	r1, r1
    49a0:	2900      	cmp	r1, #0
    49a2:	db07      	blt.n	49b4 <usb_device_endpoint_enable_callback+0x98>
    49a4:	6802      	ldr	r2, [r0, #0]
    49a6:	015b      	lsls	r3, r3, #5
    49a8:	18d3      	adds	r3, r2, r3
    49aa:	330a      	adds	r3, #10
    49ac:	33ff      	adds	r3, #255	; 0xff
    49ae:	2204      	movs	r2, #4
    49b0:	701a      	strb	r2, [r3, #0]
    49b2:	e7d3      	b.n	495c <usb_device_endpoint_enable_callback+0x40>
    49b4:	6802      	ldr	r2, [r0, #0]
    49b6:	015b      	lsls	r3, r3, #5
    49b8:	18d3      	adds	r3, r2, r3
    49ba:	330a      	adds	r3, #10
    49bc:	33ff      	adds	r3, #255	; 0xff
    49be:	2208      	movs	r2, #8
    49c0:	701a      	strb	r2, [r3, #0]
    49c2:	e7cb      	b.n	495c <usb_device_endpoint_enable_callback+0x40>
    49c4:	2a02      	cmp	r2, #2
    49c6:	d1bd      	bne.n	4944 <usb_device_endpoint_enable_callback+0x28>
    49c8:	6802      	ldr	r2, [r0, #0]
    49ca:	015b      	lsls	r3, r3, #5
    49cc:	18d3      	adds	r3, r2, r3
    49ce:	330a      	adds	r3, #10
    49d0:	33ff      	adds	r3, #255	; 0xff
    49d2:	2210      	movs	r2, #16
    49d4:	701a      	strb	r2, [r3, #0]
    49d6:	e7c1      	b.n	495c <usb_device_endpoint_enable_callback+0x40>
    49d8:	6802      	ldr	r2, [r0, #0]
    49da:	015b      	lsls	r3, r3, #5
    49dc:	18d3      	adds	r3, r2, r3
    49de:	330a      	adds	r3, #10
    49e0:	33ff      	adds	r3, #255	; 0xff
    49e2:	2240      	movs	r2, #64	; 0x40
    49e4:	701a      	strb	r2, [r3, #0]
    49e6:	e7b9      	b.n	495c <usb_device_endpoint_enable_callback+0x40>
    49e8:	00008088 	.word	0x00008088

000049ec <usb_device_endpoint_disable_callback>:
    49ec:	b570      	push	{r4, r5, r6, lr}
    49ee:	230f      	movs	r3, #15
    49f0:	400b      	ands	r3, r1
    49f2:	18c4      	adds	r4, r0, r3
    49f4:	3461      	adds	r4, #97	; 0x61
    49f6:	34ff      	adds	r4, #255	; 0xff
    49f8:	4d2f      	ldr	r5, [pc, #188]	; (4ab8 <usb_device_endpoint_disable_callback+0xcc>)
    49fa:	5cae      	ldrb	r6, [r5, r2]
    49fc:	7825      	ldrb	r5, [r4, #0]
    49fe:	43b5      	bics	r5, r6
    4a00:	7025      	strb	r5, [r4, #0]
    4a02:	2a00      	cmp	r2, #0
    4a04:	d129      	bne.n	4a5a <usb_device_endpoint_disable_callback+0x6e>
    4a06:	2b00      	cmp	r3, #0
    4a08:	d112      	bne.n	4a30 <usb_device_endpoint_disable_callback+0x44>
    4a0a:	2503      	movs	r5, #3
    4a0c:	2484      	movs	r4, #132	; 0x84
    4a0e:	0064      	lsls	r4, r4, #1
    4a10:	6806      	ldr	r6, [r0, #0]
    4a12:	5535      	strb	r5, [r6, r4]
    4a14:	2a03      	cmp	r2, #3
    4a16:	d109      	bne.n	4a2c <usb_device_endpoint_disable_callback+0x40>
    4a18:	b249      	sxtb	r1, r1
    4a1a:	2900      	cmp	r1, #0
    4a1c:	db44      	blt.n	4aa8 <usb_device_endpoint_disable_callback+0xbc>
    4a1e:	6802      	ldr	r2, [r0, #0]
    4a20:	015b      	lsls	r3, r3, #5
    4a22:	18d3      	adds	r3, r2, r3
    4a24:	3309      	adds	r3, #9
    4a26:	33ff      	adds	r3, #255	; 0xff
    4a28:	2220      	movs	r2, #32
    4a2a:	701a      	strb	r2, [r3, #0]
    4a2c:	2000      	movs	r0, #0
    4a2e:	bd70      	pop	{r4, r5, r6, pc}
    4a30:	b24c      	sxtb	r4, r1
    4a32:	2c00      	cmp	r4, #0
    4a34:	db08      	blt.n	4a48 <usb_device_endpoint_disable_callback+0x5c>
    4a36:	015c      	lsls	r4, r3, #5
    4a38:	6805      	ldr	r5, [r0, #0]
    4a3a:	46ac      	mov	ip, r5
    4a3c:	4464      	add	r4, ip
    4a3e:	3409      	adds	r4, #9
    4a40:	34ff      	adds	r4, #255	; 0xff
    4a42:	2501      	movs	r5, #1
    4a44:	7025      	strb	r5, [r4, #0]
    4a46:	e7e5      	b.n	4a14 <usb_device_endpoint_disable_callback+0x28>
    4a48:	015c      	lsls	r4, r3, #5
    4a4a:	6805      	ldr	r5, [r0, #0]
    4a4c:	46ac      	mov	ip, r5
    4a4e:	4464      	add	r4, ip
    4a50:	3409      	adds	r4, #9
    4a52:	34ff      	adds	r4, #255	; 0xff
    4a54:	2502      	movs	r5, #2
    4a56:	7025      	strb	r5, [r4, #0]
    4a58:	e7dc      	b.n	4a14 <usb_device_endpoint_disable_callback+0x28>
    4a5a:	2a01      	cmp	r2, #1
    4a5c:	d11a      	bne.n	4a94 <usb_device_endpoint_disable_callback+0xa8>
    4a5e:	2b00      	cmp	r3, #0
    4a60:	d105      	bne.n	4a6e <usb_device_endpoint_disable_callback+0x82>
    4a62:	6802      	ldr	r2, [r0, #0]
    4a64:	210c      	movs	r1, #12
    4a66:	3309      	adds	r3, #9
    4a68:	33ff      	adds	r3, #255	; 0xff
    4a6a:	54d1      	strb	r1, [r2, r3]
    4a6c:	e7de      	b.n	4a2c <usb_device_endpoint_disable_callback+0x40>
    4a6e:	b249      	sxtb	r1, r1
    4a70:	2900      	cmp	r1, #0
    4a72:	db07      	blt.n	4a84 <usb_device_endpoint_disable_callback+0x98>
    4a74:	6802      	ldr	r2, [r0, #0]
    4a76:	015b      	lsls	r3, r3, #5
    4a78:	18d3      	adds	r3, r2, r3
    4a7a:	3309      	adds	r3, #9
    4a7c:	33ff      	adds	r3, #255	; 0xff
    4a7e:	2204      	movs	r2, #4
    4a80:	701a      	strb	r2, [r3, #0]
    4a82:	e7d3      	b.n	4a2c <usb_device_endpoint_disable_callback+0x40>
    4a84:	6802      	ldr	r2, [r0, #0]
    4a86:	015b      	lsls	r3, r3, #5
    4a88:	18d3      	adds	r3, r2, r3
    4a8a:	3309      	adds	r3, #9
    4a8c:	33ff      	adds	r3, #255	; 0xff
    4a8e:	2208      	movs	r2, #8
    4a90:	701a      	strb	r2, [r3, #0]
    4a92:	e7cb      	b.n	4a2c <usb_device_endpoint_disable_callback+0x40>
    4a94:	2a02      	cmp	r2, #2
    4a96:	d1bd      	bne.n	4a14 <usb_device_endpoint_disable_callback+0x28>
    4a98:	6802      	ldr	r2, [r0, #0]
    4a9a:	015b      	lsls	r3, r3, #5
    4a9c:	18d3      	adds	r3, r2, r3
    4a9e:	3309      	adds	r3, #9
    4aa0:	33ff      	adds	r3, #255	; 0xff
    4aa2:	2210      	movs	r2, #16
    4aa4:	701a      	strb	r2, [r3, #0]
    4aa6:	e7c1      	b.n	4a2c <usb_device_endpoint_disable_callback+0x40>
    4aa8:	6802      	ldr	r2, [r0, #0]
    4aaa:	015b      	lsls	r3, r3, #5
    4aac:	18d3      	adds	r3, r2, r3
    4aae:	3309      	adds	r3, #9
    4ab0:	33ff      	adds	r3, #255	; 0xff
    4ab2:	2240      	movs	r2, #64	; 0x40
    4ab4:	701a      	strb	r2, [r3, #0]
    4ab6:	e7b9      	b.n	4a2c <usb_device_endpoint_disable_callback+0x40>
    4ab8:	00008088 	.word	0x00008088

00004abc <usb_device_endpoint_get_config_defaults>:
    4abc:	2300      	movs	r3, #0
    4abe:	7003      	strb	r3, [r0, #0]
    4ac0:	7043      	strb	r3, [r0, #1]
    4ac2:	7083      	strb	r3, [r0, #2]
    4ac4:	3301      	adds	r3, #1
    4ac6:	70c3      	strb	r3, [r0, #3]
    4ac8:	4770      	bx	lr
	...

00004acc <usb_device_endpoint_set_config>:
    4acc:	b5f0      	push	{r4, r5, r6, r7, lr}
    4ace:	780c      	ldrb	r4, [r1, #0]
    4ad0:	230f      	movs	r3, #15
    4ad2:	4023      	ands	r3, r4
    4ad4:	b264      	sxtb	r4, r4
    4ad6:	78ca      	ldrb	r2, [r1, #3]
    4ad8:	2a04      	cmp	r2, #4
    4ada:	d870      	bhi.n	4bbe <usb_device_endpoint_set_config+0xf2>
    4adc:	0092      	lsls	r2, r2, #2
    4ade:	4d89      	ldr	r5, [pc, #548]	; (4d04 <usb_device_endpoint_set_config+0x238>)
    4ae0:	58aa      	ldr	r2, [r5, r2]
    4ae2:	4697      	mov	pc, r2
    4ae4:	6802      	ldr	r2, [r0, #0]
    4ae6:	3308      	adds	r3, #8
    4ae8:	015b      	lsls	r3, r3, #5
    4aea:	2100      	movs	r1, #0
    4aec:	5499      	strb	r1, [r3, r2]
    4aee:	2200      	movs	r2, #0
    4af0:	e082      	b.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4af2:	015c      	lsls	r4, r3, #5
    4af4:	6802      	ldr	r2, [r0, #0]
    4af6:	4694      	mov	ip, r2
    4af8:	4464      	add	r4, ip
    4afa:	2280      	movs	r2, #128	; 0x80
    4afc:	0052      	lsls	r2, r2, #1
    4afe:	5ca5      	ldrb	r5, [r4, r2]
    4b00:	3ae4      	subs	r2, #228	; 0xe4
    4b02:	076d      	lsls	r5, r5, #29
    4b04:	d178      	bne.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4b06:	32e4      	adds	r2, #228	; 0xe4
    4b08:	5ca6      	ldrb	r6, [r4, r2]
    4b0a:	2570      	movs	r5, #112	; 0x70
    4b0c:	3ae4      	subs	r2, #228	; 0xe4
    4b0e:	422e      	tst	r6, r5
    4b10:	d172      	bne.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4b12:	3d5f      	subs	r5, #95	; 0x5f
    4b14:	32e4      	adds	r2, #228	; 0xe4
    4b16:	54a5      	strb	r5, [r4, r2]
    4b18:	001a      	movs	r2, r3
    4b1a:	3208      	adds	r2, #8
    4b1c:	0152      	lsls	r2, r2, #5
    4b1e:	6804      	ldr	r4, [r0, #0]
    4b20:	18a4      	adds	r4, r4, r2
    4b22:	352f      	adds	r5, #47	; 0x2f
    4b24:	7165      	strb	r5, [r4, #5]
    4b26:	6800      	ldr	r0, [r0, #0]
    4b28:	1882      	adds	r2, r0, r2
    4b2a:	2080      	movs	r0, #128	; 0x80
    4b2c:	7110      	strb	r0, [r2, #4]
    4b2e:	788a      	ldrb	r2, [r1, #2]
    4b30:	2a00      	cmp	r2, #0
    4b32:	d01f      	beq.n	4b74 <usb_device_endpoint_set_config+0xa8>
    4b34:	0158      	lsls	r0, r3, #5
    4b36:	4a74      	ldr	r2, [pc, #464]	; (4d08 <usb_device_endpoint_set_config+0x23c>)
    4b38:	1812      	adds	r2, r2, r0
    4b3a:	6854      	ldr	r4, [r2, #4]
    4b3c:	2080      	movs	r0, #128	; 0x80
    4b3e:	0600      	lsls	r0, r0, #24
    4b40:	4304      	orrs	r4, r0
    4b42:	6054      	str	r4, [r2, #4]
    4b44:	6954      	ldr	r4, [r2, #20]
    4b46:	4320      	orrs	r0, r4
    4b48:	6150      	str	r0, [r2, #20]
    4b4a:	2507      	movs	r5, #7
    4b4c:	784c      	ldrb	r4, [r1, #1]
    4b4e:	015a      	lsls	r2, r3, #5
    4b50:	4b6d      	ldr	r3, [pc, #436]	; (4d08 <usb_device_endpoint_set_config+0x23c>)
    4b52:	189b      	adds	r3, r3, r2
    4b54:	6858      	ldr	r0, [r3, #4]
    4b56:	402c      	ands	r4, r5
    4b58:	0724      	lsls	r4, r4, #28
    4b5a:	4e6c      	ldr	r6, [pc, #432]	; (4d0c <usb_device_endpoint_set_config+0x240>)
    4b5c:	4030      	ands	r0, r6
    4b5e:	4320      	orrs	r0, r4
    4b60:	6058      	str	r0, [r3, #4]
    4b62:	7849      	ldrb	r1, [r1, #1]
    4b64:	695a      	ldr	r2, [r3, #20]
    4b66:	4029      	ands	r1, r5
    4b68:	0709      	lsls	r1, r1, #28
    4b6a:	4032      	ands	r2, r6
    4b6c:	430a      	orrs	r2, r1
    4b6e:	615a      	str	r2, [r3, #20]
    4b70:	2200      	movs	r2, #0
    4b72:	e041      	b.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4b74:	0158      	lsls	r0, r3, #5
    4b76:	4a64      	ldr	r2, [pc, #400]	; (4d08 <usb_device_endpoint_set_config+0x23c>)
    4b78:	1812      	adds	r2, r2, r0
    4b7a:	6850      	ldr	r0, [r2, #4]
    4b7c:	0040      	lsls	r0, r0, #1
    4b7e:	0840      	lsrs	r0, r0, #1
    4b80:	6050      	str	r0, [r2, #4]
    4b82:	6950      	ldr	r0, [r2, #20]
    4b84:	0040      	lsls	r0, r0, #1
    4b86:	0840      	lsrs	r0, r0, #1
    4b88:	6150      	str	r0, [r2, #20]
    4b8a:	e7de      	b.n	4b4a <usb_device_endpoint_set_config+0x7e>
    4b8c:	2c00      	cmp	r4, #0
    4b8e:	db35      	blt.n	4bfc <usb_device_endpoint_set_config+0x130>
    4b90:	015d      	lsls	r5, r3, #5
    4b92:	6802      	ldr	r2, [r0, #0]
    4b94:	4694      	mov	ip, r2
    4b96:	4465      	add	r5, ip
    4b98:	2280      	movs	r2, #128	; 0x80
    4b9a:	0052      	lsls	r2, r2, #1
    4b9c:	5cae      	ldrb	r6, [r5, r2]
    4b9e:	3ae4      	subs	r2, #228	; 0xe4
    4ba0:	0776      	lsls	r6, r6, #29
    4ba2:	d129      	bne.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4ba4:	2680      	movs	r6, #128	; 0x80
    4ba6:	0076      	lsls	r6, r6, #1
    4ba8:	5daa      	ldrb	r2, [r5, r6]
    4baa:	2702      	movs	r7, #2
    4bac:	433a      	orrs	r2, r7
    4bae:	55aa      	strb	r2, [r5, r6]
    4bb0:	6802      	ldr	r2, [r0, #0]
    4bb2:	0018      	movs	r0, r3
    4bb4:	3008      	adds	r0, #8
    4bb6:	0140      	lsls	r0, r0, #5
    4bb8:	1812      	adds	r2, r2, r0
    4bba:	2040      	movs	r0, #64	; 0x40
    4bbc:	7150      	strb	r0, [r2, #5]
    4bbe:	0fe2      	lsrs	r2, r4, #31
    4bc0:	784f      	ldrb	r7, [r1, #1]
    4bc2:	005d      	lsls	r5, r3, #1
    4bc4:	18ad      	adds	r5, r5, r2
    4bc6:	012d      	lsls	r5, r5, #4
    4bc8:	4e4f      	ldr	r6, [pc, #316]	; (4d08 <usb_device_endpoint_set_config+0x23c>)
    4bca:	1975      	adds	r5, r6, r5
    4bcc:	6868      	ldr	r0, [r5, #4]
    4bce:	2407      	movs	r4, #7
    4bd0:	403c      	ands	r4, r7
    4bd2:	0724      	lsls	r4, r4, #28
    4bd4:	4e4d      	ldr	r6, [pc, #308]	; (4d0c <usb_device_endpoint_set_config+0x240>)
    4bd6:	4030      	ands	r0, r6
    4bd8:	4320      	orrs	r0, r4
    4bda:	6068      	str	r0, [r5, #4]
    4bdc:	7889      	ldrb	r1, [r1, #2]
    4bde:	2900      	cmp	r1, #0
    4be0:	d000      	beq.n	4be4 <usb_device_endpoint_set_config+0x118>
    4be2:	e088      	b.n	4cf6 <usb_device_endpoint_set_config+0x22a>
    4be4:	005b      	lsls	r3, r3, #1
    4be6:	189b      	adds	r3, r3, r2
    4be8:	011b      	lsls	r3, r3, #4
    4bea:	4a47      	ldr	r2, [pc, #284]	; (4d08 <usb_device_endpoint_set_config+0x23c>)
    4bec:	18d3      	adds	r3, r2, r3
    4bee:	685a      	ldr	r2, [r3, #4]
    4bf0:	0052      	lsls	r2, r2, #1
    4bf2:	0852      	lsrs	r2, r2, #1
    4bf4:	605a      	str	r2, [r3, #4]
    4bf6:	2200      	movs	r2, #0
    4bf8:	0010      	movs	r0, r2
    4bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4bfc:	015d      	lsls	r5, r3, #5
    4bfe:	6802      	ldr	r2, [r0, #0]
    4c00:	4694      	mov	ip, r2
    4c02:	4465      	add	r5, ip
    4c04:	2280      	movs	r2, #128	; 0x80
    4c06:	0052      	lsls	r2, r2, #1
    4c08:	5caf      	ldrb	r7, [r5, r2]
    4c0a:	2670      	movs	r6, #112	; 0x70
    4c0c:	3ae4      	subs	r2, #228	; 0xe4
    4c0e:	4237      	tst	r7, r6
    4c10:	d1f2      	bne.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4c12:	3690      	adds	r6, #144	; 0x90
    4c14:	5daa      	ldrb	r2, [r5, r6]
    4c16:	2720      	movs	r7, #32
    4c18:	433a      	orrs	r2, r7
    4c1a:	55aa      	strb	r2, [r5, r6]
    4c1c:	6802      	ldr	r2, [r0, #0]
    4c1e:	0018      	movs	r0, r3
    4c20:	3008      	adds	r0, #8
    4c22:	0140      	lsls	r0, r0, #5
    4c24:	1812      	adds	r2, r2, r0
    4c26:	2080      	movs	r0, #128	; 0x80
    4c28:	7110      	strb	r0, [r2, #4]
    4c2a:	e7c8      	b.n	4bbe <usb_device_endpoint_set_config+0xf2>
    4c2c:	2c00      	cmp	r4, #0
    4c2e:	db17      	blt.n	4c60 <usb_device_endpoint_set_config+0x194>
    4c30:	015d      	lsls	r5, r3, #5
    4c32:	6802      	ldr	r2, [r0, #0]
    4c34:	4694      	mov	ip, r2
    4c36:	4465      	add	r5, ip
    4c38:	2280      	movs	r2, #128	; 0x80
    4c3a:	0052      	lsls	r2, r2, #1
    4c3c:	5cae      	ldrb	r6, [r5, r2]
    4c3e:	3ae4      	subs	r2, #228	; 0xe4
    4c40:	0776      	lsls	r6, r6, #29
    4c42:	d1d9      	bne.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4c44:	2680      	movs	r6, #128	; 0x80
    4c46:	0076      	lsls	r6, r6, #1
    4c48:	5daa      	ldrb	r2, [r5, r6]
    4c4a:	2703      	movs	r7, #3
    4c4c:	433a      	orrs	r2, r7
    4c4e:	55aa      	strb	r2, [r5, r6]
    4c50:	6802      	ldr	r2, [r0, #0]
    4c52:	0018      	movs	r0, r3
    4c54:	3008      	adds	r0, #8
    4c56:	0140      	lsls	r0, r0, #5
    4c58:	1812      	adds	r2, r2, r0
    4c5a:	2040      	movs	r0, #64	; 0x40
    4c5c:	7150      	strb	r0, [r2, #5]
    4c5e:	e7ae      	b.n	4bbe <usb_device_endpoint_set_config+0xf2>
    4c60:	015d      	lsls	r5, r3, #5
    4c62:	6802      	ldr	r2, [r0, #0]
    4c64:	4694      	mov	ip, r2
    4c66:	4465      	add	r5, ip
    4c68:	2280      	movs	r2, #128	; 0x80
    4c6a:	0052      	lsls	r2, r2, #1
    4c6c:	5caf      	ldrb	r7, [r5, r2]
    4c6e:	2670      	movs	r6, #112	; 0x70
    4c70:	3ae4      	subs	r2, #228	; 0xe4
    4c72:	4237      	tst	r7, r6
    4c74:	d1c0      	bne.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4c76:	3690      	adds	r6, #144	; 0x90
    4c78:	5daa      	ldrb	r2, [r5, r6]
    4c7a:	2730      	movs	r7, #48	; 0x30
    4c7c:	433a      	orrs	r2, r7
    4c7e:	55aa      	strb	r2, [r5, r6]
    4c80:	6802      	ldr	r2, [r0, #0]
    4c82:	0018      	movs	r0, r3
    4c84:	3008      	adds	r0, #8
    4c86:	0140      	lsls	r0, r0, #5
    4c88:	1812      	adds	r2, r2, r0
    4c8a:	2080      	movs	r0, #128	; 0x80
    4c8c:	7110      	strb	r0, [r2, #4]
    4c8e:	e796      	b.n	4bbe <usb_device_endpoint_set_config+0xf2>
    4c90:	2c00      	cmp	r4, #0
    4c92:	db17      	blt.n	4cc4 <usb_device_endpoint_set_config+0x1f8>
    4c94:	015d      	lsls	r5, r3, #5
    4c96:	6802      	ldr	r2, [r0, #0]
    4c98:	4694      	mov	ip, r2
    4c9a:	4465      	add	r5, ip
    4c9c:	2280      	movs	r2, #128	; 0x80
    4c9e:	0052      	lsls	r2, r2, #1
    4ca0:	5cae      	ldrb	r6, [r5, r2]
    4ca2:	3ae4      	subs	r2, #228	; 0xe4
    4ca4:	0776      	lsls	r6, r6, #29
    4ca6:	d1a7      	bne.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4ca8:	2680      	movs	r6, #128	; 0x80
    4caa:	0076      	lsls	r6, r6, #1
    4cac:	5daa      	ldrb	r2, [r5, r6]
    4cae:	2704      	movs	r7, #4
    4cb0:	433a      	orrs	r2, r7
    4cb2:	55aa      	strb	r2, [r5, r6]
    4cb4:	6802      	ldr	r2, [r0, #0]
    4cb6:	0018      	movs	r0, r3
    4cb8:	3008      	adds	r0, #8
    4cba:	0140      	lsls	r0, r0, #5
    4cbc:	1812      	adds	r2, r2, r0
    4cbe:	2040      	movs	r0, #64	; 0x40
    4cc0:	7150      	strb	r0, [r2, #5]
    4cc2:	e77c      	b.n	4bbe <usb_device_endpoint_set_config+0xf2>
    4cc4:	015d      	lsls	r5, r3, #5
    4cc6:	6802      	ldr	r2, [r0, #0]
    4cc8:	4694      	mov	ip, r2
    4cca:	4465      	add	r5, ip
    4ccc:	2280      	movs	r2, #128	; 0x80
    4cce:	0052      	lsls	r2, r2, #1
    4cd0:	5caf      	ldrb	r7, [r5, r2]
    4cd2:	2670      	movs	r6, #112	; 0x70
    4cd4:	3ae4      	subs	r2, #228	; 0xe4
    4cd6:	4237      	tst	r7, r6
    4cd8:	d000      	beq.n	4cdc <usb_device_endpoint_set_config+0x210>
    4cda:	e78d      	b.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4cdc:	3690      	adds	r6, #144	; 0x90
    4cde:	5daa      	ldrb	r2, [r5, r6]
    4ce0:	2740      	movs	r7, #64	; 0x40
    4ce2:	433a      	orrs	r2, r7
    4ce4:	55aa      	strb	r2, [r5, r6]
    4ce6:	6802      	ldr	r2, [r0, #0]
    4ce8:	0018      	movs	r0, r3
    4cea:	3008      	adds	r0, #8
    4cec:	0140      	lsls	r0, r0, #5
    4cee:	1812      	adds	r2, r2, r0
    4cf0:	2080      	movs	r0, #128	; 0x80
    4cf2:	7110      	strb	r0, [r2, #4]
    4cf4:	e763      	b.n	4bbe <usb_device_endpoint_set_config+0xf2>
    4cf6:	6869      	ldr	r1, [r5, #4]
    4cf8:	2380      	movs	r3, #128	; 0x80
    4cfa:	061b      	lsls	r3, r3, #24
    4cfc:	430b      	orrs	r3, r1
    4cfe:	606b      	str	r3, [r5, #4]
    4d00:	2200      	movs	r2, #0
    4d02:	e779      	b.n	4bf8 <usb_device_endpoint_set_config+0x12c>
    4d04:	00008064 	.word	0x00008064
    4d08:	200005ec 	.word	0x200005ec
    4d0c:	8fffffff 	.word	0x8fffffff

00004d10 <usb_device_endpoint_abort_job>:
    4d10:	230f      	movs	r3, #15
    4d12:	400b      	ands	r3, r1
    4d14:	b249      	sxtb	r1, r1
    4d16:	2900      	cmp	r1, #0
    4d18:	db0a      	blt.n	4d30 <usb_device_endpoint_abort_job+0x20>
    4d1a:	3308      	adds	r3, #8
    4d1c:	015b      	lsls	r3, r3, #5
    4d1e:	6802      	ldr	r2, [r0, #0]
    4d20:	18d2      	adds	r2, r2, r3
    4d22:	2140      	movs	r1, #64	; 0x40
    4d24:	7151      	strb	r1, [r2, #5]
    4d26:	6802      	ldr	r2, [r0, #0]
    4d28:	18d3      	adds	r3, r2, r3
    4d2a:	2201      	movs	r2, #1
    4d2c:	71da      	strb	r2, [r3, #7]
    4d2e:	4770      	bx	lr
    4d30:	3308      	adds	r3, #8
    4d32:	015b      	lsls	r3, r3, #5
    4d34:	6802      	ldr	r2, [r0, #0]
    4d36:	18d2      	adds	r2, r2, r3
    4d38:	2180      	movs	r1, #128	; 0x80
    4d3a:	7111      	strb	r1, [r2, #4]
    4d3c:	6802      	ldr	r2, [r0, #0]
    4d3e:	18d3      	adds	r3, r2, r3
    4d40:	2202      	movs	r2, #2
    4d42:	71da      	strb	r2, [r3, #7]
    4d44:	e7f3      	b.n	4d2e <usb_device_endpoint_abort_job+0x1e>

00004d46 <usb_device_endpoint_is_halted>:
    4d46:	230f      	movs	r3, #15
    4d48:	400b      	ands	r3, r1
    4d4a:	b249      	sxtb	r1, r1
    4d4c:	2900      	cmp	r1, #0
    4d4e:	db07      	blt.n	4d60 <usb_device_endpoint_is_halted+0x1a>
    4d50:	6802      	ldr	r2, [r0, #0]
    4d52:	3308      	adds	r3, #8
    4d54:	015b      	lsls	r3, r3, #5
    4d56:	18d3      	adds	r3, r2, r3
    4d58:	7998      	ldrb	r0, [r3, #6]
    4d5a:	06c0      	lsls	r0, r0, #27
    4d5c:	0fc0      	lsrs	r0, r0, #31
    4d5e:	4770      	bx	lr
    4d60:	6802      	ldr	r2, [r0, #0]
    4d62:	3308      	adds	r3, #8
    4d64:	015b      	lsls	r3, r3, #5
    4d66:	18d3      	adds	r3, r2, r3
    4d68:	7998      	ldrb	r0, [r3, #6]
    4d6a:	0680      	lsls	r0, r0, #26
    4d6c:	0fc0      	lsrs	r0, r0, #31
    4d6e:	e7f6      	b.n	4d5e <usb_device_endpoint_is_halted+0x18>

00004d70 <usb_device_endpoint_set_halt>:
    4d70:	230f      	movs	r3, #15
    4d72:	400b      	ands	r3, r1
    4d74:	b249      	sxtb	r1, r1
    4d76:	2900      	cmp	r1, #0
    4d78:	db06      	blt.n	4d88 <usb_device_endpoint_set_halt+0x18>
    4d7a:	6802      	ldr	r2, [r0, #0]
    4d7c:	3308      	adds	r3, #8
    4d7e:	015b      	lsls	r3, r3, #5
    4d80:	18d3      	adds	r3, r2, r3
    4d82:	2210      	movs	r2, #16
    4d84:	715a      	strb	r2, [r3, #5]
    4d86:	4770      	bx	lr
    4d88:	6802      	ldr	r2, [r0, #0]
    4d8a:	3308      	adds	r3, #8
    4d8c:	015b      	lsls	r3, r3, #5
    4d8e:	18d3      	adds	r3, r2, r3
    4d90:	2220      	movs	r2, #32
    4d92:	715a      	strb	r2, [r3, #5]
    4d94:	e7f7      	b.n	4d86 <usb_device_endpoint_set_halt+0x16>

00004d96 <usb_device_endpoint_clear_halt>:
    4d96:	b530      	push	{r4, r5, lr}
    4d98:	230f      	movs	r3, #15
    4d9a:	400b      	ands	r3, r1
    4d9c:	b249      	sxtb	r1, r1
    4d9e:	2900      	cmp	r1, #0
    4da0:	db1d      	blt.n	4dde <usb_device_endpoint_clear_halt+0x48>
    4da2:	0159      	lsls	r1, r3, #5
    4da4:	6802      	ldr	r2, [r0, #0]
    4da6:	1852      	adds	r2, r2, r1
    4da8:	2483      	movs	r4, #131	; 0x83
    4daa:	0064      	lsls	r4, r4, #1
    4dac:	5d14      	ldrb	r4, [r2, r4]
    4dae:	06e4      	lsls	r4, r4, #27
    4db0:	d514      	bpl.n	4ddc <usb_device_endpoint_clear_halt+0x46>
    4db2:	2510      	movs	r5, #16
    4db4:	2482      	movs	r4, #130	; 0x82
    4db6:	0064      	lsls	r4, r4, #1
    4db8:	5515      	strb	r5, [r2, r4]
    4dba:	6802      	ldr	r2, [r0, #0]
    4dbc:	1852      	adds	r2, r2, r1
    4dbe:	2108      	movs	r1, #8
    4dc0:	31ff      	adds	r1, #255	; 0xff
    4dc2:	5c51      	ldrb	r1, [r2, r1]
    4dc4:	0689      	lsls	r1, r1, #26
    4dc6:	d509      	bpl.n	4ddc <usb_device_endpoint_clear_halt+0x46>
    4dc8:	3ce4      	subs	r4, #228	; 0xe4
    4dca:	2108      	movs	r1, #8
    4dcc:	31ff      	adds	r1, #255	; 0xff
    4dce:	5454      	strb	r4, [r2, r1]
    4dd0:	6802      	ldr	r2, [r0, #0]
    4dd2:	3308      	adds	r3, #8
    4dd4:	015b      	lsls	r3, r3, #5
    4dd6:	18d3      	adds	r3, r2, r3
    4dd8:	2201      	movs	r2, #1
    4dda:	711a      	strb	r2, [r3, #4]
    4ddc:	bd30      	pop	{r4, r5, pc}
    4dde:	0159      	lsls	r1, r3, #5
    4de0:	6802      	ldr	r2, [r0, #0]
    4de2:	1852      	adds	r2, r2, r1
    4de4:	2483      	movs	r4, #131	; 0x83
    4de6:	0064      	lsls	r4, r4, #1
    4de8:	5d14      	ldrb	r4, [r2, r4]
    4dea:	06a4      	lsls	r4, r4, #26
    4dec:	d5f6      	bpl.n	4ddc <usb_device_endpoint_clear_halt+0x46>
    4dee:	2520      	movs	r5, #32
    4df0:	2482      	movs	r4, #130	; 0x82
    4df2:	0064      	lsls	r4, r4, #1
    4df4:	5515      	strb	r5, [r2, r4]
    4df6:	6802      	ldr	r2, [r0, #0]
    4df8:	1852      	adds	r2, r2, r1
    4dfa:	2108      	movs	r1, #8
    4dfc:	31ff      	adds	r1, #255	; 0xff
    4dfe:	5c51      	ldrb	r1, [r2, r1]
    4e00:	0649      	lsls	r1, r1, #25
    4e02:	d5eb      	bpl.n	4ddc <usb_device_endpoint_clear_halt+0x46>
    4e04:	3cc4      	subs	r4, #196	; 0xc4
    4e06:	2108      	movs	r1, #8
    4e08:	31ff      	adds	r1, #255	; 0xff
    4e0a:	5454      	strb	r4, [r2, r1]
    4e0c:	6802      	ldr	r2, [r0, #0]
    4e0e:	3308      	adds	r3, #8
    4e10:	015b      	lsls	r3, r3, #5
    4e12:	18d3      	adds	r3, r2, r3
    4e14:	2202      	movs	r2, #2
    4e16:	711a      	strb	r2, [r3, #4]
    4e18:	e7e0      	b.n	4ddc <usb_device_endpoint_clear_halt+0x46>
	...

00004e1c <usb_device_endpoint_write_buffer_job>:
    4e1c:	b530      	push	{r4, r5, lr}
    4e1e:	000c      	movs	r4, r1
    4e20:	3408      	adds	r4, #8
    4e22:	0164      	lsls	r4, r4, #5
    4e24:	6805      	ldr	r5, [r0, #0]
    4e26:	5d64      	ldrb	r4, [r4, r5]
    4e28:	0664      	lsls	r4, r4, #25
    4e2a:	0f64      	lsrs	r4, r4, #29
    4e2c:	251c      	movs	r5, #28
    4e2e:	2c00      	cmp	r4, #0
    4e30:	d101      	bne.n	4e36 <usb_device_endpoint_write_buffer_job+0x1a>
    4e32:	0028      	movs	r0, r5
    4e34:	bd30      	pop	{r4, r5, pc}
    4e36:	014c      	lsls	r4, r1, #5
    4e38:	4d0b      	ldr	r5, [pc, #44]	; (4e68 <usb_device_endpoint_write_buffer_job+0x4c>)
    4e3a:	192d      	adds	r5, r5, r4
    4e3c:	002c      	movs	r4, r5
    4e3e:	612a      	str	r2, [r5, #16]
    4e40:	696a      	ldr	r2, [r5, #20]
    4e42:	4d0a      	ldr	r5, [pc, #40]	; (4e6c <usb_device_endpoint_write_buffer_job+0x50>)
    4e44:	402a      	ands	r2, r5
    4e46:	6162      	str	r2, [r4, #20]
    4e48:	6962      	ldr	r2, [r4, #20]
    4e4a:	049b      	lsls	r3, r3, #18
    4e4c:	0c9b      	lsrs	r3, r3, #18
    4e4e:	0b92      	lsrs	r2, r2, #14
    4e50:	0392      	lsls	r2, r2, #14
    4e52:	4313      	orrs	r3, r2
    4e54:	6163      	str	r3, [r4, #20]
    4e56:	6803      	ldr	r3, [r0, #0]
    4e58:	3108      	adds	r1, #8
    4e5a:	0149      	lsls	r1, r1, #5
    4e5c:	1859      	adds	r1, r3, r1
    4e5e:	2380      	movs	r3, #128	; 0x80
    4e60:	714b      	strb	r3, [r1, #5]
    4e62:	2500      	movs	r5, #0
    4e64:	e7e5      	b.n	4e32 <usb_device_endpoint_write_buffer_job+0x16>
    4e66:	46c0      	nop			; (mov r8, r8)
    4e68:	200005ec 	.word	0x200005ec
    4e6c:	f0003fff 	.word	0xf0003fff

00004e70 <usb_device_endpoint_read_buffer_job>:
    4e70:	b530      	push	{r4, r5, lr}
    4e72:	000c      	movs	r4, r1
    4e74:	3408      	adds	r4, #8
    4e76:	0164      	lsls	r4, r4, #5
    4e78:	6805      	ldr	r5, [r0, #0]
    4e7a:	5d64      	ldrb	r4, [r4, r5]
    4e7c:	0764      	lsls	r4, r4, #29
    4e7e:	251c      	movs	r5, #28
    4e80:	2c00      	cmp	r4, #0
    4e82:	d101      	bne.n	4e88 <usb_device_endpoint_read_buffer_job+0x18>
    4e84:	0028      	movs	r0, r5
    4e86:	bd30      	pop	{r4, r5, pc}
    4e88:	4c0b      	ldr	r4, [pc, #44]	; (4eb8 <usb_device_endpoint_read_buffer_job+0x48>)
    4e8a:	014d      	lsls	r5, r1, #5
    4e8c:	512a      	str	r2, [r5, r4]
    4e8e:	1962      	adds	r2, r4, r5
    4e90:	6854      	ldr	r4, [r2, #4]
    4e92:	049b      	lsls	r3, r3, #18
    4e94:	091b      	lsrs	r3, r3, #4
    4e96:	4d09      	ldr	r5, [pc, #36]	; (4ebc <usb_device_endpoint_read_buffer_job+0x4c>)
    4e98:	402c      	ands	r4, r5
    4e9a:	4323      	orrs	r3, r4
    4e9c:	6053      	str	r3, [r2, #4]
    4e9e:	6853      	ldr	r3, [r2, #4]
    4ea0:	0b9b      	lsrs	r3, r3, #14
    4ea2:	039b      	lsls	r3, r3, #14
    4ea4:	6053      	str	r3, [r2, #4]
    4ea6:	6803      	ldr	r3, [r0, #0]
    4ea8:	3108      	adds	r1, #8
    4eaa:	0149      	lsls	r1, r1, #5
    4eac:	1859      	adds	r1, r3, r1
    4eae:	2340      	movs	r3, #64	; 0x40
    4eb0:	710b      	strb	r3, [r1, #4]
    4eb2:	2500      	movs	r5, #0
    4eb4:	e7e6      	b.n	4e84 <usb_device_endpoint_read_buffer_job+0x14>
    4eb6:	46c0      	nop			; (mov r8, r8)
    4eb8:	200005ec 	.word	0x200005ec
    4ebc:	f0003fff 	.word	0xf0003fff

00004ec0 <usb_device_endpoint_setup_buffer_job>:
    4ec0:	4b09      	ldr	r3, [pc, #36]	; (4ee8 <usb_device_endpoint_setup_buffer_job+0x28>)
    4ec2:	6019      	str	r1, [r3, #0]
    4ec4:	685a      	ldr	r2, [r3, #4]
    4ec6:	4909      	ldr	r1, [pc, #36]	; (4eec <usb_device_endpoint_setup_buffer_job+0x2c>)
    4ec8:	4011      	ands	r1, r2
    4eca:	2280      	movs	r2, #128	; 0x80
    4ecc:	0292      	lsls	r2, r2, #10
    4ece:	430a      	orrs	r2, r1
    4ed0:	605a      	str	r2, [r3, #4]
    4ed2:	685a      	ldr	r2, [r3, #4]
    4ed4:	0b92      	lsrs	r2, r2, #14
    4ed6:	0392      	lsls	r2, r2, #14
    4ed8:	605a      	str	r2, [r3, #4]
    4eda:	6802      	ldr	r2, [r0, #0]
    4edc:	2140      	movs	r1, #64	; 0x40
    4ede:	2382      	movs	r3, #130	; 0x82
    4ee0:	005b      	lsls	r3, r3, #1
    4ee2:	54d1      	strb	r1, [r2, r3]
    4ee4:	2000      	movs	r0, #0
    4ee6:	4770      	bx	lr
    4ee8:	200005ec 	.word	0x200005ec
    4eec:	f0003fff 	.word	0xf0003fff

00004ef0 <usb_enable>:
    4ef0:	6802      	ldr	r2, [r0, #0]
    4ef2:	7813      	ldrb	r3, [r2, #0]
    4ef4:	2102      	movs	r1, #2
    4ef6:	430b      	orrs	r3, r1
    4ef8:	7013      	strb	r3, [r2, #0]
    4efa:	6802      	ldr	r2, [r0, #0]
    4efc:	7893      	ldrb	r3, [r2, #2]
    4efe:	2b02      	cmp	r3, #2
    4f00:	d0fc      	beq.n	4efc <usb_enable+0xc>
    4f02:	4770      	bx	lr

00004f04 <USB_Handler>:
    4f04:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f06:	46de      	mov	lr, fp
    4f08:	4657      	mov	r7, sl
    4f0a:	464e      	mov	r6, r9
    4f0c:	4645      	mov	r5, r8
    4f0e:	b5e0      	push	{r5, r6, r7, lr}
    4f10:	b083      	sub	sp, #12
    4f12:	4bc0      	ldr	r3, [pc, #768]	; (5214 <USB_Handler+0x310>)
    4f14:	681f      	ldr	r7, [r3, #0]
    4f16:	683d      	ldr	r5, [r7, #0]
    4f18:	782b      	ldrb	r3, [r5, #0]
    4f1a:	09db      	lsrs	r3, r3, #7
    4f1c:	d114      	bne.n	4f48 <USB_Handler+0x44>
    4f1e:	8c2e      	ldrh	r6, [r5, #32]
    4f20:	b2b6      	uxth	r6, r6
    4f22:	2e00      	cmp	r6, #0
    4f24:	d000      	beq.n	4f28 <USB_Handler+0x24>
    4f26:	e1a5      	b.n	5274 <USB_Handler+0x370>
    4f28:	8bae      	ldrh	r6, [r5, #28]
    4f2a:	b2b6      	uxth	r6, r6
    4f2c:	23ab      	movs	r3, #171	; 0xab
    4f2e:	005b      	lsls	r3, r3, #1
    4f30:	5afb      	ldrh	r3, [r7, r3]
    4f32:	22aa      	movs	r2, #170	; 0xaa
    4f34:	0052      	lsls	r2, r2, #1
    4f36:	5abd      	ldrh	r5, [r7, r2]
    4f38:	401d      	ands	r5, r3
    4f3a:	4035      	ands	r5, r6
    4f3c:	2400      	movs	r4, #0
    4f3e:	4fb6      	ldr	r7, [pc, #728]	; (5218 <USB_Handler+0x314>)
    4f40:	4bb4      	ldr	r3, [pc, #720]	; (5214 <USB_Handler+0x310>)
    4f42:	4699      	mov	r9, r3
    4f44:	4698      	mov	r8, r3
    4f46:	e180      	b.n	524a <USB_Handler+0x346>
    4f48:	8c28      	ldrh	r0, [r5, #32]
    4f4a:	b280      	uxth	r0, r0
    4f4c:	4bb3      	ldr	r3, [pc, #716]	; (521c <USB_Handler+0x318>)
    4f4e:	4798      	blx	r3
    4f50:	0004      	movs	r4, r0
    4f52:	281f      	cmp	r0, #31
    4f54:	d900      	bls.n	4f58 <USB_Handler+0x54>
    4f56:	e0d6      	b.n	5106 <USB_Handler+0x202>
    4f58:	0003      	movs	r3, r0
    4f5a:	3308      	adds	r3, #8
    4f5c:	015b      	lsls	r3, r3, #5
    4f5e:	18ed      	adds	r5, r5, r3
    4f60:	79ed      	ldrb	r5, [r5, #7]
    4f62:	b2ed      	uxtb	r5, r5
    4f64:	07ab      	lsls	r3, r5, #30
    4f66:	d041      	beq.n	4fec <USB_Handler+0xe8>
    4f68:	4aad      	ldr	r2, [pc, #692]	; (5220 <USB_Handler+0x31c>)
    4f6a:	2301      	movs	r3, #1
    4f6c:	4083      	lsls	r3, r0
    4f6e:	6811      	ldr	r1, [r2, #0]
    4f70:	4399      	bics	r1, r3
    4f72:	6011      	str	r1, [r2, #0]
    4f74:	0003      	movs	r3, r0
    4f76:	3308      	adds	r3, #8
    4f78:	015b      	lsls	r3, r3, #5
    4f7a:	683a      	ldr	r2, [r7, #0]
    4f7c:	4694      	mov	ip, r2
    4f7e:	4463      	add	r3, ip
    4f80:	2203      	movs	r2, #3
    4f82:	71da      	strb	r2, [r3, #7]
    4f84:	183b      	adds	r3, r7, r0
    4f86:	33ae      	adds	r3, #174	; 0xae
    4f88:	781b      	ldrb	r3, [r3, #0]
    4f8a:	07db      	lsls	r3, r3, #31
    4f8c:	d52e      	bpl.n	4fec <USB_Handler+0xe8>
    4f8e:	4ba5      	ldr	r3, [pc, #660]	; (5224 <USB_Handler+0x320>)
    4f90:	7018      	strb	r0, [r3, #0]
    4f92:	683a      	ldr	r2, [r7, #0]
    4f94:	0003      	movs	r3, r0
    4f96:	3308      	adds	r3, #8
    4f98:	015b      	lsls	r3, r3, #5
    4f9a:	5c9b      	ldrb	r3, [r3, r2]
    4f9c:	079b      	lsls	r3, r3, #30
    4f9e:	0f9b      	lsrs	r3, r3, #30
    4fa0:	2b01      	cmp	r3, #1
    4fa2:	d100      	bne.n	4fa6 <USB_Handler+0xa2>
    4fa4:	e081      	b.n	50aa <USB_Handler+0x1a6>
    4fa6:	0142      	lsls	r2, r0, #5
    4fa8:	4b9f      	ldr	r3, [pc, #636]	; (5228 <USB_Handler+0x324>)
    4faa:	189b      	adds	r3, r3, r2
    4fac:	685a      	ldr	r2, [r3, #4]
    4fae:	0112      	lsls	r2, r2, #4
    4fb0:	0c92      	lsrs	r2, r2, #18
    4fb2:	b290      	uxth	r0, r2
    4fb4:	499b      	ldr	r1, [pc, #620]	; (5224 <USB_Handler+0x320>)
    4fb6:	804a      	strh	r2, [r1, #2]
    4fb8:	685a      	ldr	r2, [r3, #4]
    4fba:	0492      	lsls	r2, r2, #18
    4fbc:	0c92      	lsrs	r2, r2, #18
    4fbe:	808a      	strh	r2, [r1, #4]
    4fc0:	685a      	ldr	r2, [r3, #4]
    4fc2:	499a      	ldr	r1, [pc, #616]	; (522c <USB_Handler+0x328>)
    4fc4:	400a      	ands	r2, r1
    4fc6:	605a      	str	r2, [r3, #4]
    4fc8:	2800      	cmp	r0, #0
    4fca:	d107      	bne.n	4fdc <USB_Handler+0xd8>
    4fcc:	0162      	lsls	r2, r4, #5
    4fce:	4b96      	ldr	r3, [pc, #600]	; (5228 <USB_Handler+0x324>)
    4fd0:	189b      	adds	r3, r3, r2
    4fd2:	685b      	ldr	r3, [r3, #4]
    4fd4:	049b      	lsls	r3, r3, #18
    4fd6:	0c9b      	lsrs	r3, r3, #18
    4fd8:	4a92      	ldr	r2, [pc, #584]	; (5224 <USB_Handler+0x320>)
    4fda:	8053      	strh	r3, [r2, #2]
    4fdc:	4b8d      	ldr	r3, [pc, #564]	; (5214 <USB_Handler+0x310>)
    4fde:	6818      	ldr	r0, [r3, #0]
    4fe0:	1ca3      	adds	r3, r4, #2
    4fe2:	011b      	lsls	r3, r3, #4
    4fe4:	18c3      	adds	r3, r0, r3
    4fe6:	685b      	ldr	r3, [r3, #4]
    4fe8:	498e      	ldr	r1, [pc, #568]	; (5224 <USB_Handler+0x320>)
    4fea:	4798      	blx	r3
    4fec:	076b      	lsls	r3, r5, #29
    4fee:	d50e      	bpl.n	500e <USB_Handler+0x10a>
    4ff0:	4a8b      	ldr	r2, [pc, #556]	; (5220 <USB_Handler+0x31c>)
    4ff2:	2301      	movs	r3, #1
    4ff4:	40a3      	lsls	r3, r4
    4ff6:	6811      	ldr	r1, [r2, #0]
    4ff8:	4399      	bics	r1, r3
    4ffa:	6011      	str	r1, [r2, #0]
    4ffc:	4b85      	ldr	r3, [pc, #532]	; (5214 <USB_Handler+0x310>)
    4ffe:	681b      	ldr	r3, [r3, #0]
    5000:	681b      	ldr	r3, [r3, #0]
    5002:	0022      	movs	r2, r4
    5004:	3208      	adds	r2, #8
    5006:	0152      	lsls	r2, r2, #5
    5008:	189b      	adds	r3, r3, r2
    500a:	2204      	movs	r2, #4
    500c:	71da      	strb	r2, [r3, #7]
    500e:	072b      	lsls	r3, r5, #28
    5010:	d514      	bpl.n	503c <USB_Handler+0x138>
    5012:	4a83      	ldr	r2, [pc, #524]	; (5220 <USB_Handler+0x31c>)
    5014:	2301      	movs	r3, #1
    5016:	40a3      	lsls	r3, r4
    5018:	6811      	ldr	r1, [r2, #0]
    501a:	4399      	bics	r1, r3
    501c:	6011      	str	r1, [r2, #0]
    501e:	4b7d      	ldr	r3, [pc, #500]	; (5214 <USB_Handler+0x310>)
    5020:	6818      	ldr	r0, [r3, #0]
    5022:	0023      	movs	r3, r4
    5024:	3308      	adds	r3, #8
    5026:	015b      	lsls	r3, r3, #5
    5028:	6802      	ldr	r2, [r0, #0]
    502a:	4694      	mov	ip, r2
    502c:	4463      	add	r3, ip
    502e:	2208      	movs	r2, #8
    5030:	71da      	strb	r2, [r3, #7]
    5032:	1903      	adds	r3, r0, r4
    5034:	33ae      	adds	r3, #174	; 0xae
    5036:	781b      	ldrb	r3, [r3, #0]
    5038:	079b      	lsls	r3, r3, #30
    503a:	d447      	bmi.n	50cc <USB_Handler+0x1c8>
    503c:	06eb      	lsls	r3, r5, #27
    503e:	d514      	bpl.n	506a <USB_Handler+0x166>
    5040:	4a77      	ldr	r2, [pc, #476]	; (5220 <USB_Handler+0x31c>)
    5042:	2301      	movs	r3, #1
    5044:	40a3      	lsls	r3, r4
    5046:	6811      	ldr	r1, [r2, #0]
    5048:	4399      	bics	r1, r3
    504a:	6011      	str	r1, [r2, #0]
    504c:	4b71      	ldr	r3, [pc, #452]	; (5214 <USB_Handler+0x310>)
    504e:	6818      	ldr	r0, [r3, #0]
    5050:	0023      	movs	r3, r4
    5052:	3308      	adds	r3, #8
    5054:	015b      	lsls	r3, r3, #5
    5056:	6802      	ldr	r2, [r0, #0]
    5058:	4694      	mov	ip, r2
    505a:	4463      	add	r3, ip
    505c:	2210      	movs	r2, #16
    505e:	71da      	strb	r2, [r3, #7]
    5060:	1903      	adds	r3, r0, r4
    5062:	33ae      	adds	r3, #174	; 0xae
    5064:	781b      	ldrb	r3, [r3, #0]
    5066:	075b      	lsls	r3, r3, #29
    5068:	d43e      	bmi.n	50e8 <USB_Handler+0x1e4>
    506a:	06ab      	lsls	r3, r5, #26
    506c:	d400      	bmi.n	5070 <USB_Handler+0x16c>
    506e:	e0b0      	b.n	51d2 <USB_Handler+0x2ce>
    5070:	4a6b      	ldr	r2, [pc, #428]	; (5220 <USB_Handler+0x31c>)
    5072:	2301      	movs	r3, #1
    5074:	40a3      	lsls	r3, r4
    5076:	6811      	ldr	r1, [r2, #0]
    5078:	4399      	bics	r1, r3
    507a:	6011      	str	r1, [r2, #0]
    507c:	4b65      	ldr	r3, [pc, #404]	; (5214 <USB_Handler+0x310>)
    507e:	6818      	ldr	r0, [r3, #0]
    5080:	0023      	movs	r3, r4
    5082:	3308      	adds	r3, #8
    5084:	015b      	lsls	r3, r3, #5
    5086:	6802      	ldr	r2, [r0, #0]
    5088:	4694      	mov	ip, r2
    508a:	4463      	add	r3, ip
    508c:	2220      	movs	r2, #32
    508e:	71da      	strb	r2, [r3, #7]
    5090:	1903      	adds	r3, r0, r4
    5092:	33ae      	adds	r3, #174	; 0xae
    5094:	781b      	ldrb	r3, [r3, #0]
    5096:	071b      	lsls	r3, r3, #28
    5098:	d400      	bmi.n	509c <USB_Handler+0x198>
    509a:	e09a      	b.n	51d2 <USB_Handler+0x2ce>
    509c:	4961      	ldr	r1, [pc, #388]	; (5224 <USB_Handler+0x320>)
    509e:	700c      	strb	r4, [r1, #0]
    50a0:	0124      	lsls	r4, r4, #4
    50a2:	1904      	adds	r4, r0, r4
    50a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
    50a6:	4798      	blx	r3
    50a8:	e093      	b.n	51d2 <USB_Handler+0x2ce>
    50aa:	0142      	lsls	r2, r0, #5
    50ac:	4b5e      	ldr	r3, [pc, #376]	; (5228 <USB_Handler+0x324>)
    50ae:	189b      	adds	r3, r3, r2
    50b0:	685a      	ldr	r2, [r3, #4]
    50b2:	0492      	lsls	r2, r2, #18
    50b4:	0c92      	lsrs	r2, r2, #18
    50b6:	495b      	ldr	r1, [pc, #364]	; (5224 <USB_Handler+0x320>)
    50b8:	804a      	strh	r2, [r1, #2]
    50ba:	685a      	ldr	r2, [r3, #4]
    50bc:	0112      	lsls	r2, r2, #4
    50be:	0c92      	lsrs	r2, r2, #18
    50c0:	808a      	strh	r2, [r1, #4]
    50c2:	685a      	ldr	r2, [r3, #4]
    50c4:	0b92      	lsrs	r2, r2, #14
    50c6:	0392      	lsls	r2, r2, #14
    50c8:	605a      	str	r2, [r3, #4]
    50ca:	e787      	b.n	4fdc <USB_Handler+0xd8>
    50cc:	4955      	ldr	r1, [pc, #340]	; (5224 <USB_Handler+0x320>)
    50ce:	700c      	strb	r4, [r1, #0]
    50d0:	0162      	lsls	r2, r4, #5
    50d2:	4b55      	ldr	r3, [pc, #340]	; (5228 <USB_Handler+0x324>)
    50d4:	189b      	adds	r3, r3, r2
    50d6:	89db      	ldrh	r3, [r3, #14]
    50d8:	221f      	movs	r2, #31
    50da:	4013      	ands	r3, r2
    50dc:	704b      	strb	r3, [r1, #1]
    50de:	0123      	lsls	r3, r4, #4
    50e0:	18c3      	adds	r3, r0, r3
    50e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    50e4:	4798      	blx	r3
    50e6:	e7a9      	b.n	503c <USB_Handler+0x138>
    50e8:	494e      	ldr	r1, [pc, #312]	; (5224 <USB_Handler+0x320>)
    50ea:	700c      	strb	r4, [r1, #0]
    50ec:	0162      	lsls	r2, r4, #5
    50ee:	4b4e      	ldr	r3, [pc, #312]	; (5228 <USB_Handler+0x324>)
    50f0:	189b      	adds	r3, r3, r2
    50f2:	685b      	ldr	r3, [r3, #4]
    50f4:	011b      	lsls	r3, r3, #4
    50f6:	0c9b      	lsrs	r3, r3, #18
    50f8:	804b      	strh	r3, [r1, #2]
    50fa:	0123      	lsls	r3, r4, #4
    50fc:	18c3      	adds	r3, r0, r3
    50fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    5100:	2100      	movs	r1, #0
    5102:	4798      	blx	r3
    5104:	e7b1      	b.n	506a <USB_Handler+0x166>
    5106:	8bac      	ldrh	r4, [r5, #28]
    5108:	b2a4      	uxth	r4, r4
    510a:	0763      	lsls	r3, r4, #29
    510c:	d505      	bpl.n	511a <USB_Handler+0x216>
    510e:	2304      	movs	r3, #4
    5110:	83ab      	strh	r3, [r5, #28]
    5112:	33a1      	adds	r3, #161	; 0xa1
    5114:	5cfb      	ldrb	r3, [r7, r3]
    5116:	07db      	lsls	r3, r3, #31
    5118:	d462      	bmi.n	51e0 <USB_Handler+0x2dc>
    511a:	0723      	lsls	r3, r4, #28
    511c:	d50b      	bpl.n	5136 <USB_Handler+0x232>
    511e:	2200      	movs	r2, #0
    5120:	4b3f      	ldr	r3, [pc, #252]	; (5220 <USB_Handler+0x31c>)
    5122:	601a      	str	r2, [r3, #0]
    5124:	4b3b      	ldr	r3, [pc, #236]	; (5214 <USB_Handler+0x310>)
    5126:	6818      	ldr	r0, [r3, #0]
    5128:	2308      	movs	r3, #8
    512a:	6802      	ldr	r2, [r0, #0]
    512c:	8393      	strh	r3, [r2, #28]
    512e:	339d      	adds	r3, #157	; 0x9d
    5130:	5cc3      	ldrb	r3, [r0, r3]
    5132:	079b      	lsls	r3, r3, #30
    5134:	d458      	bmi.n	51e8 <USB_Handler+0x2e4>
    5136:	0663      	lsls	r3, r4, #25
    5138:	d508      	bpl.n	514c <USB_Handler+0x248>
    513a:	4b36      	ldr	r3, [pc, #216]	; (5214 <USB_Handler+0x310>)
    513c:	6818      	ldr	r0, [r3, #0]
    513e:	2340      	movs	r3, #64	; 0x40
    5140:	6802      	ldr	r2, [r0, #0]
    5142:	8393      	strh	r3, [r2, #28]
    5144:	3365      	adds	r3, #101	; 0x65
    5146:	5cc3      	ldrb	r3, [r0, r3]
    5148:	06db      	lsls	r3, r3, #27
    514a:	d450      	bmi.n	51ee <USB_Handler+0x2ea>
    514c:	06a3      	lsls	r3, r4, #26
    514e:	d508      	bpl.n	5162 <USB_Handler+0x25e>
    5150:	4b30      	ldr	r3, [pc, #192]	; (5214 <USB_Handler+0x310>)
    5152:	6818      	ldr	r0, [r3, #0]
    5154:	2320      	movs	r3, #32
    5156:	6802      	ldr	r2, [r0, #0]
    5158:	8393      	strh	r3, [r2, #28]
    515a:	3385      	adds	r3, #133	; 0x85
    515c:	5cc3      	ldrb	r3, [r0, r3]
    515e:	071b      	lsls	r3, r3, #28
    5160:	d448      	bmi.n	51f4 <USB_Handler+0x2f0>
    5162:	06e3      	lsls	r3, r4, #27
    5164:	d508      	bpl.n	5178 <USB_Handler+0x274>
    5166:	4b2b      	ldr	r3, [pc, #172]	; (5214 <USB_Handler+0x310>)
    5168:	6818      	ldr	r0, [r3, #0]
    516a:	2310      	movs	r3, #16
    516c:	6802      	ldr	r2, [r0, #0]
    516e:	8393      	strh	r3, [r2, #28]
    5170:	3395      	adds	r3, #149	; 0x95
    5172:	5cc3      	ldrb	r3, [r0, r3]
    5174:	075b      	lsls	r3, r3, #29
    5176:	d440      	bmi.n	51fa <USB_Handler+0x2f6>
    5178:	0623      	lsls	r3, r4, #24
    517a:	d50b      	bpl.n	5194 <USB_Handler+0x290>
    517c:	2200      	movs	r2, #0
    517e:	4b28      	ldr	r3, [pc, #160]	; (5220 <USB_Handler+0x31c>)
    5180:	601a      	str	r2, [r3, #0]
    5182:	4b24      	ldr	r3, [pc, #144]	; (5214 <USB_Handler+0x310>)
    5184:	6818      	ldr	r0, [r3, #0]
    5186:	2380      	movs	r3, #128	; 0x80
    5188:	6802      	ldr	r2, [r0, #0]
    518a:	8393      	strh	r3, [r2, #28]
    518c:	3325      	adds	r3, #37	; 0x25
    518e:	5cc3      	ldrb	r3, [r0, r3]
    5190:	069b      	lsls	r3, r3, #26
    5192:	d435      	bmi.n	5200 <USB_Handler+0x2fc>
    5194:	05e3      	lsls	r3, r4, #23
    5196:	d50c      	bpl.n	51b2 <USB_Handler+0x2ae>
    5198:	2200      	movs	r2, #0
    519a:	4b21      	ldr	r3, [pc, #132]	; (5220 <USB_Handler+0x31c>)
    519c:	601a      	str	r2, [r3, #0]
    519e:	4b1d      	ldr	r3, [pc, #116]	; (5214 <USB_Handler+0x310>)
    51a0:	6818      	ldr	r0, [r3, #0]
    51a2:	2380      	movs	r3, #128	; 0x80
    51a4:	005b      	lsls	r3, r3, #1
    51a6:	6802      	ldr	r2, [r0, #0]
    51a8:	8393      	strh	r3, [r2, #28]
    51aa:	3b5b      	subs	r3, #91	; 0x5b
    51ac:	5cc3      	ldrb	r3, [r0, r3]
    51ae:	065b      	lsls	r3, r3, #25
    51b0:	d429      	bmi.n	5206 <USB_Handler+0x302>
    51b2:	05a3      	lsls	r3, r4, #22
    51b4:	d50d      	bpl.n	51d2 <USB_Handler+0x2ce>
    51b6:	2200      	movs	r2, #0
    51b8:	4b19      	ldr	r3, [pc, #100]	; (5220 <USB_Handler+0x31c>)
    51ba:	601a      	str	r2, [r3, #0]
    51bc:	4b15      	ldr	r3, [pc, #84]	; (5214 <USB_Handler+0x310>)
    51be:	6818      	ldr	r0, [r3, #0]
    51c0:	2380      	movs	r3, #128	; 0x80
    51c2:	009b      	lsls	r3, r3, #2
    51c4:	6802      	ldr	r2, [r0, #0]
    51c6:	8393      	strh	r3, [r2, #28]
    51c8:	3b5c      	subs	r3, #92	; 0x5c
    51ca:	3bff      	subs	r3, #255	; 0xff
    51cc:	5cc3      	ldrb	r3, [r0, r3]
    51ce:	2b7f      	cmp	r3, #127	; 0x7f
    51d0:	d81c      	bhi.n	520c <USB_Handler+0x308>
    51d2:	b003      	add	sp, #12
    51d4:	bc3c      	pop	{r2, r3, r4, r5}
    51d6:	4690      	mov	r8, r2
    51d8:	4699      	mov	r9, r3
    51da:	46a2      	mov	sl, r4
    51dc:	46ab      	mov	fp, r5
    51de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    51e0:	687b      	ldr	r3, [r7, #4]
    51e2:	0038      	movs	r0, r7
    51e4:	4798      	blx	r3
    51e6:	e798      	b.n	511a <USB_Handler+0x216>
    51e8:	6883      	ldr	r3, [r0, #8]
    51ea:	4798      	blx	r3
    51ec:	e7a3      	b.n	5136 <USB_Handler+0x232>
    51ee:	6943      	ldr	r3, [r0, #20]
    51f0:	4798      	blx	r3
    51f2:	e7ab      	b.n	514c <USB_Handler+0x248>
    51f4:	6903      	ldr	r3, [r0, #16]
    51f6:	4798      	blx	r3
    51f8:	e7b3      	b.n	5162 <USB_Handler+0x25e>
    51fa:	68c3      	ldr	r3, [r0, #12]
    51fc:	4798      	blx	r3
    51fe:	e7bb      	b.n	5178 <USB_Handler+0x274>
    5200:	6983      	ldr	r3, [r0, #24]
    5202:	4798      	blx	r3
    5204:	e7c6      	b.n	5194 <USB_Handler+0x290>
    5206:	69c3      	ldr	r3, [r0, #28]
    5208:	4798      	blx	r3
    520a:	e7d2      	b.n	51b2 <USB_Handler+0x2ae>
    520c:	6a03      	ldr	r3, [r0, #32]
    520e:	4798      	blx	r3
    5210:	e7df      	b.n	51d2 <USB_Handler+0x2ce>
    5212:	46c0      	nop			; (mov r8, r8)
    5214:	20000220 	.word	0x20000220
    5218:	00008078 	.word	0x00008078
    521c:	00006021 	.word	0x00006021
    5220:	20000230 	.word	0x20000230
    5224:	20000234 	.word	0x20000234
    5228:	200005ec 	.word	0x200005ec
    522c:	f0003fff 	.word	0xf0003fff
    5230:	0023      	movs	r3, r4
    5232:	332e      	adds	r3, #46	; 0x2e
    5234:	009b      	lsls	r3, r3, #2
    5236:	4642      	mov	r2, r8
    5238:	6812      	ldr	r2, [r2, #0]
    523a:	589b      	ldr	r3, [r3, r2]
    523c:	499e      	ldr	r1, [pc, #632]	; (54b8 <USB_Handler+0x5b4>)
    523e:	4642      	mov	r2, r8
    5240:	6810      	ldr	r0, [r2, #0]
    5242:	4798      	blx	r3
    5244:	3401      	adds	r4, #1
    5246:	2c07      	cmp	r4, #7
    5248:	d0c3      	beq.n	51d2 <USB_Handler+0x2ce>
    524a:	0063      	lsls	r3, r4, #1
    524c:	5bdb      	ldrh	r3, [r3, r7]
    524e:	4233      	tst	r3, r6
    5250:	d003      	beq.n	525a <USB_Handler+0x356>
    5252:	464a      	mov	r2, r9
    5254:	6812      	ldr	r2, [r2, #0]
    5256:	6812      	ldr	r2, [r2, #0]
    5258:	8393      	strh	r3, [r2, #28]
    525a:	422b      	tst	r3, r5
    525c:	d0f2      	beq.n	5244 <USB_Handler+0x340>
    525e:	2c06      	cmp	r4, #6
    5260:	d1e6      	bne.n	5230 <USB_Handler+0x32c>
    5262:	4b96      	ldr	r3, [pc, #600]	; (54bc <USB_Handler+0x5b8>)
    5264:	891b      	ldrh	r3, [r3, #8]
    5266:	091b      	lsrs	r3, r3, #4
    5268:	2280      	movs	r2, #128	; 0x80
    526a:	0052      	lsls	r2, r2, #1
    526c:	4013      	ands	r3, r2
    526e:	4a92      	ldr	r2, [pc, #584]	; (54b8 <USB_Handler+0x5b4>)
    5270:	6013      	str	r3, [r2, #0]
    5272:	e7dd      	b.n	5230 <USB_Handler+0x32c>
    5274:	003c      	movs	r4, r7
    5276:	3459      	adds	r4, #89	; 0x59
    5278:	34ff      	adds	r4, #255	; 0xff
    527a:	2300      	movs	r3, #0
    527c:	2201      	movs	r2, #1
    527e:	4694      	mov	ip, r2
    5280:	325f      	adds	r2, #95	; 0x5f
    5282:	4691      	mov	r9, r2
    5284:	3a50      	subs	r2, #80	; 0x50
    5286:	4692      	mov	sl, r2
    5288:	3a0d      	subs	r2, #13
    528a:	4693      	mov	fp, r2
    528c:	46b8      	mov	r8, r7
    528e:	002f      	movs	r7, r5
    5290:	e0b9      	b.n	5406 <USB_Handler+0x502>
    5292:	002a      	movs	r2, r5
    5294:	003d      	movs	r5, r7
    5296:	4647      	mov	r7, r8
    5298:	4690      	mov	r8, r2
    529a:	015b      	lsls	r3, r3, #5
    529c:	18ed      	adds	r5, r5, r3
    529e:	2308      	movs	r3, #8
    52a0:	33ff      	adds	r3, #255	; 0xff
    52a2:	5ceb      	ldrb	r3, [r5, r3]
    52a4:	065b      	lsls	r3, r3, #25
    52a6:	d516      	bpl.n	52d6 <USB_Handler+0x3d2>
    52a8:	2240      	movs	r2, #64	; 0x40
    52aa:	2308      	movs	r3, #8
    52ac:	33ff      	adds	r3, #255	; 0xff
    52ae:	54ea      	strb	r2, [r5, r3]
    52b0:	3b88      	subs	r3, #136	; 0x88
    52b2:	3bff      	subs	r3, #255	; 0xff
    52b4:	4642      	mov	r2, r8
    52b6:	4313      	orrs	r3, r2
    52b8:	4a81      	ldr	r2, [pc, #516]	; (54c0 <USB_Handler+0x5bc>)
    52ba:	7193      	strb	r3, [r2, #6]
    52bc:	2360      	movs	r3, #96	; 0x60
    52be:	420b      	tst	r3, r1
    52c0:	d100      	bne.n	52c4 <USB_Handler+0x3c0>
    52c2:	e786      	b.n	51d2 <USB_Handler+0x2ce>
    52c4:	9b01      	ldr	r3, [sp, #4]
    52c6:	011b      	lsls	r3, r3, #4
    52c8:	18fb      	adds	r3, r7, r3
    52ca:	33e0      	adds	r3, #224	; 0xe0
    52cc:	681b      	ldr	r3, [r3, #0]
    52ce:	497c      	ldr	r1, [pc, #496]	; (54c0 <USB_Handler+0x5bc>)
    52d0:	0038      	movs	r0, r7
    52d2:	4798      	blx	r3
    52d4:	e77d      	b.n	51d2 <USB_Handler+0x2ce>
    52d6:	2308      	movs	r3, #8
    52d8:	33ff      	adds	r3, #255	; 0xff
    52da:	5ceb      	ldrb	r3, [r5, r3]
    52dc:	069b      	lsls	r3, r3, #26
    52de:	d5ed      	bpl.n	52bc <USB_Handler+0x3b8>
    52e0:	2220      	movs	r2, #32
    52e2:	2308      	movs	r3, #8
    52e4:	33ff      	adds	r3, #255	; 0xff
    52e6:	54ea      	strb	r2, [r5, r3]
    52e8:	4b75      	ldr	r3, [pc, #468]	; (54c0 <USB_Handler+0x5bc>)
    52ea:	4642      	mov	r2, r8
    52ec:	719a      	strb	r2, [r3, #6]
    52ee:	e7e5      	b.n	52bc <USB_Handler+0x3b8>
    52f0:	003d      	movs	r5, r7
    52f2:	4647      	mov	r7, r8
    52f4:	9a01      	ldr	r2, [sp, #4]
    52f6:	0013      	movs	r3, r2
    52f8:	3308      	adds	r3, #8
    52fa:	015b      	lsls	r3, r3, #5
    52fc:	18ed      	adds	r5, r5, r3
    52fe:	2310      	movs	r3, #16
    5300:	71eb      	strb	r3, [r5, #7]
    5302:	18bb      	adds	r3, r7, r2
    5304:	3361      	adds	r3, #97	; 0x61
    5306:	33ff      	adds	r3, #255	; 0xff
    5308:	781b      	ldrb	r3, [r3, #0]
    530a:	06db      	lsls	r3, r3, #27
    530c:	d400      	bmi.n	5310 <USB_Handler+0x40c>
    530e:	e760      	b.n	51d2 <USB_Handler+0x2ce>
    5310:	0010      	movs	r0, r2
    5312:	0152      	lsls	r2, r2, #5
    5314:	4b69      	ldr	r3, [pc, #420]	; (54bc <USB_Handler+0x5b8>)
    5316:	189b      	adds	r3, r3, r2
    5318:	685b      	ldr	r3, [r3, #4]
    531a:	049b      	lsls	r3, r3, #18
    531c:	0c9b      	lsrs	r3, r3, #18
    531e:	4968      	ldr	r1, [pc, #416]	; (54c0 <USB_Handler+0x5bc>)
    5320:	800b      	strh	r3, [r1, #0]
    5322:	0103      	lsls	r3, r0, #4
    5324:	18fb      	adds	r3, r7, r3
    5326:	33dc      	adds	r3, #220	; 0xdc
    5328:	681b      	ldr	r3, [r3, #0]
    532a:	4640      	mov	r0, r8
    532c:	4798      	blx	r3
    532e:	e750      	b.n	51d2 <USB_Handler+0x2ce>
    5330:	002a      	movs	r2, r5
    5332:	003d      	movs	r5, r7
    5334:	4647      	mov	r7, r8
    5336:	4690      	mov	r8, r2
    5338:	015b      	lsls	r3, r3, #5
    533a:	18ed      	adds	r5, r5, r3
    533c:	2308      	movs	r3, #8
    533e:	33ff      	adds	r3, #255	; 0xff
    5340:	5ceb      	ldrb	r3, [r5, r3]
    5342:	079b      	lsls	r3, r3, #30
    5344:	d51e      	bpl.n	5384 <USB_Handler+0x480>
    5346:	2202      	movs	r2, #2
    5348:	2308      	movs	r3, #8
    534a:	33ff      	adds	r3, #255	; 0xff
    534c:	54ea      	strb	r2, [r5, r3]
    534e:	485c      	ldr	r0, [pc, #368]	; (54c0 <USB_Handler+0x5bc>)
    5350:	3b88      	subs	r3, #136	; 0x88
    5352:	3bff      	subs	r3, #255	; 0xff
    5354:	4642      	mov	r2, r8
    5356:	4313      	orrs	r3, r2
    5358:	7183      	strb	r3, [r0, #6]
    535a:	9b01      	ldr	r3, [sp, #4]
    535c:	015a      	lsls	r2, r3, #5
    535e:	4b57      	ldr	r3, [pc, #348]	; (54bc <USB_Handler+0x5b8>)
    5360:	189b      	adds	r3, r3, r2
    5362:	3310      	adds	r3, #16
    5364:	685b      	ldr	r3, [r3, #4]
    5366:	049b      	lsls	r3, r3, #18
    5368:	0c9b      	lsrs	r3, r3, #18
    536a:	8043      	strh	r3, [r0, #2]
    536c:	078b      	lsls	r3, r1, #30
    536e:	d100      	bne.n	5372 <USB_Handler+0x46e>
    5370:	e72f      	b.n	51d2 <USB_Handler+0x2ce>
    5372:	9b01      	ldr	r3, [sp, #4]
    5374:	330d      	adds	r3, #13
    5376:	011b      	lsls	r3, r3, #4
    5378:	18fb      	adds	r3, r7, r3
    537a:	685b      	ldr	r3, [r3, #4]
    537c:	4950      	ldr	r1, [pc, #320]	; (54c0 <USB_Handler+0x5bc>)
    537e:	0038      	movs	r0, r7
    5380:	4798      	blx	r3
    5382:	e726      	b.n	51d2 <USB_Handler+0x2ce>
    5384:	2308      	movs	r3, #8
    5386:	33ff      	adds	r3, #255	; 0xff
    5388:	5ceb      	ldrb	r3, [r5, r3]
    538a:	07db      	lsls	r3, r3, #31
    538c:	d5ee      	bpl.n	536c <USB_Handler+0x468>
    538e:	2201      	movs	r2, #1
    5390:	2308      	movs	r3, #8
    5392:	33ff      	adds	r3, #255	; 0xff
    5394:	54ea      	strb	r2, [r5, r3]
    5396:	484a      	ldr	r0, [pc, #296]	; (54c0 <USB_Handler+0x5bc>)
    5398:	4643      	mov	r3, r8
    539a:	7183      	strb	r3, [r0, #6]
    539c:	9b01      	ldr	r3, [sp, #4]
    539e:	015b      	lsls	r3, r3, #5
    53a0:	4a46      	ldr	r2, [pc, #280]	; (54bc <USB_Handler+0x5b8>)
    53a2:	18d2      	adds	r2, r2, r3
    53a4:	6853      	ldr	r3, [r2, #4]
    53a6:	049b      	lsls	r3, r3, #18
    53a8:	0c9b      	lsrs	r3, r3, #18
    53aa:	8003      	strh	r3, [r0, #0]
    53ac:	6853      	ldr	r3, [r2, #4]
    53ae:	011b      	lsls	r3, r3, #4
    53b0:	0c9b      	lsrs	r3, r3, #18
    53b2:	8083      	strh	r3, [r0, #4]
    53b4:	e7da      	b.n	536c <USB_Handler+0x468>
    53b6:	2208      	movs	r2, #8
    53b8:	32ff      	adds	r2, #255	; 0xff
    53ba:	5c9a      	ldrb	r2, [r3, r2]
    53bc:	0752      	lsls	r2, r2, #29
    53be:	d56e      	bpl.n	549e <USB_Handler+0x59a>
    53c0:	2004      	movs	r0, #4
    53c2:	2208      	movs	r2, #8
    53c4:	32ff      	adds	r2, #255	; 0xff
    53c6:	5498      	strb	r0, [r3, r2]
    53c8:	9801      	ldr	r0, [sp, #4]
    53ca:	0142      	lsls	r2, r0, #5
    53cc:	4b3b      	ldr	r3, [pc, #236]	; (54bc <USB_Handler+0x5b8>)
    53ce:	189b      	adds	r3, r3, r2
    53d0:	7a9b      	ldrb	r3, [r3, #10]
    53d2:	079b      	lsls	r3, r3, #30
    53d4:	d505      	bpl.n	53e2 <USB_Handler+0x4de>
    53d6:	4b39      	ldr	r3, [pc, #228]	; (54bc <USB_Handler+0x5b8>)
    53d8:	189b      	adds	r3, r3, r2
    53da:	7a9a      	ldrb	r2, [r3, #10]
    53dc:	2002      	movs	r0, #2
    53de:	4382      	bics	r2, r0
    53e0:	729a      	strb	r2, [r3, #10]
    53e2:	4b37      	ldr	r3, [pc, #220]	; (54c0 <USB_Handler+0x5bc>)
    53e4:	4642      	mov	r2, r8
    53e6:	719a      	strb	r2, [r3, #6]
    53e8:	9b01      	ldr	r3, [sp, #4]
    53ea:	3308      	adds	r3, #8
    53ec:	015b      	lsls	r3, r3, #5
    53ee:	683a      	ldr	r2, [r7, #0]
    53f0:	4694      	mov	ip, r2
    53f2:	4463      	add	r3, ip
    53f4:	79db      	ldrb	r3, [r3, #7]
    53f6:	07db      	lsls	r3, r3, #31
    53f8:	d551      	bpl.n	549e <USB_Handler+0x59a>
    53fa:	e6ea      	b.n	51d2 <USB_Handler+0x2ce>
    53fc:	3301      	adds	r3, #1
    53fe:	3401      	adds	r4, #1
    5400:	2b08      	cmp	r3, #8
    5402:	d100      	bne.n	5406 <USB_Handler+0x502>
    5404:	e6e5      	b.n	51d2 <USB_Handler+0x2ce>
    5406:	b2dd      	uxtb	r5, r3
    5408:	9301      	str	r3, [sp, #4]
    540a:	0032      	movs	r2, r6
    540c:	411a      	asrs	r2, r3
    540e:	4661      	mov	r1, ip
    5410:	4211      	tst	r1, r2
    5412:	d0f3      	beq.n	53fc <USB_Handler+0x4f8>
    5414:	001a      	movs	r2, r3
    5416:	3208      	adds	r2, #8
    5418:	0152      	lsls	r2, r2, #5
    541a:	18ba      	adds	r2, r7, r2
    541c:	79d2      	ldrb	r2, [r2, #7]
    541e:	b2d2      	uxtb	r2, r2
    5420:	7a21      	ldrb	r1, [r4, #8]
    5422:	4011      	ands	r1, r2
    5424:	7820      	ldrb	r0, [r4, #0]
    5426:	4001      	ands	r1, r0
    5428:	4648      	mov	r0, r9
    542a:	4210      	tst	r0, r2
    542c:	d000      	beq.n	5430 <USB_Handler+0x52c>
    542e:	e730      	b.n	5292 <USB_Handler+0x38e>
    5430:	4650      	mov	r0, sl
    5432:	4210      	tst	r0, r2
    5434:	d000      	beq.n	5438 <USB_Handler+0x534>
    5436:	e75b      	b.n	52f0 <USB_Handler+0x3ec>
    5438:	4658      	mov	r0, fp
    543a:	4210      	tst	r0, r2
    543c:	d000      	beq.n	5440 <USB_Handler+0x53c>
    543e:	e777      	b.n	5330 <USB_Handler+0x42c>
    5440:	200c      	movs	r0, #12
    5442:	4210      	tst	r0, r2
    5444:	d0da      	beq.n	53fc <USB_Handler+0x4f8>
    5446:	002a      	movs	r2, r5
    5448:	003d      	movs	r5, r7
    544a:	4647      	mov	r7, r8
    544c:	4690      	mov	r8, r2
    544e:	015b      	lsls	r3, r3, #5
    5450:	18eb      	adds	r3, r5, r3
    5452:	2208      	movs	r2, #8
    5454:	32ff      	adds	r2, #255	; 0xff
    5456:	5c9a      	ldrb	r2, [r3, r2]
    5458:	0712      	lsls	r2, r2, #28
    545a:	d5ac      	bpl.n	53b6 <USB_Handler+0x4b2>
    545c:	3804      	subs	r0, #4
    545e:	2208      	movs	r2, #8
    5460:	32ff      	adds	r2, #255	; 0xff
    5462:	5498      	strb	r0, [r3, r2]
    5464:	9801      	ldr	r0, [sp, #4]
    5466:	0142      	lsls	r2, r0, #5
    5468:	4b14      	ldr	r3, [pc, #80]	; (54bc <USB_Handler+0x5b8>)
    546a:	189b      	adds	r3, r3, r2
    546c:	7e9b      	ldrb	r3, [r3, #26]
    546e:	079b      	lsls	r3, r3, #30
    5470:	d505      	bpl.n	547e <USB_Handler+0x57a>
    5472:	4b12      	ldr	r3, [pc, #72]	; (54bc <USB_Handler+0x5b8>)
    5474:	189b      	adds	r3, r3, r2
    5476:	7e9a      	ldrb	r2, [r3, #26]
    5478:	2002      	movs	r0, #2
    547a:	4382      	bics	r2, r0
    547c:	769a      	strb	r2, [r3, #26]
    547e:	2380      	movs	r3, #128	; 0x80
    5480:	425b      	negs	r3, r3
    5482:	4642      	mov	r2, r8
    5484:	4313      	orrs	r3, r2
    5486:	4a0e      	ldr	r2, [pc, #56]	; (54c0 <USB_Handler+0x5bc>)
    5488:	7193      	strb	r3, [r2, #6]
    548a:	9b01      	ldr	r3, [sp, #4]
    548c:	3308      	adds	r3, #8
    548e:	015b      	lsls	r3, r3, #5
    5490:	683a      	ldr	r2, [r7, #0]
    5492:	4694      	mov	ip, r2
    5494:	4463      	add	r3, ip
    5496:	79db      	ldrb	r3, [r3, #7]
    5498:	079b      	lsls	r3, r3, #30
    549a:	d500      	bpl.n	549e <USB_Handler+0x59a>
    549c:	e699      	b.n	51d2 <USB_Handler+0x2ce>
    549e:	230c      	movs	r3, #12
    54a0:	420b      	tst	r3, r1
    54a2:	d100      	bne.n	54a6 <USB_Handler+0x5a2>
    54a4:	e695      	b.n	51d2 <USB_Handler+0x2ce>
    54a6:	9b01      	ldr	r3, [sp, #4]
    54a8:	011b      	lsls	r3, r3, #4
    54aa:	18fb      	adds	r3, r7, r3
    54ac:	33d8      	adds	r3, #216	; 0xd8
    54ae:	681b      	ldr	r3, [r3, #0]
    54b0:	4903      	ldr	r1, [pc, #12]	; (54c0 <USB_Handler+0x5bc>)
    54b2:	0038      	movs	r0, r7
    54b4:	4798      	blx	r3
    54b6:	e68c      	b.n	51d2 <USB_Handler+0x2ce>
    54b8:	20000224 	.word	0x20000224
    54bc:	200005ec 	.word	0x200005ec
    54c0:	20000228 	.word	0x20000228

000054c4 <usb_get_config_defaults>:
    54c4:	2200      	movs	r2, #0
    54c6:	7002      	strb	r2, [r0, #0]
    54c8:	2301      	movs	r3, #1
    54ca:	7043      	strb	r3, [r0, #1]
    54cc:	7082      	strb	r2, [r0, #2]
    54ce:	70c3      	strb	r3, [r0, #3]
    54d0:	4770      	bx	lr
	...

000054d4 <usb_init>:
    54d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    54d6:	46ce      	mov	lr, r9
    54d8:	4647      	mov	r7, r8
    54da:	b580      	push	{r7, lr}
    54dc:	b083      	sub	sp, #12
    54de:	0004      	movs	r4, r0
    54e0:	000d      	movs	r5, r1
    54e2:	0016      	movs	r6, r2
    54e4:	2300      	movs	r3, #0
    54e6:	4a6e      	ldr	r2, [pc, #440]	; (56a0 <usb_init+0x1cc>)
    54e8:	6013      	str	r3, [r2, #0]
    54ea:	4a6e      	ldr	r2, [pc, #440]	; (56a4 <usb_init+0x1d0>)
    54ec:	6010      	str	r0, [r2, #0]
    54ee:	6021      	str	r1, [r4, #0]
    54f0:	496d      	ldr	r1, [pc, #436]	; (56a8 <usb_init+0x1d4>)
    54f2:	69ca      	ldr	r2, [r1, #28]
    54f4:	2020      	movs	r0, #32
    54f6:	4302      	orrs	r2, r0
    54f8:	61ca      	str	r2, [r1, #28]
    54fa:	af01      	add	r7, sp, #4
    54fc:	707b      	strb	r3, [r7, #1]
    54fe:	2201      	movs	r2, #1
    5500:	70ba      	strb	r2, [r7, #2]
    5502:	70fb      	strb	r3, [r7, #3]
    5504:	3306      	adds	r3, #6
    5506:	4699      	mov	r9, r3
    5508:	703b      	strb	r3, [r7, #0]
    550a:	0039      	movs	r1, r7
    550c:	3808      	subs	r0, #8
    550e:	4b67      	ldr	r3, [pc, #412]	; (56ac <usb_init+0x1d8>)
    5510:	4698      	mov	r8, r3
    5512:	4798      	blx	r3
    5514:	464b      	mov	r3, r9
    5516:	703b      	strb	r3, [r7, #0]
    5518:	0039      	movs	r1, r7
    551a:	2019      	movs	r0, #25
    551c:	47c0      	blx	r8
    551e:	78b3      	ldrb	r3, [r6, #2]
    5520:	466a      	mov	r2, sp
    5522:	7013      	strb	r3, [r2, #0]
    5524:	4669      	mov	r1, sp
    5526:	2006      	movs	r0, #6
    5528:	4b61      	ldr	r3, [pc, #388]	; (56b0 <usb_init+0x1dc>)
    552a:	4798      	blx	r3
    552c:	2006      	movs	r0, #6
    552e:	4b61      	ldr	r3, [pc, #388]	; (56b4 <usb_init+0x1e0>)
    5530:	4798      	blx	r3
    5532:	782b      	ldrb	r3, [r5, #0]
    5534:	2201      	movs	r2, #1
    5536:	4313      	orrs	r3, r2
    5538:	702b      	strb	r3, [r5, #0]
    553a:	78ab      	ldrb	r3, [r5, #2]
    553c:	07db      	lsls	r3, r3, #31
    553e:	d4fc      	bmi.n	553a <usb_init+0x66>
    5540:	4a5d      	ldr	r2, [pc, #372]	; (56b8 <usb_init+0x1e4>)
    5542:	78d3      	ldrb	r3, [r2, #3]
    5544:	2103      	movs	r1, #3
    5546:	438b      	bics	r3, r1
    5548:	2102      	movs	r1, #2
    554a:	430b      	orrs	r3, r1
    554c:	70d3      	strb	r3, [r2, #3]
    554e:	78d3      	ldrb	r3, [r2, #3]
    5550:	210c      	movs	r1, #12
    5552:	438b      	bics	r3, r1
    5554:	2108      	movs	r1, #8
    5556:	430b      	orrs	r3, r1
    5558:	70d3      	strb	r3, [r2, #3]
    555a:	4b58      	ldr	r3, [pc, #352]	; (56bc <usb_init+0x1e8>)
    555c:	681b      	ldr	r3, [r3, #0]
    555e:	039b      	lsls	r3, r3, #14
    5560:	0edb      	lsrs	r3, r3, #27
    5562:	2b1f      	cmp	r3, #31
    5564:	d100      	bne.n	5568 <usb_init+0x94>
    5566:	e08f      	b.n	5688 <usb_init+0x1b4>
    5568:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    556a:	019b      	lsls	r3, r3, #6
    556c:	4954      	ldr	r1, [pc, #336]	; (56c0 <usb_init+0x1ec>)
    556e:	400a      	ands	r2, r1
    5570:	4313      	orrs	r3, r2
    5572:	852b      	strh	r3, [r5, #40]	; 0x28
    5574:	4b51      	ldr	r3, [pc, #324]	; (56bc <usb_init+0x1e8>)
    5576:	681b      	ldr	r3, [r3, #0]
    5578:	025b      	lsls	r3, r3, #9
    557a:	0edb      	lsrs	r3, r3, #27
    557c:	2b1f      	cmp	r3, #31
    557e:	d100      	bne.n	5582 <usb_init+0xae>
    5580:	e084      	b.n	568c <usb_init+0x1b8>
    5582:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    5584:	211f      	movs	r1, #31
    5586:	438a      	bics	r2, r1
    5588:	4313      	orrs	r3, r2
    558a:	852b      	strh	r3, [r5, #40]	; 0x28
    558c:	4b4b      	ldr	r3, [pc, #300]	; (56bc <usb_init+0x1e8>)
    558e:	681b      	ldr	r3, [r3, #0]
    5590:	019b      	lsls	r3, r3, #6
    5592:	0f5b      	lsrs	r3, r3, #29
    5594:	2b07      	cmp	r3, #7
    5596:	d100      	bne.n	559a <usb_init+0xc6>
    5598:	e07a      	b.n	5690 <usb_init+0x1bc>
    559a:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    559c:	031b      	lsls	r3, r3, #12
    559e:	4949      	ldr	r1, [pc, #292]	; (56c4 <usb_init+0x1f0>)
    55a0:	400a      	ands	r2, r1
    55a2:	4313      	orrs	r3, r2
    55a4:	852b      	strh	r3, [r5, #40]	; 0x28
    55a6:	7832      	ldrb	r2, [r6, #0]
    55a8:	7829      	ldrb	r1, [r5, #0]
    55aa:	01d2      	lsls	r2, r2, #7
    55ac:	237f      	movs	r3, #127	; 0x7f
    55ae:	400b      	ands	r3, r1
    55b0:	4313      	orrs	r3, r2
    55b2:	702b      	strb	r3, [r5, #0]
    55b4:	7871      	ldrb	r1, [r6, #1]
    55b6:	782b      	ldrb	r3, [r5, #0]
    55b8:	2201      	movs	r2, #1
    55ba:	400a      	ands	r2, r1
    55bc:	0092      	lsls	r2, r2, #2
    55be:	2104      	movs	r1, #4
    55c0:	438b      	bics	r3, r1
    55c2:	4313      	orrs	r3, r2
    55c4:	702b      	strb	r3, [r5, #0]
    55c6:	4b40      	ldr	r3, [pc, #256]	; (56c8 <usb_init+0x1f4>)
    55c8:	626b      	str	r3, [r5, #36]	; 0x24
    55ca:	78f3      	ldrb	r3, [r6, #3]
    55cc:	2b01      	cmp	r3, #1
    55ce:	d061      	beq.n	5694 <usb_init+0x1c0>
    55d0:	2b00      	cmp	r3, #0
    55d2:	d106      	bne.n	55e2 <usb_init+0x10e>
    55d4:	6822      	ldr	r2, [r4, #0]
    55d6:	8913      	ldrh	r3, [r2, #8]
    55d8:	210c      	movs	r1, #12
    55da:	438b      	bics	r3, r1
    55dc:	2104      	movs	r1, #4
    55de:	430b      	orrs	r3, r1
    55e0:	8113      	strh	r3, [r2, #8]
    55e2:	2280      	movs	r2, #128	; 0x80
    55e4:	0052      	lsls	r2, r2, #1
    55e6:	2100      	movs	r1, #0
    55e8:	4837      	ldr	r0, [pc, #220]	; (56c8 <usb_init+0x1f4>)
    55ea:	4b38      	ldr	r3, [pc, #224]	; (56cc <usb_init+0x1f8>)
    55ec:	4798      	blx	r3
    55ee:	1d23      	adds	r3, r4, #4
    55f0:	0021      	movs	r1, r4
    55f2:	3124      	adds	r1, #36	; 0x24
    55f4:	2200      	movs	r2, #0
    55f6:	c304      	stmia	r3!, {r2}
    55f8:	428b      	cmp	r3, r1
    55fa:	d1fc      	bne.n	55f6 <usb_init+0x122>
    55fc:	0021      	movs	r1, r4
    55fe:	31a4      	adds	r1, #164	; 0xa4
    5600:	2200      	movs	r2, #0
    5602:	601a      	str	r2, [r3, #0]
    5604:	605a      	str	r2, [r3, #4]
    5606:	609a      	str	r2, [r3, #8]
    5608:	60da      	str	r2, [r3, #12]
    560a:	3310      	adds	r3, #16
    560c:	428b      	cmp	r3, r1
    560e:	d1f8      	bne.n	5602 <usb_init+0x12e>
    5610:	2300      	movs	r3, #0
    5612:	22a4      	movs	r2, #164	; 0xa4
    5614:	54a3      	strb	r3, [r4, r2]
    5616:	3201      	adds	r2, #1
    5618:	54a3      	strb	r3, [r4, r2]
    561a:	0023      	movs	r3, r4
    561c:	33a6      	adds	r3, #166	; 0xa6
    561e:	0021      	movs	r1, r4
    5620:	31ae      	adds	r1, #174	; 0xae
    5622:	2200      	movs	r2, #0
    5624:	701a      	strb	r2, [r3, #0]
    5626:	721a      	strb	r2, [r3, #8]
    5628:	3301      	adds	r3, #1
    562a:	4299      	cmp	r1, r3
    562c:	d1fa      	bne.n	5624 <usb_init+0x150>
    562e:	0023      	movs	r3, r4
    5630:	33b8      	adds	r3, #184	; 0xb8
    5632:	0021      	movs	r1, r4
    5634:	31d4      	adds	r1, #212	; 0xd4
    5636:	2200      	movs	r2, #0
    5638:	c304      	stmia	r3!, {r2}
    563a:	428b      	cmp	r3, r1
    563c:	d1fc      	bne.n	5638 <usb_init+0x164>
    563e:	0021      	movs	r1, r4
    5640:	3155      	adds	r1, #85	; 0x55
    5642:	31ff      	adds	r1, #255	; 0xff
    5644:	2200      	movs	r2, #0
    5646:	601a      	str	r2, [r3, #0]
    5648:	605a      	str	r2, [r3, #4]
    564a:	609a      	str	r2, [r3, #8]
    564c:	60da      	str	r2, [r3, #12]
    564e:	3310      	adds	r3, #16
    5650:	428b      	cmp	r3, r1
    5652:	d1f8      	bne.n	5646 <usb_init+0x172>
    5654:	2300      	movs	r3, #0
    5656:	22aa      	movs	r2, #170	; 0xaa
    5658:	0052      	lsls	r2, r2, #1
    565a:	52a3      	strh	r3, [r4, r2]
    565c:	3202      	adds	r2, #2
    565e:	52a3      	strh	r3, [r4, r2]
    5660:	0023      	movs	r3, r4
    5662:	3359      	adds	r3, #89	; 0x59
    5664:	33ff      	adds	r3, #255	; 0xff
    5666:	3461      	adds	r4, #97	; 0x61
    5668:	34ff      	adds	r4, #255	; 0xff
    566a:	2200      	movs	r2, #0
    566c:	701a      	strb	r2, [r3, #0]
    566e:	721a      	strb	r2, [r3, #8]
    5670:	3301      	adds	r3, #1
    5672:	42a3      	cmp	r3, r4
    5674:	d1fa      	bne.n	566c <usb_init+0x198>
    5676:	2280      	movs	r2, #128	; 0x80
    5678:	4b15      	ldr	r3, [pc, #84]	; (56d0 <usb_init+0x1fc>)
    567a:	601a      	str	r2, [r3, #0]
    567c:	2000      	movs	r0, #0
    567e:	b003      	add	sp, #12
    5680:	bc0c      	pop	{r2, r3}
    5682:	4690      	mov	r8, r2
    5684:	4699      	mov	r9, r3
    5686:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5688:	3b1a      	subs	r3, #26
    568a:	e76d      	b.n	5568 <usb_init+0x94>
    568c:	3b02      	subs	r3, #2
    568e:	e778      	b.n	5582 <usb_init+0xae>
    5690:	3b04      	subs	r3, #4
    5692:	e782      	b.n	559a <usb_init+0xc6>
    5694:	6822      	ldr	r2, [r4, #0]
    5696:	8913      	ldrh	r3, [r2, #8]
    5698:	3108      	adds	r1, #8
    569a:	438b      	bics	r3, r1
    569c:	8113      	strh	r3, [r2, #8]
    569e:	e7a0      	b.n	55e2 <usb_init+0x10e>
    56a0:	20000230 	.word	0x20000230
    56a4:	20000220 	.word	0x20000220
    56a8:	40000400 	.word	0x40000400
    56ac:	000030cd 	.word	0x000030cd
    56b0:	00002fd5 	.word	0x00002fd5
    56b4:	00002f49 	.word	0x00002f49
    56b8:	41005000 	.word	0x41005000
    56bc:	00806024 	.word	0x00806024
    56c0:	fffff83f 	.word	0xfffff83f
    56c4:	ffff8fff 	.word	0xffff8fff
    56c8:	200005ec 	.word	0x200005ec
    56cc:	00007d93 	.word	0x00007d93
    56d0:	e000e100 	.word	0xe000e100

000056d4 <Dummy_Handler>:
    56d4:	e7fe      	b.n	56d4 <Dummy_Handler>
	...

000056d8 <Reset_Handler>:
    56d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    56da:	4a2a      	ldr	r2, [pc, #168]	; (5784 <Reset_Handler+0xac>)
    56dc:	4b2a      	ldr	r3, [pc, #168]	; (5788 <Reset_Handler+0xb0>)
    56de:	429a      	cmp	r2, r3
    56e0:	d011      	beq.n	5706 <Reset_Handler+0x2e>
    56e2:	001a      	movs	r2, r3
    56e4:	4b29      	ldr	r3, [pc, #164]	; (578c <Reset_Handler+0xb4>)
    56e6:	429a      	cmp	r2, r3
    56e8:	d20d      	bcs.n	5706 <Reset_Handler+0x2e>
    56ea:	4a29      	ldr	r2, [pc, #164]	; (5790 <Reset_Handler+0xb8>)
    56ec:	3303      	adds	r3, #3
    56ee:	1a9b      	subs	r3, r3, r2
    56f0:	089b      	lsrs	r3, r3, #2
    56f2:	3301      	adds	r3, #1
    56f4:	009b      	lsls	r3, r3, #2
    56f6:	2200      	movs	r2, #0
    56f8:	4823      	ldr	r0, [pc, #140]	; (5788 <Reset_Handler+0xb0>)
    56fa:	4922      	ldr	r1, [pc, #136]	; (5784 <Reset_Handler+0xac>)
    56fc:	588c      	ldr	r4, [r1, r2]
    56fe:	5084      	str	r4, [r0, r2]
    5700:	3204      	adds	r2, #4
    5702:	429a      	cmp	r2, r3
    5704:	d1fa      	bne.n	56fc <Reset_Handler+0x24>
    5706:	4a23      	ldr	r2, [pc, #140]	; (5794 <Reset_Handler+0xbc>)
    5708:	4b23      	ldr	r3, [pc, #140]	; (5798 <Reset_Handler+0xc0>)
    570a:	429a      	cmp	r2, r3
    570c:	d20a      	bcs.n	5724 <Reset_Handler+0x4c>
    570e:	43d3      	mvns	r3, r2
    5710:	4921      	ldr	r1, [pc, #132]	; (5798 <Reset_Handler+0xc0>)
    5712:	185b      	adds	r3, r3, r1
    5714:	2103      	movs	r1, #3
    5716:	438b      	bics	r3, r1
    5718:	3304      	adds	r3, #4
    571a:	189b      	adds	r3, r3, r2
    571c:	2100      	movs	r1, #0
    571e:	c202      	stmia	r2!, {r1}
    5720:	4293      	cmp	r3, r2
    5722:	d1fc      	bne.n	571e <Reset_Handler+0x46>
    5724:	4a1d      	ldr	r2, [pc, #116]	; (579c <Reset_Handler+0xc4>)
    5726:	21ff      	movs	r1, #255	; 0xff
    5728:	4b1d      	ldr	r3, [pc, #116]	; (57a0 <Reset_Handler+0xc8>)
    572a:	438b      	bics	r3, r1
    572c:	6093      	str	r3, [r2, #8]
    572e:	39fd      	subs	r1, #253	; 0xfd
    5730:	2390      	movs	r3, #144	; 0x90
    5732:	005b      	lsls	r3, r3, #1
    5734:	4a1b      	ldr	r2, [pc, #108]	; (57a4 <Reset_Handler+0xcc>)
    5736:	50d1      	str	r1, [r2, r3]
    5738:	4a1b      	ldr	r2, [pc, #108]	; (57a8 <Reset_Handler+0xd0>)
    573a:	78d3      	ldrb	r3, [r2, #3]
    573c:	2503      	movs	r5, #3
    573e:	43ab      	bics	r3, r5
    5740:	2402      	movs	r4, #2
    5742:	4323      	orrs	r3, r4
    5744:	70d3      	strb	r3, [r2, #3]
    5746:	78d3      	ldrb	r3, [r2, #3]
    5748:	270c      	movs	r7, #12
    574a:	43bb      	bics	r3, r7
    574c:	2608      	movs	r6, #8
    574e:	4333      	orrs	r3, r6
    5750:	70d3      	strb	r3, [r2, #3]
    5752:	4b16      	ldr	r3, [pc, #88]	; (57ac <Reset_Handler+0xd4>)
    5754:	7b98      	ldrb	r0, [r3, #14]
    5756:	2230      	movs	r2, #48	; 0x30
    5758:	4390      	bics	r0, r2
    575a:	2220      	movs	r2, #32
    575c:	4310      	orrs	r0, r2
    575e:	7398      	strb	r0, [r3, #14]
    5760:	7b99      	ldrb	r1, [r3, #14]
    5762:	43b9      	bics	r1, r7
    5764:	4331      	orrs	r1, r6
    5766:	7399      	strb	r1, [r3, #14]
    5768:	7b9a      	ldrb	r2, [r3, #14]
    576a:	43aa      	bics	r2, r5
    576c:	4322      	orrs	r2, r4
    576e:	739a      	strb	r2, [r3, #14]
    5770:	4a0f      	ldr	r2, [pc, #60]	; (57b0 <Reset_Handler+0xd8>)
    5772:	6853      	ldr	r3, [r2, #4]
    5774:	2180      	movs	r1, #128	; 0x80
    5776:	430b      	orrs	r3, r1
    5778:	6053      	str	r3, [r2, #4]
    577a:	4b0e      	ldr	r3, [pc, #56]	; (57b4 <Reset_Handler+0xdc>)
    577c:	4798      	blx	r3
    577e:	4b0e      	ldr	r3, [pc, #56]	; (57b8 <Reset_Handler+0xe0>)
    5780:	4798      	blx	r3
    5782:	e7fe      	b.n	5782 <Reset_Handler+0xaa>
    5784:	000081ac 	.word	0x000081ac
    5788:	20000000 	.word	0x20000000
    578c:	20000118 	.word	0x20000118
    5790:	20000004 	.word	0x20000004
    5794:	20000118 	.word	0x20000118
    5798:	2000071c 	.word	0x2000071c
    579c:	e000ed00 	.word	0xe000ed00
    57a0:	00000000 	.word	0x00000000
    57a4:	41007000 	.word	0x41007000
    57a8:	41005000 	.word	0x41005000
    57ac:	41004800 	.word	0x41004800
    57b0:	41004000 	.word	0x41004000
    57b4:	00007d39 	.word	0x00007d39
    57b8:	00005be9 	.word	0x00005be9

000057bc <configure_adc>:

float VADCR;	   /* Room Temperature ADC voltage - VADCR */
float VADCH;	   /* Hot Temperature ADC voltage - VADCH */

void configure_adc()
{
    57bc:	b510      	push	{r4, lr}
    57be:	b08c      	sub	sp, #48	; 0x30
	struct adc_config conf_adc;
	
	adc_get_config_defaults(&conf_adc);
    57c0:	4668      	mov	r0, sp
    57c2:	4b14      	ldr	r3, [pc, #80]	; (5814 <configure_adc+0x58>)
    57c4:	4798      	blx	r3
	
	//conf_adc.clock_source = GCLK_GENERATOR_1;
	conf_adc.reference = ADC_REFERENCE_INTVCC0;
    57c6:	2301      	movs	r3, #1
    57c8:	466a      	mov	r2, sp
    57ca:	7053      	strb	r3, [r2, #1]
	conf_adc.clock_prescaler = ADC_CLOCK_PRESCALER_DIV16;
    57cc:	2280      	movs	r2, #128	; 0x80
    57ce:	0092      	lsls	r2, r2, #2
    57d0:	4669      	mov	r1, sp
    57d2:	804a      	strh	r2, [r1, #2]
	conf_adc.positive_input = LEFT_LIGHT;
    57d4:	3af6      	subs	r2, #246	; 0xf6
    57d6:	3aff      	subs	r2, #255	; 0xff
    57d8:	730a      	strb	r2, [r1, #12]
	conf_adc.negative_input = ADC_NEGATIVE_INPUT_GND;
    57da:	22c0      	movs	r2, #192	; 0xc0
    57dc:	0152      	lsls	r2, r2, #5
    57de:	81ca      	strh	r2, [r1, #14]
	conf_adc.resolution = ADC_RESOLUTION_8BIT;
    57e0:	2230      	movs	r2, #48	; 0x30
    57e2:	710a      	strb	r2, [r1, #4]
	conf_adc.left_adjust = true;
    57e4:	466a      	mov	r2, sp
    57e6:	748b      	strb	r3, [r1, #18]
	
	adc_init(&adc_instance, ADC, &conf_adc);
    57e8:	4c0b      	ldr	r4, [pc, #44]	; (5818 <configure_adc+0x5c>)
    57ea:	490c      	ldr	r1, [pc, #48]	; (581c <configure_adc+0x60>)
    57ec:	0020      	movs	r0, r4
    57ee:	4b0c      	ldr	r3, [pc, #48]	; (5820 <configure_adc+0x64>)
    57f0:	4798      	blx	r3
		struct adc_module *const module_inst)
{
	Assert(module_inst);
	Assert(module_inst->hw);

	Adc *const adc_module = module_inst->hw;
    57f2:	6822      	ldr	r2, [r4, #0]
	/* Sanity check arguments */
	Assert(module_inst);

	Adc *const adc_module = module_inst->hw;

	if (adc_module->STATUS.reg & ADC_STATUS_SYNCBUSY) {
    57f4:	7e53      	ldrb	r3, [r2, #25]

	while (adc_is_syncing(module_inst)) {
    57f6:	b25b      	sxtb	r3, r3
    57f8:	2b00      	cmp	r3, #0
    57fa:	dbfb      	blt.n	57f4 <configure_adc+0x38>
#	else
		system_interrupt_enable(SYSTEM_INTERRUPT_MODULE_ADC);
#   endif
#endif

	adc_module->CTRLA.reg |= ADC_CTRLA_ENABLE;
    57fc:	7813      	ldrb	r3, [r2, #0]
    57fe:	2102      	movs	r1, #2
    5800:	430b      	orrs	r3, r1
    5802:	7013      	strb	r3, [r2, #0]
	Adc *const adc_module = module_inst->hw;
    5804:	4b04      	ldr	r3, [pc, #16]	; (5818 <configure_adc+0x5c>)
    5806:	681a      	ldr	r2, [r3, #0]
	if (adc_module->STATUS.reg & ADC_STATUS_SYNCBUSY) {
    5808:	7e53      	ldrb	r3, [r2, #25]

	while (adc_is_syncing(module_inst)) {
    580a:	b25b      	sxtb	r3, r3
    580c:	2b00      	cmp	r3, #0
    580e:	dbfb      	blt.n	5808 <configure_adc+0x4c>
	
	adc_enable(&adc_instance);
}
    5810:	b00c      	add	sp, #48	; 0x30
    5812:	bd10      	pop	{r4, pc}
    5814:	00001c19 	.word	0x00001c19
    5818:	20000710 	.word	0x20000710
    581c:	42004000 	.word	0x42004000
    5820:	00001c61 	.word	0x00001c61

00005824 <adc_start_read_result>:


uint8_t adc_start_read_result(const enum adc_positive_input analogPin)
{
    5824:	b530      	push	{r4, r5, lr}
{
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	Adc *const adc_module = module_inst->hw;
    5826:	4b2a      	ldr	r3, [pc, #168]	; (58d0 <adc_start_read_result+0xac>)
    5828:	6819      	ldr	r1, [r3, #0]
    582a:	7e4b      	ldrb	r3, [r1, #25]

	while (adc_is_syncing(module_inst)) {
    582c:	b25b      	sxtb	r3, r3
    582e:	2b00      	cmp	r3, #0
    5830:	dbfb      	blt.n	582a <adc_start_read_result+0x6>
		/* Wait for synchronization */
	}

	/* Set positive input pin */
	adc_module->INPUTCTRL.reg =
			(adc_module->INPUTCTRL.reg & ~ADC_INPUTCTRL_MUXPOS_Msk) |
    5832:	690b      	ldr	r3, [r1, #16]
    5834:	221f      	movs	r2, #31
    5836:	4393      	bics	r3, r2
    5838:	4318      	orrs	r0, r3
	adc_module->INPUTCTRL.reg =
    583a:	6108      	str	r0, [r1, #16]
    583c:	7e4b      	ldrb	r3, [r1, #25]
			(positive_input);

	while (adc_is_syncing(module_inst)) {
    583e:	b25b      	sxtb	r3, r3
    5840:	2b00      	cmp	r3, #0
    5842:	dbfb      	blt.n	583c <adc_start_read_result+0x18>
    5844:	7e4b      	ldrb	r3, [r1, #25]
	while (adc_is_syncing(module_inst)) {
    5846:	b25b      	sxtb	r3, r3
    5848:	2b00      	cmp	r3, #0
    584a:	dbfb      	blt.n	5844 <adc_start_read_result+0x20>
	adc_module->SWTRIG.reg |= ADC_SWTRIG_START;
    584c:	7b0b      	ldrb	r3, [r1, #12]
    584e:	2202      	movs	r2, #2
    5850:	4313      	orrs	r3, r2
    5852:	730b      	strb	r3, [r1, #12]
    5854:	7e4b      	ldrb	r3, [r1, #25]
	while (adc_is_syncing(module_inst)) {
    5856:	b25b      	sxtb	r3, r3
    5858:	2b00      	cmp	r3, #0
    585a:	dbfb      	blt.n	5854 <adc_start_read_result+0x30>
	if (int_flags & ADC_INTFLAG_RESRDY) {
    585c:	2001      	movs	r0, #1
	if (int_flags & ADC_INTFLAG_WINMON) {
    585e:	2504      	movs	r5, #4
		status_flags |= ADC_STATUS_WINDOW;
    5860:	2402      	movs	r4, #2
    5862:	e001      	b.n	5868 <adc_start_read_result+0x44>
	uint16_t adc_result = 0;
	//configure_adc(analogPin);
	adc_set_positive_input(&adc_instance, analogPin);
	
	adc_start_conversion(&adc_instance);
	while((adc_get_status(&adc_instance) & ADC_STATUS_RESULT_READY) != 1);
    5864:	4210      	tst	r0, r2
    5866:	d10a      	bne.n	587e <adc_start_read_result+0x5a>
	uint32_t int_flags = adc_module->INTFLAG.reg;
    5868:	7e0b      	ldrb	r3, [r1, #24]
    586a:	b2db      	uxtb	r3, r3
	if (int_flags & ADC_INTFLAG_RESRDY) {
    586c:	0002      	movs	r2, r0
    586e:	401a      	ands	r2, r3
	if (int_flags & ADC_INTFLAG_WINMON) {
    5870:	421d      	tst	r5, r3
    5872:	d000      	beq.n	5876 <adc_start_read_result+0x52>
		status_flags |= ADC_STATUS_WINDOW;
    5874:	4322      	orrs	r2, r4
	if (int_flags & ADC_INTFLAG_OVERRUN) {
    5876:	421c      	tst	r4, r3
    5878:	d0f4      	beq.n	5864 <adc_start_read_result+0x40>
		status_flags |= ADC_STATUS_OVERRUN;
    587a:	432a      	orrs	r2, r5
    587c:	e7f2      	b.n	5864 <adc_start_read_result+0x40>
	uint32_t int_flags = adc_module->INTFLAG.reg;
    587e:	7e0a      	ldrb	r2, [r1, #24]
    5880:	b2d2      	uxtb	r2, r2
	if (int_flags & ADC_INTFLAG_RESRDY) {
    5882:	2301      	movs	r3, #1
    5884:	4013      	ands	r3, r2
	if (int_flags & ADC_INTFLAG_WINMON) {
    5886:	0750      	lsls	r0, r2, #29
    5888:	d501      	bpl.n	588e <adc_start_read_result+0x6a>
		status_flags |= ADC_STATUS_WINDOW;
    588a:	2002      	movs	r0, #2
    588c:	4303      	orrs	r3, r0
	if (int_flags & ADC_INTFLAG_OVERRUN) {
    588e:	0792      	lsls	r2, r2, #30
    5890:	d501      	bpl.n	5896 <adc_start_read_result+0x72>
		status_flags |= ADC_STATUS_OVERRUN;
    5892:	2204      	movs	r2, #4
    5894:	4313      	orrs	r3, r2
	uint16_t adc_result = 0;
    5896:	2000      	movs	r0, #0
	if (!(adc_get_status(module_inst) & ADC_STATUS_RESULT_READY)) {
    5898:	07db      	lsls	r3, r3, #31
    589a:	d401      	bmi.n	58a0 <adc_start_read_result+0x7c>
	
	adc_read(&adc_instance, &adc_result);
	
	return adc_result;
    589c:	b2c0      	uxtb	r0, r0
}
    589e:	bd30      	pop	{r4, r5, pc}
    58a0:	7e4b      	ldrb	r3, [r1, #25]
	while (adc_is_syncing(module_inst)) {
    58a2:	b25b      	sxtb	r3, r3
    58a4:	2b00      	cmp	r3, #0
    58a6:	dbfb      	blt.n	58a0 <adc_start_read_result+0x7c>
	*result = adc_module->RESULT.reg;
    58a8:	8b48      	ldrh	r0, [r1, #26]
    58aa:	b280      	uxth	r0, r0
	adc_module->INTFLAG.reg = int_flags;
    58ac:	2301      	movs	r3, #1
    58ae:	760b      	strb	r3, [r1, #24]
	uint32_t int_flags = adc_module->INTFLAG.reg;
    58b0:	7e0a      	ldrb	r2, [r1, #24]
    58b2:	b2d2      	uxtb	r2, r2
	if (int_flags & ADC_INTFLAG_RESRDY) {
    58b4:	4013      	ands	r3, r2
	if (int_flags & ADC_INTFLAG_WINMON) {
    58b6:	0754      	lsls	r4, r2, #29
    58b8:	d501      	bpl.n	58be <adc_start_read_result+0x9a>
		status_flags |= ADC_STATUS_WINDOW;
    58ba:	2402      	movs	r4, #2
    58bc:	4323      	orrs	r3, r4
	if (int_flags & ADC_INTFLAG_OVERRUN) {
    58be:	0792      	lsls	r2, r2, #30
    58c0:	d501      	bpl.n	58c6 <adc_start_read_result+0xa2>
		status_flags |= ADC_STATUS_OVERRUN;
    58c2:	2204      	movs	r2, #4
    58c4:	4313      	orrs	r3, r2
	if (adc_get_status(module_inst) & ADC_STATUS_OVERRUN) {
    58c6:	075b      	lsls	r3, r3, #29
    58c8:	d5e8      	bpl.n	589c <adc_start_read_result+0x78>
	adc_module->INTFLAG.reg = int_flags;
    58ca:	2302      	movs	r3, #2
    58cc:	760b      	strb	r3, [r1, #24]
    58ce:	e7e5      	b.n	589c <adc_start_read_result+0x78>
    58d0:	20000710 	.word	0x20000710

000058d4 <configure_adc_temp>:
* of Electrical Characteristics.
*
*/

void configure_adc_temp(void)
{
    58d4:	b530      	push	{r4, r5, lr}
    58d6:	b08d      	sub	sp, #52	; 0x34
	struct adc_config conf_adc;
	
	adc_get_config_defaults(&conf_adc);
    58d8:	4668      	mov	r0, sp
    58da:	4b14      	ldr	r3, [pc, #80]	; (592c <configure_adc_temp+0x58>)
    58dc:	4798      	blx	r3
	
	//conf_adc.clock_source = GCLK_GENERATOR_1;
	conf_adc.clock_prescaler = ADC_CLOCK_PRESCALER_DIV16;
    58de:	2380      	movs	r3, #128	; 0x80
    58e0:	009b      	lsls	r3, r3, #2
    58e2:	466a      	mov	r2, sp
    58e4:	8053      	strh	r3, [r2, #2]
	conf_adc.reference = ADC_REFERENCE_INT1V;
    58e6:	2300      	movs	r3, #0
    58e8:	7053      	strb	r3, [r2, #1]
	conf_adc.positive_input = ADC_POSITIVE_INPUT_TEMP;
    58ea:	3318      	adds	r3, #24
    58ec:	7313      	strb	r3, [r2, #12]
	conf_adc.negative_input = ADC_NEGATIVE_INPUT_GND;
    58ee:	23c0      	movs	r3, #192	; 0xc0
    58f0:	015b      	lsls	r3, r3, #5
    58f2:	81d3      	strh	r3, [r2, #14]
	conf_adc.sample_length = ADC_TEMP_SAMPLE_LENGTH;
    58f4:	2304      	movs	r3, #4
    58f6:	75d3      	strb	r3, [r2, #23]
	
	adc_init(&adc_instance, ADC, &conf_adc);
    58f8:	4d0d      	ldr	r5, [pc, #52]	; (5930 <configure_adc_temp+0x5c>)
    58fa:	4c0e      	ldr	r4, [pc, #56]	; (5934 <configure_adc_temp+0x60>)
    58fc:	0029      	movs	r1, r5
    58fe:	0020      	movs	r0, r4
    5900:	4b0d      	ldr	r3, [pc, #52]	; (5938 <configure_adc_temp+0x64>)
    5902:	4798      	blx	r3
	
	ADC->AVGCTRL.reg = ADC_AVGCTRL_ADJRES(2) | ADC_AVGCTRL_SAMPLENUM_4;
    5904:	2322      	movs	r3, #34	; 0x22
    5906:	70ab      	strb	r3, [r5, #2]
	Adc *const adc_module = module_inst->hw;
    5908:	6822      	ldr	r2, [r4, #0]
    590a:	7e53      	ldrb	r3, [r2, #25]
	while (adc_is_syncing(module_inst)) {
    590c:	b25b      	sxtb	r3, r3
    590e:	2b00      	cmp	r3, #0
    5910:	dbfb      	blt.n	590a <configure_adc_temp+0x36>
	adc_module->CTRLA.reg |= ADC_CTRLA_ENABLE;
    5912:	7813      	ldrb	r3, [r2, #0]
    5914:	2102      	movs	r1, #2
    5916:	430b      	orrs	r3, r1
    5918:	7013      	strb	r3, [r2, #0]
	Adc *const adc_module = module_inst->hw;
    591a:	4b06      	ldr	r3, [pc, #24]	; (5934 <configure_adc_temp+0x60>)
    591c:	681a      	ldr	r2, [r3, #0]
	if (adc_module->STATUS.reg & ADC_STATUS_SYNCBUSY) {
    591e:	7e53      	ldrb	r3, [r2, #25]
	while (adc_is_syncing(module_inst)) {
    5920:	b25b      	sxtb	r3, r3
    5922:	2b00      	cmp	r3, #0
    5924:	dbfb      	blt.n	591e <configure_adc_temp+0x4a>
	
	adc_enable(&adc_instance);
}
    5926:	b00d      	add	sp, #52	; 0x34
    5928:	bd30      	pop	{r4, r5, pc}
    592a:	46c0      	nop			; (mov r8, r8)
    592c:	00001c19 	.word	0x00001c19
    5930:	42004000 	.word	0x42004000
    5934:	20000710 	.word	0x20000710
    5938:	00001c61 	.word	0x00001c61

0000593c <calculate_temperature>:

float calculate_temperature(uint16_t raw_code)
{
    593c:	b5f0      	push	{r4, r5, r6, r7, lr}
    593e:	46d6      	mov	lr, sl
    5940:	b500      	push	{lr}
    5942:	b088      	sub	sp, #32
	uint8_t result;
	float VADC;      /* Voltage calculation using ADC result for Coarse Temp calculation */
	float VADCM;     /* Voltage calculation using ADC result for Fine Temp calculation. */
	float INT1VM;    /* Voltage calculation for reality INT1V value during the ADC conversion */
	
	VADC = ((float)raw_code * INT1V_VALUE_FLOAT)/ADC_12BIT_FULL_SCALE_VALUE_FLOAT;
    5944:	4f28      	ldr	r7, [pc, #160]	; (59e8 <calculate_temperature+0xac>)
    5946:	47b8      	blx	r7
    5948:	9001      	str	r0, [sp, #4]
	
	/* Coarse Temp Calculation by assume INT1V=1V for this ADC conversion */
	coarse_temp = tempR + (((tempH - tempR)/(VADCH - VADCR)) * (VADC - VADCR));
    594a:	4b28      	ldr	r3, [pc, #160]	; (59ec <calculate_temperature+0xb0>)
    594c:	681b      	ldr	r3, [r3, #0]
    594e:	4c28      	ldr	r4, [pc, #160]	; (59f0 <calculate_temperature+0xb4>)
    5950:	9300      	str	r3, [sp, #0]
    5952:	1c19      	adds	r1, r3, #0
    5954:	4b27      	ldr	r3, [pc, #156]	; (59f4 <calculate_temperature+0xb8>)
    5956:	6818      	ldr	r0, [r3, #0]
    5958:	47a0      	blx	r4
    595a:	1c06      	adds	r6, r0, #0
    595c:	4b26      	ldr	r3, [pc, #152]	; (59f8 <calculate_temperature+0xbc>)
    595e:	681a      	ldr	r2, [r3, #0]
    5960:	1c15      	adds	r5, r2, #0
    5962:	1c11      	adds	r1, r2, #0
    5964:	4b25      	ldr	r3, [pc, #148]	; (59fc <calculate_temperature+0xc0>)
    5966:	6818      	ldr	r0, [r3, #0]
    5968:	47a0      	blx	r4
    596a:	1c01      	adds	r1, r0, #0
    596c:	4a24      	ldr	r2, [pc, #144]	; (5a00 <calculate_temperature+0xc4>)
    596e:	4692      	mov	sl, r2
    5970:	9604      	str	r6, [sp, #16]
    5972:	1c30      	adds	r0, r6, #0
    5974:	4790      	blx	r2
    5976:	1c06      	adds	r6, r0, #0
	VADC = ((float)raw_code * INT1V_VALUE_FLOAT)/ADC_12BIT_FULL_SCALE_VALUE_FLOAT;
    5978:	4922      	ldr	r1, [pc, #136]	; (5a04 <calculate_temperature+0xc8>)
    597a:	9801      	ldr	r0, [sp, #4]
    597c:	47d0      	blx	sl
	coarse_temp = tempR + (((tempH - tempR)/(VADCH - VADCR)) * (VADC - VADCR));
    597e:	9502      	str	r5, [sp, #8]
    5980:	1c29      	adds	r1, r5, #0
    5982:	47a0      	blx	r4
    5984:	4d20      	ldr	r5, [pc, #128]	; (5a08 <calculate_temperature+0xcc>)
    5986:	9605      	str	r6, [sp, #20]
    5988:	1c31      	adds	r1, r6, #0
    598a:	47a8      	blx	r5
    598c:	4e1f      	ldr	r6, [pc, #124]	; (5a0c <calculate_temperature+0xd0>)
    598e:	9900      	ldr	r1, [sp, #0]
    5990:	47b0      	blx	r6
    5992:	4b1f      	ldr	r3, [pc, #124]	; (5a10 <calculate_temperature+0xd4>)
    5994:	9006      	str	r0, [sp, #24]
    5996:	6018      	str	r0, [r3, #0]
	
	/* Calculation to find the real INT1V value during the ADC conversion */
	INT1VM = INT1VR + (((INT1VH - INT1VR) * (coarse_temp - tempR))/(tempH - tempR));
    5998:	4b1e      	ldr	r3, [pc, #120]	; (5a14 <calculate_temperature+0xd8>)
    599a:	681b      	ldr	r3, [r3, #0]
    599c:	9303      	str	r3, [sp, #12]
    599e:	1c19      	adds	r1, r3, #0
    59a0:	4b1d      	ldr	r3, [pc, #116]	; (5a18 <calculate_temperature+0xdc>)
    59a2:	6818      	ldr	r0, [r3, #0]
    59a4:	47a0      	blx	r4
    59a6:	9007      	str	r0, [sp, #28]
    59a8:	9900      	ldr	r1, [sp, #0]
    59aa:	9806      	ldr	r0, [sp, #24]
    59ac:	47a0      	blx	r4
    59ae:	1c01      	adds	r1, r0, #0
    59b0:	9807      	ldr	r0, [sp, #28]
    59b2:	47a8      	blx	r5
    59b4:	9904      	ldr	r1, [sp, #16]
    59b6:	47d0      	blx	sl
    59b8:	9903      	ldr	r1, [sp, #12]
    59ba:	47b0      	blx	r6
	
	VADCM = ((float)raw_code * INT1VM)/ADC_12BIT_FULL_SCALE_VALUE_FLOAT;
    59bc:	9901      	ldr	r1, [sp, #4]
    59be:	47a8      	blx	r5
    59c0:	4910      	ldr	r1, [pc, #64]	; (5a04 <calculate_temperature+0xc8>)
    59c2:	47d0      	blx	sl
	
	/* Fine Temp Calculation by replace INT1V=1V by INT1V = INT1Vm for ADC conversion */
	result = 128 + (tempR + (((tempH - tempR)/(VADCH - VADCR)) * (VADCM - VADCR)));
    59c4:	9902      	ldr	r1, [sp, #8]
    59c6:	47a0      	blx	r4
    59c8:	9905      	ldr	r1, [sp, #20]
    59ca:	47a8      	blx	r5
    59cc:	9900      	ldr	r1, [sp, #0]
    59ce:	47b0      	blx	r6
    59d0:	2186      	movs	r1, #134	; 0x86
    59d2:	05c9      	lsls	r1, r1, #23
    59d4:	47b0      	blx	r6
    59d6:	4b11      	ldr	r3, [pc, #68]	; (5a1c <calculate_temperature+0xe0>)
    59d8:	4798      	blx	r3
	
	return result;
    59da:	b2c0      	uxtb	r0, r0
    59dc:	47b8      	blx	r7
}
    59de:	b008      	add	sp, #32
    59e0:	bc04      	pop	{r2}
    59e2:	4692      	mov	sl, r2
    59e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    59e6:	46c0      	nop			; (mov r8, r8)
    59e8:	00006c9d 	.word	0x00006c9d
    59ec:	20000708 	.word	0x20000708
    59f0:	00006885 	.word	0x00006885
    59f4:	20000718 	.word	0x20000718
    59f8:	200006ec 	.word	0x200006ec
    59fc:	2000070c 	.word	0x2000070c
    5a00:	000063b5 	.word	0x000063b5
    5a04:	457ff000 	.word	0x457ff000
    5a08:	00006645 	.word	0x00006645
    5a0c:	00006091 	.word	0x00006091
    5a10:	200006f8 	.word	0x200006f8
    5a14:	200006fc 	.word	0x200006fc
    5a18:	200006f0 	.word	0x200006f0
    5a1c:	00006061 	.word	0x00006061

00005a20 <convert_dec_to_frac>:
* \brief Decimal to Fraction Conversation.
* This function converts the decimal value into fractional
* and return the fractional value for temperature calculation
*/
float convert_dec_to_frac(uint8_t val)
{
    5a20:	b510      	push	{r4, lr}
	if (val < 10)
    5a22:	2809      	cmp	r0, #9
    5a24:	d907      	bls.n	5a36 <convert_dec_to_frac+0x16>
	{
		return ((float)val/10.0);
	}
	
	else if (val <100)
    5a26:	2863      	cmp	r0, #99	; 0x63
    5a28:	d90b      	bls.n	5a42 <convert_dec_to_frac+0x22>
		return ((float)val/100.0);
	}
	
	else
	{
		return ((float)val/1000.0);
    5a2a:	4b09      	ldr	r3, [pc, #36]	; (5a50 <convert_dec_to_frac+0x30>)
    5a2c:	4798      	blx	r3
    5a2e:	4909      	ldr	r1, [pc, #36]	; (5a54 <convert_dec_to_frac+0x34>)
    5a30:	4b09      	ldr	r3, [pc, #36]	; (5a58 <convert_dec_to_frac+0x38>)
    5a32:	4798      	blx	r3
    5a34:	e004      	b.n	5a40 <convert_dec_to_frac+0x20>
		return ((float)val/10.0);
    5a36:	4b06      	ldr	r3, [pc, #24]	; (5a50 <convert_dec_to_frac+0x30>)
    5a38:	4798      	blx	r3
    5a3a:	4908      	ldr	r1, [pc, #32]	; (5a5c <convert_dec_to_frac+0x3c>)
    5a3c:	4b06      	ldr	r3, [pc, #24]	; (5a58 <convert_dec_to_frac+0x38>)
    5a3e:	4798      	blx	r3
	}
    5a40:	bd10      	pop	{r4, pc}
		return ((float)val/100.0);
    5a42:	4b03      	ldr	r3, [pc, #12]	; (5a50 <convert_dec_to_frac+0x30>)
    5a44:	4798      	blx	r3
    5a46:	4906      	ldr	r1, [pc, #24]	; (5a60 <convert_dec_to_frac+0x40>)
    5a48:	4b03      	ldr	r3, [pc, #12]	; (5a58 <convert_dec_to_frac+0x38>)
    5a4a:	4798      	blx	r3
    5a4c:	e7f8      	b.n	5a40 <convert_dec_to_frac+0x20>
    5a4e:	46c0      	nop			; (mov r8, r8)
    5a50:	00006c9d 	.word	0x00006c9d
    5a54:	447a0000 	.word	0x447a0000
    5a58:	000063b5 	.word	0x000063b5
    5a5c:	41200000 	.word	0x41200000
    5a60:	42c80000 	.word	0x42c80000

00005a64 <load_calibration_data>:
{
    5a64:	b5f0      	push	{r4, r5, r6, r7, lr}
    5a66:	46de      	mov	lr, fp
    5a68:	4657      	mov	r7, sl
    5a6a:	464e      	mov	r6, r9
    5a6c:	4645      	mov	r5, r8
    5a6e:	b5e0      	push	{r5, r6, r7, lr}
    5a70:	b087      	sub	sp, #28
	val1 = *temp_log_row_ptr;
    5a72:	4b3e      	ldr	r3, [pc, #248]	; (5b6c <load_calibration_data+0x108>)
    5a74:	681b      	ldr	r3, [r3, #0]
    5a76:	9305      	str	r3, [sp, #20]
	val2 = *temp_log_row_ptr;
    5a78:	4b3d      	ldr	r3, [pc, #244]	; (5b70 <load_calibration_data+0x10c>)
    5a7a:	681b      	ldr	r3, [r3, #0]
    5a7c:	9304      	str	r3, [sp, #16]
	room_temp_val_int = (uint8_t)((val1 & NVMCTRL_FUSES_ROOM_TEMP_VAL_INT_Msk) >> NVMCTRL_FUSES_ROOM_TEMP_VAL_INT_Pos);
    5a7e:	9e05      	ldr	r6, [sp, #20]
	room_temp_val_dec = (uint8_t)((val1 & NVMCTRL_FUSES_ROOM_TEMP_VAL_DEC_Msk) >> NVMCTRL_FUSES_ROOM_TEMP_VAL_DEC_Pos);
    5a80:	9805      	ldr	r0, [sp, #20]
	hot_temp_val_int = (uint8_t)((val1 & NVMCTRL_FUSES_HOT_TEMP_VAL_INT_Msk) >> NVMCTRL_FUSES_HOT_TEMP_VAL_INT_Pos);
    5a82:	9b05      	ldr	r3, [sp, #20]
    5a84:	9300      	str	r3, [sp, #0]
	hot_temp_val_dec = (uint8_t)((val1 & NVMCTRL_FUSES_HOT_TEMP_VAL_DEC_Msk) >> NVMCTRL_FUSES_HOT_TEMP_VAL_DEC_Pos);
    5a86:	9a05      	ldr	r2, [sp, #20]
    5a88:	4691      	mov	r9, r2
	room_int1v_val = (int8_t)((val1 & NVMCTRL_FUSES_ROOM_INT1V_VAL_Msk) >> NVMCTRL_FUSES_ROOM_INT1V_VAL_Pos);
    5a8a:	9a05      	ldr	r2, [sp, #20]
    5a8c:	9201      	str	r2, [sp, #4]
	hot_int1v_val = (int8_t)((val2 & NVMCTRL_FUSES_HOT_INT1V_VAL_Msk) >> NVMCTRL_FUSES_HOT_INT1V_VAL_Pos);
    5a8e:	9904      	ldr	r1, [sp, #16]
    5a90:	9102      	str	r1, [sp, #8]
	ADCR = (uint16_t)((val2 & NVMCTRL_FUSES_ROOM_ADC_VAL_Msk) >> NVMCTRL_FUSES_ROOM_ADC_VAL_Pos);
    5a92:	9c04      	ldr	r4, [sp, #16]
    5a94:	0324      	lsls	r4, r4, #12
    5a96:	0d24      	lsrs	r4, r4, #20
    5a98:	4b36      	ldr	r3, [pc, #216]	; (5b74 <load_calibration_data+0x110>)
    5a9a:	801c      	strh	r4, [r3, #0]
	ADCH = (uint16_t)((val2 & NVMCTRL_FUSES_HOT_ADC_VAL_Msk) >> NVMCTRL_FUSES_HOT_ADC_VAL_Pos);
    5a9c:	9d04      	ldr	r5, [sp, #16]
    5a9e:	0d2d      	lsrs	r5, r5, #20
    5aa0:	4b35      	ldr	r3, [pc, #212]	; (5b78 <load_calibration_data+0x114>)
    5aa2:	801d      	strh	r5, [r3, #0]
	room_temp_val_dec = (uint8_t)((val1 & NVMCTRL_FUSES_ROOM_TEMP_VAL_DEC_Msk) >> NVMCTRL_FUSES_ROOM_TEMP_VAL_DEC_Pos);
    5aa4:	0a00      	lsrs	r0, r0, #8
    5aa6:	270f      	movs	r7, #15
    5aa8:	46b8      	mov	r8, r7
	tempR = room_temp_val_int + convert_dec_to_frac(room_temp_val_dec);
    5aaa:	4038      	ands	r0, r7
    5aac:	4f33      	ldr	r7, [pc, #204]	; (5b7c <load_calibration_data+0x118>)
    5aae:	46bb      	mov	fp, r7
    5ab0:	47b8      	blx	r7
    5ab2:	9003      	str	r0, [sp, #12]
    5ab4:	27ff      	movs	r7, #255	; 0xff
    5ab6:	403e      	ands	r6, r7
    5ab8:	0030      	movs	r0, r6
    5aba:	4e31      	ldr	r6, [pc, #196]	; (5b80 <load_calibration_data+0x11c>)
    5abc:	47b0      	blx	r6
    5abe:	4b31      	ldr	r3, [pc, #196]	; (5b84 <load_calibration_data+0x120>)
    5ac0:	469a      	mov	sl, r3
    5ac2:	9903      	ldr	r1, [sp, #12]
    5ac4:	4798      	blx	r3
    5ac6:	4b30      	ldr	r3, [pc, #192]	; (5b88 <load_calibration_data+0x124>)
    5ac8:	6018      	str	r0, [r3, #0]
	hot_temp_val_dec = (uint8_t)((val1 & NVMCTRL_FUSES_HOT_TEMP_VAL_DEC_Msk) >> NVMCTRL_FUSES_HOT_TEMP_VAL_DEC_Pos);
    5aca:	4648      	mov	r0, r9
    5acc:	0d00      	lsrs	r0, r0, #20
	tempH = hot_temp_val_int + convert_dec_to_frac(hot_temp_val_dec);
    5ace:	4641      	mov	r1, r8
    5ad0:	4008      	ands	r0, r1
    5ad2:	47d8      	blx	fp
    5ad4:	9003      	str	r0, [sp, #12]
	hot_temp_val_int = (uint8_t)((val1 & NVMCTRL_FUSES_HOT_TEMP_VAL_INT_Msk) >> NVMCTRL_FUSES_HOT_TEMP_VAL_INT_Pos);
    5ad6:	9b00      	ldr	r3, [sp, #0]
    5ad8:	0b18      	lsrs	r0, r3, #12
	tempH = hot_temp_val_int + convert_dec_to_frac(hot_temp_val_dec);
    5ada:	4038      	ands	r0, r7
    5adc:	47b0      	blx	r6
    5ade:	9903      	ldr	r1, [sp, #12]
    5ae0:	47d0      	blx	sl
    5ae2:	4b2a      	ldr	r3, [pc, #168]	; (5b8c <load_calibration_data+0x128>)
    5ae4:	6018      	str	r0, [r3, #0]
	INT1VR = 1 - ((float)room_int1v_val/INT1V_DIVIDER_1000);
    5ae6:	9a01      	ldr	r2, [sp, #4]
    5ae8:	1610      	asrs	r0, r2, #24
    5aea:	47b0      	blx	r6
    5aec:	4b28      	ldr	r3, [pc, #160]	; (5b90 <load_calibration_data+0x12c>)
    5aee:	469b      	mov	fp, r3
    5af0:	4798      	blx	r3
    5af2:	4b28      	ldr	r3, [pc, #160]	; (5b94 <load_calibration_data+0x130>)
    5af4:	469a      	mov	sl, r3
    5af6:	2200      	movs	r2, #0
    5af8:	4b27      	ldr	r3, [pc, #156]	; (5b98 <load_calibration_data+0x134>)
    5afa:	47d0      	blx	sl
    5afc:	0002      	movs	r2, r0
    5afe:	000b      	movs	r3, r1
    5b00:	4826      	ldr	r0, [pc, #152]	; (5b9c <load_calibration_data+0x138>)
    5b02:	4681      	mov	r9, r0
    5b04:	2000      	movs	r0, #0
    5b06:	4926      	ldr	r1, [pc, #152]	; (5ba0 <load_calibration_data+0x13c>)
    5b08:	47c8      	blx	r9
    5b0a:	4f26      	ldr	r7, [pc, #152]	; (5ba4 <load_calibration_data+0x140>)
    5b0c:	47b8      	blx	r7
    5b0e:	4b26      	ldr	r3, [pc, #152]	; (5ba8 <load_calibration_data+0x144>)
    5b10:	9000      	str	r0, [sp, #0]
    5b12:	6018      	str	r0, [r3, #0]
	INT1VH = 1 - ((float)hot_int1v_val/INT1V_DIVIDER_1000);
    5b14:	466b      	mov	r3, sp
    5b16:	2008      	movs	r0, #8
    5b18:	5618      	ldrsb	r0, [r3, r0]
    5b1a:	47b0      	blx	r6
    5b1c:	47d8      	blx	fp
    5b1e:	2200      	movs	r2, #0
    5b20:	4b1d      	ldr	r3, [pc, #116]	; (5b98 <load_calibration_data+0x134>)
    5b22:	47d0      	blx	sl
    5b24:	0002      	movs	r2, r0
    5b26:	000b      	movs	r3, r1
    5b28:	2000      	movs	r0, #0
    5b2a:	491d      	ldr	r1, [pc, #116]	; (5ba0 <load_calibration_data+0x13c>)
    5b2c:	47c8      	blx	r9
    5b2e:	47b8      	blx	r7
    5b30:	4b1e      	ldr	r3, [pc, #120]	; (5bac <load_calibration_data+0x148>)
    5b32:	9001      	str	r0, [sp, #4]
    5b34:	6018      	str	r0, [r3, #0]
	VADCR = ((float)ADCR * INT1VR)/ADC_12BIT_FULL_SCALE_VALUE_FLOAT;
    5b36:	4f1e      	ldr	r7, [pc, #120]	; (5bb0 <load_calibration_data+0x14c>)
    5b38:	0020      	movs	r0, r4
    5b3a:	47b8      	blx	r7
    5b3c:	4e1d      	ldr	r6, [pc, #116]	; (5bb4 <load_calibration_data+0x150>)
    5b3e:	9900      	ldr	r1, [sp, #0]
    5b40:	47b0      	blx	r6
    5b42:	4c1d      	ldr	r4, [pc, #116]	; (5bb8 <load_calibration_data+0x154>)
    5b44:	491d      	ldr	r1, [pc, #116]	; (5bbc <load_calibration_data+0x158>)
    5b46:	47a0      	blx	r4
    5b48:	4b1d      	ldr	r3, [pc, #116]	; (5bc0 <load_calibration_data+0x15c>)
    5b4a:	6018      	str	r0, [r3, #0]
	VADCH = ((float)ADCH * INT1VH)/ADC_12BIT_FULL_SCALE_VALUE_FLOAT;
    5b4c:	0028      	movs	r0, r5
    5b4e:	47b8      	blx	r7
    5b50:	9901      	ldr	r1, [sp, #4]
    5b52:	47b0      	blx	r6
    5b54:	4919      	ldr	r1, [pc, #100]	; (5bbc <load_calibration_data+0x158>)
    5b56:	47a0      	blx	r4
    5b58:	4b1a      	ldr	r3, [pc, #104]	; (5bc4 <load_calibration_data+0x160>)
    5b5a:	6018      	str	r0, [r3, #0]
}
    5b5c:	b007      	add	sp, #28
    5b5e:	bc3c      	pop	{r2, r3, r4, r5}
    5b60:	4690      	mov	r8, r2
    5b62:	4699      	mov	r9, r3
    5b64:	46a2      	mov	sl, r4
    5b66:	46ab      	mov	fp, r5
    5b68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5b6a:	46c0      	nop			; (mov r8, r8)
    5b6c:	00806030 	.word	0x00806030
    5b70:	00806034 	.word	0x00806034
    5b74:	20000700 	.word	0x20000700
    5b78:	200006f4 	.word	0x200006f4
    5b7c:	00005a21 	.word	0x00005a21
    5b80:	00006bfd 	.word	0x00006bfd
    5b84:	00006091 	.word	0x00006091
    5b88:	20000708 	.word	0x20000708
    5b8c:	20000718 	.word	0x20000718
    5b90:	000079bd 	.word	0x000079bd
    5b94:	00006d29 	.word	0x00006d29
    5b98:	408f4000 	.word	0x408f4000
    5b9c:	00007391 	.word	0x00007391
    5ba0:	3ff00000 	.word	0x3ff00000
    5ba4:	00007a61 	.word	0x00007a61
    5ba8:	200006fc 	.word	0x200006fc
    5bac:	200006f0 	.word	0x200006f0
    5bb0:	00006c9d 	.word	0x00006c9d
    5bb4:	00006645 	.word	0x00006645
    5bb8:	000063b5 	.word	0x000063b5
    5bbc:	457ff000 	.word	0x457ff000
    5bc0:	200006ec 	.word	0x200006ec
    5bc4:	2000070c 	.word	0x2000070c

00005bc8 <config_test_pins>:
static volatile bool main_b_generic_enable = false;

/*! \brief Main function. Execution starts here.*/

void config_test_pins()
{
    5bc8:	b500      	push	{lr}
    5bca:	b083      	sub	sp, #12
	config->input_pull = PORT_PIN_PULL_UP;
    5bcc:	a901      	add	r1, sp, #4
    5bce:	2301      	movs	r3, #1
    5bd0:	704b      	strb	r3, [r1, #1]
	config->powersave  = false;
    5bd2:	2200      	movs	r2, #0
    5bd4:	708a      	strb	r2, [r1, #2]
	struct port_config config_port_pin;
	port_get_config_defaults(&config_port_pin);
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
    5bd6:	700b      	strb	r3, [r1, #0]
	port_pin_set_config(PIN_PA08, &config_port_pin);
    5bd8:	2008      	movs	r0, #8
    5bda:	4b02      	ldr	r3, [pc, #8]	; (5be4 <config_test_pins+0x1c>)
    5bdc:	4798      	blx	r3
}
    5bde:	b003      	add	sp, #12
    5be0:	bd00      	pop	{pc}
    5be2:	46c0      	nop			; (mov r8, r8)
    5be4:	00002349 	.word	0x00002349

00005be8 <main>:

int main(void)
{
    5be8:	b510      	push	{r4, lr}
	static uint16_t i =0;
	
	configure_power_enable_pins();
    5bea:	4b14      	ldr	r3, [pc, #80]	; (5c3c <main+0x54>)
    5bec:	4798      	blx	r3
	enable_power_ic();
    5bee:	4b14      	ldr	r3, [pc, #80]	; (5c40 <main+0x58>)
    5bf0:	4798      	blx	r3
	
	board_init(); //Predefined
    5bf2:	4b14      	ldr	r3, [pc, #80]	; (5c44 <main+0x5c>)
    5bf4:	4798      	blx	r3
	system_init(); //Predefined
    5bf6:	4b14      	ldr	r3, [pc, #80]	; (5c48 <main+0x60>)
    5bf8:	4798      	blx	r3
	//irq_initialize_vectors();
	//cpu_irq_enable();
	//Initialize the sleep manager
	//sleepmgr_init();

	delay_init();
    5bfa:	4b14      	ldr	r3, [pc, #80]	; (5c4c <main+0x64>)
    5bfc:	4798      	blx	r3
	
	config_test_pins();
    5bfe:	4b14      	ldr	r3, [pc, #80]	; (5c50 <main+0x68>)
    5c00:	4798      	blx	r3

	ui_init();
    5c02:	4b14      	ldr	r3, [pc, #80]	; (5c54 <main+0x6c>)
    5c04:	4798      	blx	r3
	ui_powerdown();
    5c06:	4b14      	ldr	r3, [pc, #80]	; (5c58 <main+0x70>)
    5c08:	4798      	blx	r3
	
	configure_rgb_led();
    5c0a:	4b14      	ldr	r3, [pc, #80]	; (5c5c <main+0x74>)
    5c0c:	4798      	blx	r3
	configure_tc_callbacks();
    5c0e:	4b14      	ldr	r3, [pc, #80]	; (5c60 <main+0x78>)
    5c10:	4798      	blx	r3
	
	configure_adc();
    5c12:	4b14      	ldr	r3, [pc, #80]	; (5c64 <main+0x7c>)
    5c14:	4798      	blx	r3
	config_motors();
    5c16:	4b14      	ldr	r3, [pc, #80]	; (5c68 <main+0x80>)
    5c18:	4798      	blx	r3
//configure_dac();
//configure_dac_channel();
//config_ir();
//configure_tcc_callbacks();

	configure_buzzer();
    5c1a:	4b14      	ldr	r3, [pc, #80]	; (5c6c <main+0x84>)
    5c1c:	4798      	blx	r3
	config_accel(); // Need to do this before USB to get I2C working while allowing USB to use the other two pins of SERCOM3
    5c1e:	4b14      	ldr	r3, [pc, #80]	; (5c70 <main+0x88>)
    5c20:	4798      	blx	r3

	configure_ultrasound();
    5c22:	4b14      	ldr	r3, [pc, #80]	; (5c74 <main+0x8c>)
    5c24:	4798      	blx	r3
	setup_ultrasound();
    5c26:	4b14      	ldr	r3, [pc, #80]	; (5c78 <main+0x90>)
    5c28:	4798      	blx	r3
	
	
	
	//calc_baud = (uint8_t)(system_gclk_chan_get_hz(SERCOM0_GCLK_ID_CORE + 1)/10000000);
	// Start USB stack to authorize VBus monitoring
	udc_start();
    5c2a:	4b14      	ldr	r3, [pc, #80]	; (5c7c <main+0x94>)
    5c2c:	4798      	blx	r3
	cpu_irq_enable();
    5c2e:	2201      	movs	r2, #1
    5c30:	4b13      	ldr	r3, [pc, #76]	; (5c80 <main+0x98>)
    5c32:	701a      	strb	r2, [r3, #0]
    5c34:	f3bf 8f5f 	dmb	sy
    5c38:	b662      	cpsie	i
    5c3a:	e7fe      	b.n	5c3a <main+0x52>
    5c3c:	00000741 	.word	0x00000741
    5c40:	0000072d 	.word	0x0000072d
    5c44:	00000115 	.word	0x00000115
    5c48:	000030fd 	.word	0x000030fd
    5c4c:	00000ac1 	.word	0x00000ac1
    5c50:	00005bc9 	.word	0x00005bc9
    5c54:	00001075 	.word	0x00001075
    5c58:	00001077 	.word	0x00001077
    5c5c:	00000615 	.word	0x00000615
    5c60:	000006a9 	.word	0x000006a9
    5c64:	000057bd 	.word	0x000057bd
    5c68:	00000b4d 	.word	0x00000b4d
    5c6c:	00001061 	.word	0x00001061
    5c70:	000009cd 	.word	0x000009cd
    5c74:	0000094d 	.word	0x0000094d
    5c78:	00000875 	.word	0x00000875
    5c7c:	00001689 	.word	0x00001689
    5c80:	20000116 	.word	0x20000116

00005c84 <main_suspend_action>:
	
	}
}

void main_suspend_action(void)
{
    5c84:	b510      	push	{r4, lr}
	ui_powerdown();
    5c86:	4b01      	ldr	r3, [pc, #4]	; (5c8c <main_suspend_action+0x8>)
    5c88:	4798      	blx	r3
}
    5c8a:	bd10      	pop	{r4, pc}
    5c8c:	00001077 	.word	0x00001077

00005c90 <main_resume_action>:

void main_resume_action(void)
{
    5c90:	b510      	push	{r4, lr}
	ui_wakeup();
    5c92:	4b01      	ldr	r3, [pc, #4]	; (5c98 <main_resume_action+0x8>)
    5c94:	4798      	blx	r3
}
    5c96:	bd10      	pop	{r4, pc}
    5c98:	0000107d 	.word	0x0000107d

00005c9c <main_sof_action>:

void main_sof_action(void)
{
    5c9c:	b510      	push	{r4, lr}
	if (!main_b_generic_enable)
    5c9e:	4b05      	ldr	r3, [pc, #20]	; (5cb4 <main_sof_action+0x18>)
    5ca0:	781b      	ldrb	r3, [r3, #0]
    5ca2:	2b00      	cmp	r3, #0
    5ca4:	d100      	bne.n	5ca8 <main_sof_action+0xc>
		return;
	ui_process(udd_get_frame_number());
}
    5ca6:	bd10      	pop	{r4, pc}
	ui_process(udd_get_frame_number());
    5ca8:	4b03      	ldr	r3, [pc, #12]	; (5cb8 <main_sof_action+0x1c>)
    5caa:	4798      	blx	r3
    5cac:	4b03      	ldr	r3, [pc, #12]	; (5cbc <main_sof_action+0x20>)
    5cae:	4798      	blx	r3
    5cb0:	e7f9      	b.n	5ca6 <main_sof_action+0xa>
    5cb2:	46c0      	nop			; (mov r8, r8)
    5cb4:	2000023a 	.word	0x2000023a
    5cb8:	00004261 	.word	0x00004261
    5cbc:	0000107f 	.word	0x0000107f

00005cc0 <main_remotewakeup_enable>:

void main_remotewakeup_enable(void)
{
    5cc0:	b510      	push	{r4, lr}
	ui_wakeup_enable();
    5cc2:	4b01      	ldr	r3, [pc, #4]	; (5cc8 <main_remotewakeup_enable+0x8>)
    5cc4:	4798      	blx	r3
}
    5cc6:	bd10      	pop	{r4, pc}
    5cc8:	00001079 	.word	0x00001079

00005ccc <main_remotewakeup_disable>:

void main_remotewakeup_disable(void)
{
    5ccc:	b510      	push	{r4, lr}
	ui_wakeup_disable();
    5cce:	4b01      	ldr	r3, [pc, #4]	; (5cd4 <main_remotewakeup_disable+0x8>)
    5cd0:	4798      	blx	r3
}
    5cd2:	bd10      	pop	{r4, pc}
    5cd4:	0000107b 	.word	0x0000107b

00005cd8 <main_generic_enable>:

bool main_generic_enable(void)
{
	main_b_generic_enable = true;
    5cd8:	2201      	movs	r2, #1
    5cda:	4b02      	ldr	r3, [pc, #8]	; (5ce4 <main_generic_enable+0xc>)
    5cdc:	701a      	strb	r2, [r3, #0]
	return true;
}
    5cde:	2001      	movs	r0, #1
    5ce0:	4770      	bx	lr
    5ce2:	46c0      	nop			; (mov r8, r8)
    5ce4:	2000023a 	.word	0x2000023a

00005ce8 <main_generic_disable>:

void main_generic_disable(void)
{
	main_b_generic_enable = false;
    5ce8:	2200      	movs	r2, #0
    5cea:	4b01      	ldr	r3, [pc, #4]	; (5cf0 <main_generic_disable+0x8>)
    5cec:	701a      	strb	r2, [r3, #0]
}
    5cee:	4770      	bx	lr
    5cf0:	2000023a 	.word	0x2000023a

00005cf4 <main_hid_set_feature>:
			&& report[2] == 0xAA && report[3] == 0x55) {
		// Disconnect USB Device
		udc_stop();
		ui_powerdown();
	}*/
}
    5cf4:	4770      	bx	lr
	...

00005cf8 <__udivsi3>:
    5cf8:	2200      	movs	r2, #0
    5cfa:	0843      	lsrs	r3, r0, #1
    5cfc:	428b      	cmp	r3, r1
    5cfe:	d374      	bcc.n	5dea <__udivsi3+0xf2>
    5d00:	0903      	lsrs	r3, r0, #4
    5d02:	428b      	cmp	r3, r1
    5d04:	d35f      	bcc.n	5dc6 <__udivsi3+0xce>
    5d06:	0a03      	lsrs	r3, r0, #8
    5d08:	428b      	cmp	r3, r1
    5d0a:	d344      	bcc.n	5d96 <__udivsi3+0x9e>
    5d0c:	0b03      	lsrs	r3, r0, #12
    5d0e:	428b      	cmp	r3, r1
    5d10:	d328      	bcc.n	5d64 <__udivsi3+0x6c>
    5d12:	0c03      	lsrs	r3, r0, #16
    5d14:	428b      	cmp	r3, r1
    5d16:	d30d      	bcc.n	5d34 <__udivsi3+0x3c>
    5d18:	22ff      	movs	r2, #255	; 0xff
    5d1a:	0209      	lsls	r1, r1, #8
    5d1c:	ba12      	rev	r2, r2
    5d1e:	0c03      	lsrs	r3, r0, #16
    5d20:	428b      	cmp	r3, r1
    5d22:	d302      	bcc.n	5d2a <__udivsi3+0x32>
    5d24:	1212      	asrs	r2, r2, #8
    5d26:	0209      	lsls	r1, r1, #8
    5d28:	d065      	beq.n	5df6 <__udivsi3+0xfe>
    5d2a:	0b03      	lsrs	r3, r0, #12
    5d2c:	428b      	cmp	r3, r1
    5d2e:	d319      	bcc.n	5d64 <__udivsi3+0x6c>
    5d30:	e000      	b.n	5d34 <__udivsi3+0x3c>
    5d32:	0a09      	lsrs	r1, r1, #8
    5d34:	0bc3      	lsrs	r3, r0, #15
    5d36:	428b      	cmp	r3, r1
    5d38:	d301      	bcc.n	5d3e <__udivsi3+0x46>
    5d3a:	03cb      	lsls	r3, r1, #15
    5d3c:	1ac0      	subs	r0, r0, r3
    5d3e:	4152      	adcs	r2, r2
    5d40:	0b83      	lsrs	r3, r0, #14
    5d42:	428b      	cmp	r3, r1
    5d44:	d301      	bcc.n	5d4a <__udivsi3+0x52>
    5d46:	038b      	lsls	r3, r1, #14
    5d48:	1ac0      	subs	r0, r0, r3
    5d4a:	4152      	adcs	r2, r2
    5d4c:	0b43      	lsrs	r3, r0, #13
    5d4e:	428b      	cmp	r3, r1
    5d50:	d301      	bcc.n	5d56 <__udivsi3+0x5e>
    5d52:	034b      	lsls	r3, r1, #13
    5d54:	1ac0      	subs	r0, r0, r3
    5d56:	4152      	adcs	r2, r2
    5d58:	0b03      	lsrs	r3, r0, #12
    5d5a:	428b      	cmp	r3, r1
    5d5c:	d301      	bcc.n	5d62 <__udivsi3+0x6a>
    5d5e:	030b      	lsls	r3, r1, #12
    5d60:	1ac0      	subs	r0, r0, r3
    5d62:	4152      	adcs	r2, r2
    5d64:	0ac3      	lsrs	r3, r0, #11
    5d66:	428b      	cmp	r3, r1
    5d68:	d301      	bcc.n	5d6e <__udivsi3+0x76>
    5d6a:	02cb      	lsls	r3, r1, #11
    5d6c:	1ac0      	subs	r0, r0, r3
    5d6e:	4152      	adcs	r2, r2
    5d70:	0a83      	lsrs	r3, r0, #10
    5d72:	428b      	cmp	r3, r1
    5d74:	d301      	bcc.n	5d7a <__udivsi3+0x82>
    5d76:	028b      	lsls	r3, r1, #10
    5d78:	1ac0      	subs	r0, r0, r3
    5d7a:	4152      	adcs	r2, r2
    5d7c:	0a43      	lsrs	r3, r0, #9
    5d7e:	428b      	cmp	r3, r1
    5d80:	d301      	bcc.n	5d86 <__udivsi3+0x8e>
    5d82:	024b      	lsls	r3, r1, #9
    5d84:	1ac0      	subs	r0, r0, r3
    5d86:	4152      	adcs	r2, r2
    5d88:	0a03      	lsrs	r3, r0, #8
    5d8a:	428b      	cmp	r3, r1
    5d8c:	d301      	bcc.n	5d92 <__udivsi3+0x9a>
    5d8e:	020b      	lsls	r3, r1, #8
    5d90:	1ac0      	subs	r0, r0, r3
    5d92:	4152      	adcs	r2, r2
    5d94:	d2cd      	bcs.n	5d32 <__udivsi3+0x3a>
    5d96:	09c3      	lsrs	r3, r0, #7
    5d98:	428b      	cmp	r3, r1
    5d9a:	d301      	bcc.n	5da0 <__udivsi3+0xa8>
    5d9c:	01cb      	lsls	r3, r1, #7
    5d9e:	1ac0      	subs	r0, r0, r3
    5da0:	4152      	adcs	r2, r2
    5da2:	0983      	lsrs	r3, r0, #6
    5da4:	428b      	cmp	r3, r1
    5da6:	d301      	bcc.n	5dac <__udivsi3+0xb4>
    5da8:	018b      	lsls	r3, r1, #6
    5daa:	1ac0      	subs	r0, r0, r3
    5dac:	4152      	adcs	r2, r2
    5dae:	0943      	lsrs	r3, r0, #5
    5db0:	428b      	cmp	r3, r1
    5db2:	d301      	bcc.n	5db8 <__udivsi3+0xc0>
    5db4:	014b      	lsls	r3, r1, #5
    5db6:	1ac0      	subs	r0, r0, r3
    5db8:	4152      	adcs	r2, r2
    5dba:	0903      	lsrs	r3, r0, #4
    5dbc:	428b      	cmp	r3, r1
    5dbe:	d301      	bcc.n	5dc4 <__udivsi3+0xcc>
    5dc0:	010b      	lsls	r3, r1, #4
    5dc2:	1ac0      	subs	r0, r0, r3
    5dc4:	4152      	adcs	r2, r2
    5dc6:	08c3      	lsrs	r3, r0, #3
    5dc8:	428b      	cmp	r3, r1
    5dca:	d301      	bcc.n	5dd0 <__udivsi3+0xd8>
    5dcc:	00cb      	lsls	r3, r1, #3
    5dce:	1ac0      	subs	r0, r0, r3
    5dd0:	4152      	adcs	r2, r2
    5dd2:	0883      	lsrs	r3, r0, #2
    5dd4:	428b      	cmp	r3, r1
    5dd6:	d301      	bcc.n	5ddc <__udivsi3+0xe4>
    5dd8:	008b      	lsls	r3, r1, #2
    5dda:	1ac0      	subs	r0, r0, r3
    5ddc:	4152      	adcs	r2, r2
    5dde:	0843      	lsrs	r3, r0, #1
    5de0:	428b      	cmp	r3, r1
    5de2:	d301      	bcc.n	5de8 <__udivsi3+0xf0>
    5de4:	004b      	lsls	r3, r1, #1
    5de6:	1ac0      	subs	r0, r0, r3
    5de8:	4152      	adcs	r2, r2
    5dea:	1a41      	subs	r1, r0, r1
    5dec:	d200      	bcs.n	5df0 <__udivsi3+0xf8>
    5dee:	4601      	mov	r1, r0
    5df0:	4152      	adcs	r2, r2
    5df2:	4610      	mov	r0, r2
    5df4:	4770      	bx	lr
    5df6:	e7ff      	b.n	5df8 <__udivsi3+0x100>
    5df8:	b501      	push	{r0, lr}
    5dfa:	2000      	movs	r0, #0
    5dfc:	f000 f8f0 	bl	5fe0 <__aeabi_idiv0>
    5e00:	bd02      	pop	{r1, pc}
    5e02:	46c0      	nop			; (mov r8, r8)

00005e04 <__aeabi_uidivmod>:
    5e04:	2900      	cmp	r1, #0
    5e06:	d0f7      	beq.n	5df8 <__udivsi3+0x100>
    5e08:	e776      	b.n	5cf8 <__udivsi3>
    5e0a:	4770      	bx	lr

00005e0c <__divsi3>:
    5e0c:	4603      	mov	r3, r0
    5e0e:	430b      	orrs	r3, r1
    5e10:	d47f      	bmi.n	5f12 <__divsi3+0x106>
    5e12:	2200      	movs	r2, #0
    5e14:	0843      	lsrs	r3, r0, #1
    5e16:	428b      	cmp	r3, r1
    5e18:	d374      	bcc.n	5f04 <__divsi3+0xf8>
    5e1a:	0903      	lsrs	r3, r0, #4
    5e1c:	428b      	cmp	r3, r1
    5e1e:	d35f      	bcc.n	5ee0 <__divsi3+0xd4>
    5e20:	0a03      	lsrs	r3, r0, #8
    5e22:	428b      	cmp	r3, r1
    5e24:	d344      	bcc.n	5eb0 <__divsi3+0xa4>
    5e26:	0b03      	lsrs	r3, r0, #12
    5e28:	428b      	cmp	r3, r1
    5e2a:	d328      	bcc.n	5e7e <__divsi3+0x72>
    5e2c:	0c03      	lsrs	r3, r0, #16
    5e2e:	428b      	cmp	r3, r1
    5e30:	d30d      	bcc.n	5e4e <__divsi3+0x42>
    5e32:	22ff      	movs	r2, #255	; 0xff
    5e34:	0209      	lsls	r1, r1, #8
    5e36:	ba12      	rev	r2, r2
    5e38:	0c03      	lsrs	r3, r0, #16
    5e3a:	428b      	cmp	r3, r1
    5e3c:	d302      	bcc.n	5e44 <__divsi3+0x38>
    5e3e:	1212      	asrs	r2, r2, #8
    5e40:	0209      	lsls	r1, r1, #8
    5e42:	d065      	beq.n	5f10 <__divsi3+0x104>
    5e44:	0b03      	lsrs	r3, r0, #12
    5e46:	428b      	cmp	r3, r1
    5e48:	d319      	bcc.n	5e7e <__divsi3+0x72>
    5e4a:	e000      	b.n	5e4e <__divsi3+0x42>
    5e4c:	0a09      	lsrs	r1, r1, #8
    5e4e:	0bc3      	lsrs	r3, r0, #15
    5e50:	428b      	cmp	r3, r1
    5e52:	d301      	bcc.n	5e58 <__divsi3+0x4c>
    5e54:	03cb      	lsls	r3, r1, #15
    5e56:	1ac0      	subs	r0, r0, r3
    5e58:	4152      	adcs	r2, r2
    5e5a:	0b83      	lsrs	r3, r0, #14
    5e5c:	428b      	cmp	r3, r1
    5e5e:	d301      	bcc.n	5e64 <__divsi3+0x58>
    5e60:	038b      	lsls	r3, r1, #14
    5e62:	1ac0      	subs	r0, r0, r3
    5e64:	4152      	adcs	r2, r2
    5e66:	0b43      	lsrs	r3, r0, #13
    5e68:	428b      	cmp	r3, r1
    5e6a:	d301      	bcc.n	5e70 <__divsi3+0x64>
    5e6c:	034b      	lsls	r3, r1, #13
    5e6e:	1ac0      	subs	r0, r0, r3
    5e70:	4152      	adcs	r2, r2
    5e72:	0b03      	lsrs	r3, r0, #12
    5e74:	428b      	cmp	r3, r1
    5e76:	d301      	bcc.n	5e7c <__divsi3+0x70>
    5e78:	030b      	lsls	r3, r1, #12
    5e7a:	1ac0      	subs	r0, r0, r3
    5e7c:	4152      	adcs	r2, r2
    5e7e:	0ac3      	lsrs	r3, r0, #11
    5e80:	428b      	cmp	r3, r1
    5e82:	d301      	bcc.n	5e88 <__divsi3+0x7c>
    5e84:	02cb      	lsls	r3, r1, #11
    5e86:	1ac0      	subs	r0, r0, r3
    5e88:	4152      	adcs	r2, r2
    5e8a:	0a83      	lsrs	r3, r0, #10
    5e8c:	428b      	cmp	r3, r1
    5e8e:	d301      	bcc.n	5e94 <__divsi3+0x88>
    5e90:	028b      	lsls	r3, r1, #10
    5e92:	1ac0      	subs	r0, r0, r3
    5e94:	4152      	adcs	r2, r2
    5e96:	0a43      	lsrs	r3, r0, #9
    5e98:	428b      	cmp	r3, r1
    5e9a:	d301      	bcc.n	5ea0 <__divsi3+0x94>
    5e9c:	024b      	lsls	r3, r1, #9
    5e9e:	1ac0      	subs	r0, r0, r3
    5ea0:	4152      	adcs	r2, r2
    5ea2:	0a03      	lsrs	r3, r0, #8
    5ea4:	428b      	cmp	r3, r1
    5ea6:	d301      	bcc.n	5eac <__divsi3+0xa0>
    5ea8:	020b      	lsls	r3, r1, #8
    5eaa:	1ac0      	subs	r0, r0, r3
    5eac:	4152      	adcs	r2, r2
    5eae:	d2cd      	bcs.n	5e4c <__divsi3+0x40>
    5eb0:	09c3      	lsrs	r3, r0, #7
    5eb2:	428b      	cmp	r3, r1
    5eb4:	d301      	bcc.n	5eba <__divsi3+0xae>
    5eb6:	01cb      	lsls	r3, r1, #7
    5eb8:	1ac0      	subs	r0, r0, r3
    5eba:	4152      	adcs	r2, r2
    5ebc:	0983      	lsrs	r3, r0, #6
    5ebe:	428b      	cmp	r3, r1
    5ec0:	d301      	bcc.n	5ec6 <__divsi3+0xba>
    5ec2:	018b      	lsls	r3, r1, #6
    5ec4:	1ac0      	subs	r0, r0, r3
    5ec6:	4152      	adcs	r2, r2
    5ec8:	0943      	lsrs	r3, r0, #5
    5eca:	428b      	cmp	r3, r1
    5ecc:	d301      	bcc.n	5ed2 <__divsi3+0xc6>
    5ece:	014b      	lsls	r3, r1, #5
    5ed0:	1ac0      	subs	r0, r0, r3
    5ed2:	4152      	adcs	r2, r2
    5ed4:	0903      	lsrs	r3, r0, #4
    5ed6:	428b      	cmp	r3, r1
    5ed8:	d301      	bcc.n	5ede <__divsi3+0xd2>
    5eda:	010b      	lsls	r3, r1, #4
    5edc:	1ac0      	subs	r0, r0, r3
    5ede:	4152      	adcs	r2, r2
    5ee0:	08c3      	lsrs	r3, r0, #3
    5ee2:	428b      	cmp	r3, r1
    5ee4:	d301      	bcc.n	5eea <__divsi3+0xde>
    5ee6:	00cb      	lsls	r3, r1, #3
    5ee8:	1ac0      	subs	r0, r0, r3
    5eea:	4152      	adcs	r2, r2
    5eec:	0883      	lsrs	r3, r0, #2
    5eee:	428b      	cmp	r3, r1
    5ef0:	d301      	bcc.n	5ef6 <__divsi3+0xea>
    5ef2:	008b      	lsls	r3, r1, #2
    5ef4:	1ac0      	subs	r0, r0, r3
    5ef6:	4152      	adcs	r2, r2
    5ef8:	0843      	lsrs	r3, r0, #1
    5efa:	428b      	cmp	r3, r1
    5efc:	d301      	bcc.n	5f02 <__divsi3+0xf6>
    5efe:	004b      	lsls	r3, r1, #1
    5f00:	1ac0      	subs	r0, r0, r3
    5f02:	4152      	adcs	r2, r2
    5f04:	1a41      	subs	r1, r0, r1
    5f06:	d200      	bcs.n	5f0a <__divsi3+0xfe>
    5f08:	4601      	mov	r1, r0
    5f0a:	4152      	adcs	r2, r2
    5f0c:	4610      	mov	r0, r2
    5f0e:	4770      	bx	lr
    5f10:	e05d      	b.n	5fce <__divsi3+0x1c2>
    5f12:	0fca      	lsrs	r2, r1, #31
    5f14:	d000      	beq.n	5f18 <__divsi3+0x10c>
    5f16:	4249      	negs	r1, r1
    5f18:	1003      	asrs	r3, r0, #32
    5f1a:	d300      	bcc.n	5f1e <__divsi3+0x112>
    5f1c:	4240      	negs	r0, r0
    5f1e:	4053      	eors	r3, r2
    5f20:	2200      	movs	r2, #0
    5f22:	469c      	mov	ip, r3
    5f24:	0903      	lsrs	r3, r0, #4
    5f26:	428b      	cmp	r3, r1
    5f28:	d32d      	bcc.n	5f86 <__divsi3+0x17a>
    5f2a:	0a03      	lsrs	r3, r0, #8
    5f2c:	428b      	cmp	r3, r1
    5f2e:	d312      	bcc.n	5f56 <__divsi3+0x14a>
    5f30:	22fc      	movs	r2, #252	; 0xfc
    5f32:	0189      	lsls	r1, r1, #6
    5f34:	ba12      	rev	r2, r2
    5f36:	0a03      	lsrs	r3, r0, #8
    5f38:	428b      	cmp	r3, r1
    5f3a:	d30c      	bcc.n	5f56 <__divsi3+0x14a>
    5f3c:	0189      	lsls	r1, r1, #6
    5f3e:	1192      	asrs	r2, r2, #6
    5f40:	428b      	cmp	r3, r1
    5f42:	d308      	bcc.n	5f56 <__divsi3+0x14a>
    5f44:	0189      	lsls	r1, r1, #6
    5f46:	1192      	asrs	r2, r2, #6
    5f48:	428b      	cmp	r3, r1
    5f4a:	d304      	bcc.n	5f56 <__divsi3+0x14a>
    5f4c:	0189      	lsls	r1, r1, #6
    5f4e:	d03a      	beq.n	5fc6 <__divsi3+0x1ba>
    5f50:	1192      	asrs	r2, r2, #6
    5f52:	e000      	b.n	5f56 <__divsi3+0x14a>
    5f54:	0989      	lsrs	r1, r1, #6
    5f56:	09c3      	lsrs	r3, r0, #7
    5f58:	428b      	cmp	r3, r1
    5f5a:	d301      	bcc.n	5f60 <__divsi3+0x154>
    5f5c:	01cb      	lsls	r3, r1, #7
    5f5e:	1ac0      	subs	r0, r0, r3
    5f60:	4152      	adcs	r2, r2
    5f62:	0983      	lsrs	r3, r0, #6
    5f64:	428b      	cmp	r3, r1
    5f66:	d301      	bcc.n	5f6c <__divsi3+0x160>
    5f68:	018b      	lsls	r3, r1, #6
    5f6a:	1ac0      	subs	r0, r0, r3
    5f6c:	4152      	adcs	r2, r2
    5f6e:	0943      	lsrs	r3, r0, #5
    5f70:	428b      	cmp	r3, r1
    5f72:	d301      	bcc.n	5f78 <__divsi3+0x16c>
    5f74:	014b      	lsls	r3, r1, #5
    5f76:	1ac0      	subs	r0, r0, r3
    5f78:	4152      	adcs	r2, r2
    5f7a:	0903      	lsrs	r3, r0, #4
    5f7c:	428b      	cmp	r3, r1
    5f7e:	d301      	bcc.n	5f84 <__divsi3+0x178>
    5f80:	010b      	lsls	r3, r1, #4
    5f82:	1ac0      	subs	r0, r0, r3
    5f84:	4152      	adcs	r2, r2
    5f86:	08c3      	lsrs	r3, r0, #3
    5f88:	428b      	cmp	r3, r1
    5f8a:	d301      	bcc.n	5f90 <__divsi3+0x184>
    5f8c:	00cb      	lsls	r3, r1, #3
    5f8e:	1ac0      	subs	r0, r0, r3
    5f90:	4152      	adcs	r2, r2
    5f92:	0883      	lsrs	r3, r0, #2
    5f94:	428b      	cmp	r3, r1
    5f96:	d301      	bcc.n	5f9c <__divsi3+0x190>
    5f98:	008b      	lsls	r3, r1, #2
    5f9a:	1ac0      	subs	r0, r0, r3
    5f9c:	4152      	adcs	r2, r2
    5f9e:	d2d9      	bcs.n	5f54 <__divsi3+0x148>
    5fa0:	0843      	lsrs	r3, r0, #1
    5fa2:	428b      	cmp	r3, r1
    5fa4:	d301      	bcc.n	5faa <__divsi3+0x19e>
    5fa6:	004b      	lsls	r3, r1, #1
    5fa8:	1ac0      	subs	r0, r0, r3
    5faa:	4152      	adcs	r2, r2
    5fac:	1a41      	subs	r1, r0, r1
    5fae:	d200      	bcs.n	5fb2 <__divsi3+0x1a6>
    5fb0:	4601      	mov	r1, r0
    5fb2:	4663      	mov	r3, ip
    5fb4:	4152      	adcs	r2, r2
    5fb6:	105b      	asrs	r3, r3, #1
    5fb8:	4610      	mov	r0, r2
    5fba:	d301      	bcc.n	5fc0 <__divsi3+0x1b4>
    5fbc:	4240      	negs	r0, r0
    5fbe:	2b00      	cmp	r3, #0
    5fc0:	d500      	bpl.n	5fc4 <__divsi3+0x1b8>
    5fc2:	4249      	negs	r1, r1
    5fc4:	4770      	bx	lr
    5fc6:	4663      	mov	r3, ip
    5fc8:	105b      	asrs	r3, r3, #1
    5fca:	d300      	bcc.n	5fce <__divsi3+0x1c2>
    5fcc:	4240      	negs	r0, r0
    5fce:	b501      	push	{r0, lr}
    5fd0:	2000      	movs	r0, #0
    5fd2:	f000 f805 	bl	5fe0 <__aeabi_idiv0>
    5fd6:	bd02      	pop	{r1, pc}

00005fd8 <__aeabi_idivmod>:
    5fd8:	2900      	cmp	r1, #0
    5fda:	d0f8      	beq.n	5fce <__divsi3+0x1c2>
    5fdc:	e716      	b.n	5e0c <__divsi3>
    5fde:	4770      	bx	lr

00005fe0 <__aeabi_idiv0>:
    5fe0:	4770      	bx	lr
    5fe2:	46c0      	nop			; (mov r8, r8)

00005fe4 <__clzsi2>:
    5fe4:	211c      	movs	r1, #28
    5fe6:	2301      	movs	r3, #1
    5fe8:	041b      	lsls	r3, r3, #16
    5fea:	4298      	cmp	r0, r3
    5fec:	d301      	bcc.n	5ff2 <__clzsi2+0xe>
    5fee:	0c00      	lsrs	r0, r0, #16
    5ff0:	3910      	subs	r1, #16
    5ff2:	0a1b      	lsrs	r3, r3, #8
    5ff4:	4298      	cmp	r0, r3
    5ff6:	d301      	bcc.n	5ffc <__clzsi2+0x18>
    5ff8:	0a00      	lsrs	r0, r0, #8
    5ffa:	3908      	subs	r1, #8
    5ffc:	091b      	lsrs	r3, r3, #4
    5ffe:	4298      	cmp	r0, r3
    6000:	d301      	bcc.n	6006 <__clzsi2+0x22>
    6002:	0900      	lsrs	r0, r0, #4
    6004:	3904      	subs	r1, #4
    6006:	a202      	add	r2, pc, #8	; (adr r2, 6010 <__clzsi2+0x2c>)
    6008:	5c10      	ldrb	r0, [r2, r0]
    600a:	1840      	adds	r0, r0, r1
    600c:	4770      	bx	lr
    600e:	46c0      	nop			; (mov r8, r8)
    6010:	02020304 	.word	0x02020304
    6014:	01010101 	.word	0x01010101
	...

00006020 <__ctzsi2>:
    6020:	4241      	negs	r1, r0
    6022:	4008      	ands	r0, r1
    6024:	211c      	movs	r1, #28
    6026:	2301      	movs	r3, #1
    6028:	041b      	lsls	r3, r3, #16
    602a:	4298      	cmp	r0, r3
    602c:	d301      	bcc.n	6032 <__ctzsi2+0x12>
    602e:	0c00      	lsrs	r0, r0, #16
    6030:	3910      	subs	r1, #16
    6032:	0a1b      	lsrs	r3, r3, #8
    6034:	4298      	cmp	r0, r3
    6036:	d301      	bcc.n	603c <__ctzsi2+0x1c>
    6038:	0a00      	lsrs	r0, r0, #8
    603a:	3908      	subs	r1, #8
    603c:	091b      	lsrs	r3, r3, #4
    603e:	4298      	cmp	r0, r3
    6040:	d301      	bcc.n	6046 <__ctzsi2+0x26>
    6042:	0900      	lsrs	r0, r0, #4
    6044:	3904      	subs	r1, #4
    6046:	a202      	add	r2, pc, #8	; (adr r2, 6050 <__ctzsi2+0x30>)
    6048:	5c10      	ldrb	r0, [r2, r0]
    604a:	1a40      	subs	r0, r0, r1
    604c:	4770      	bx	lr
    604e:	46c0      	nop			; (mov r8, r8)
    6050:	1d1d1c1b 	.word	0x1d1d1c1b
    6054:	1e1e1e1e 	.word	0x1e1e1e1e
    6058:	1f1f1f1f 	.word	0x1f1f1f1f
    605c:	1f1f1f1f 	.word	0x1f1f1f1f

00006060 <__aeabi_f2uiz>:
    6060:	219e      	movs	r1, #158	; 0x9e
    6062:	b510      	push	{r4, lr}
    6064:	05c9      	lsls	r1, r1, #23
    6066:	1c04      	adds	r4, r0, #0
    6068:	f001 fdb4 	bl	7bd4 <__aeabi_fcmpge>
    606c:	2800      	cmp	r0, #0
    606e:	d103      	bne.n	6078 <__aeabi_f2uiz+0x18>
    6070:	1c20      	adds	r0, r4, #0
    6072:	f000 fda3 	bl	6bbc <__aeabi_f2iz>
    6076:	bd10      	pop	{r4, pc}
    6078:	219e      	movs	r1, #158	; 0x9e
    607a:	1c20      	adds	r0, r4, #0
    607c:	05c9      	lsls	r1, r1, #23
    607e:	f000 fc01 	bl	6884 <__aeabi_fsub>
    6082:	f000 fd9b 	bl	6bbc <__aeabi_f2iz>
    6086:	2380      	movs	r3, #128	; 0x80
    6088:	061b      	lsls	r3, r3, #24
    608a:	469c      	mov	ip, r3
    608c:	4460      	add	r0, ip
    608e:	e7f2      	b.n	6076 <__aeabi_f2uiz+0x16>

00006090 <__aeabi_fadd>:
    6090:	b5f0      	push	{r4, r5, r6, r7, lr}
    6092:	46c6      	mov	lr, r8
    6094:	024e      	lsls	r6, r1, #9
    6096:	0247      	lsls	r7, r0, #9
    6098:	0a76      	lsrs	r6, r6, #9
    609a:	0a7b      	lsrs	r3, r7, #9
    609c:	0044      	lsls	r4, r0, #1
    609e:	0fc5      	lsrs	r5, r0, #31
    60a0:	00f7      	lsls	r7, r6, #3
    60a2:	0048      	lsls	r0, r1, #1
    60a4:	4698      	mov	r8, r3
    60a6:	b500      	push	{lr}
    60a8:	0e24      	lsrs	r4, r4, #24
    60aa:	002a      	movs	r2, r5
    60ac:	00db      	lsls	r3, r3, #3
    60ae:	0e00      	lsrs	r0, r0, #24
    60b0:	0fc9      	lsrs	r1, r1, #31
    60b2:	46bc      	mov	ip, r7
    60b4:	428d      	cmp	r5, r1
    60b6:	d067      	beq.n	6188 <__aeabi_fadd+0xf8>
    60b8:	1a22      	subs	r2, r4, r0
    60ba:	2a00      	cmp	r2, #0
    60bc:	dc00      	bgt.n	60c0 <__aeabi_fadd+0x30>
    60be:	e0a5      	b.n	620c <__aeabi_fadd+0x17c>
    60c0:	2800      	cmp	r0, #0
    60c2:	d13a      	bne.n	613a <__aeabi_fadd+0xaa>
    60c4:	2f00      	cmp	r7, #0
    60c6:	d100      	bne.n	60ca <__aeabi_fadd+0x3a>
    60c8:	e093      	b.n	61f2 <__aeabi_fadd+0x162>
    60ca:	1e51      	subs	r1, r2, #1
    60cc:	2900      	cmp	r1, #0
    60ce:	d000      	beq.n	60d2 <__aeabi_fadd+0x42>
    60d0:	e0bc      	b.n	624c <__aeabi_fadd+0x1bc>
    60d2:	2401      	movs	r4, #1
    60d4:	1bdb      	subs	r3, r3, r7
    60d6:	015a      	lsls	r2, r3, #5
    60d8:	d546      	bpl.n	6168 <__aeabi_fadd+0xd8>
    60da:	019b      	lsls	r3, r3, #6
    60dc:	099e      	lsrs	r6, r3, #6
    60de:	0030      	movs	r0, r6
    60e0:	f7ff ff80 	bl	5fe4 <__clzsi2>
    60e4:	3805      	subs	r0, #5
    60e6:	4086      	lsls	r6, r0
    60e8:	4284      	cmp	r4, r0
    60ea:	dd00      	ble.n	60ee <__aeabi_fadd+0x5e>
    60ec:	e09d      	b.n	622a <__aeabi_fadd+0x19a>
    60ee:	1b04      	subs	r4, r0, r4
    60f0:	0032      	movs	r2, r6
    60f2:	2020      	movs	r0, #32
    60f4:	3401      	adds	r4, #1
    60f6:	40e2      	lsrs	r2, r4
    60f8:	1b04      	subs	r4, r0, r4
    60fa:	40a6      	lsls	r6, r4
    60fc:	0033      	movs	r3, r6
    60fe:	1e5e      	subs	r6, r3, #1
    6100:	41b3      	sbcs	r3, r6
    6102:	2400      	movs	r4, #0
    6104:	4313      	orrs	r3, r2
    6106:	075a      	lsls	r2, r3, #29
    6108:	d004      	beq.n	6114 <__aeabi_fadd+0x84>
    610a:	220f      	movs	r2, #15
    610c:	401a      	ands	r2, r3
    610e:	2a04      	cmp	r2, #4
    6110:	d000      	beq.n	6114 <__aeabi_fadd+0x84>
    6112:	3304      	adds	r3, #4
    6114:	015a      	lsls	r2, r3, #5
    6116:	d529      	bpl.n	616c <__aeabi_fadd+0xdc>
    6118:	3401      	adds	r4, #1
    611a:	2cff      	cmp	r4, #255	; 0xff
    611c:	d100      	bne.n	6120 <__aeabi_fadd+0x90>
    611e:	e081      	b.n	6224 <__aeabi_fadd+0x194>
    6120:	002a      	movs	r2, r5
    6122:	019b      	lsls	r3, r3, #6
    6124:	0a5b      	lsrs	r3, r3, #9
    6126:	b2e4      	uxtb	r4, r4
    6128:	025b      	lsls	r3, r3, #9
    612a:	05e4      	lsls	r4, r4, #23
    612c:	0a58      	lsrs	r0, r3, #9
    612e:	07d2      	lsls	r2, r2, #31
    6130:	4320      	orrs	r0, r4
    6132:	4310      	orrs	r0, r2
    6134:	bc04      	pop	{r2}
    6136:	4690      	mov	r8, r2
    6138:	bdf0      	pop	{r4, r5, r6, r7, pc}
    613a:	2cff      	cmp	r4, #255	; 0xff
    613c:	d0e3      	beq.n	6106 <__aeabi_fadd+0x76>
    613e:	2180      	movs	r1, #128	; 0x80
    6140:	0038      	movs	r0, r7
    6142:	04c9      	lsls	r1, r1, #19
    6144:	4308      	orrs	r0, r1
    6146:	4684      	mov	ip, r0
    6148:	2a1b      	cmp	r2, #27
    614a:	dd00      	ble.n	614e <__aeabi_fadd+0xbe>
    614c:	e082      	b.n	6254 <__aeabi_fadd+0x1c4>
    614e:	2020      	movs	r0, #32
    6150:	4661      	mov	r1, ip
    6152:	40d1      	lsrs	r1, r2
    6154:	1a82      	subs	r2, r0, r2
    6156:	4660      	mov	r0, ip
    6158:	4090      	lsls	r0, r2
    615a:	0002      	movs	r2, r0
    615c:	1e50      	subs	r0, r2, #1
    615e:	4182      	sbcs	r2, r0
    6160:	430a      	orrs	r2, r1
    6162:	1a9b      	subs	r3, r3, r2
    6164:	015a      	lsls	r2, r3, #5
    6166:	d4b8      	bmi.n	60da <__aeabi_fadd+0x4a>
    6168:	075a      	lsls	r2, r3, #29
    616a:	d1ce      	bne.n	610a <__aeabi_fadd+0x7a>
    616c:	08de      	lsrs	r6, r3, #3
    616e:	002a      	movs	r2, r5
    6170:	2cff      	cmp	r4, #255	; 0xff
    6172:	d13a      	bne.n	61ea <__aeabi_fadd+0x15a>
    6174:	2e00      	cmp	r6, #0
    6176:	d100      	bne.n	617a <__aeabi_fadd+0xea>
    6178:	e0ae      	b.n	62d8 <__aeabi_fadd+0x248>
    617a:	2380      	movs	r3, #128	; 0x80
    617c:	03db      	lsls	r3, r3, #15
    617e:	4333      	orrs	r3, r6
    6180:	025b      	lsls	r3, r3, #9
    6182:	0a5b      	lsrs	r3, r3, #9
    6184:	24ff      	movs	r4, #255	; 0xff
    6186:	e7cf      	b.n	6128 <__aeabi_fadd+0x98>
    6188:	1a21      	subs	r1, r4, r0
    618a:	2900      	cmp	r1, #0
    618c:	dd52      	ble.n	6234 <__aeabi_fadd+0x1a4>
    618e:	2800      	cmp	r0, #0
    6190:	d031      	beq.n	61f6 <__aeabi_fadd+0x166>
    6192:	2cff      	cmp	r4, #255	; 0xff
    6194:	d0b7      	beq.n	6106 <__aeabi_fadd+0x76>
    6196:	2080      	movs	r0, #128	; 0x80
    6198:	003e      	movs	r6, r7
    619a:	04c0      	lsls	r0, r0, #19
    619c:	4306      	orrs	r6, r0
    619e:	46b4      	mov	ip, r6
    61a0:	291b      	cmp	r1, #27
    61a2:	dd00      	ble.n	61a6 <__aeabi_fadd+0x116>
    61a4:	e0aa      	b.n	62fc <__aeabi_fadd+0x26c>
    61a6:	2620      	movs	r6, #32
    61a8:	4660      	mov	r0, ip
    61aa:	40c8      	lsrs	r0, r1
    61ac:	1a71      	subs	r1, r6, r1
    61ae:	4666      	mov	r6, ip
    61b0:	408e      	lsls	r6, r1
    61b2:	0031      	movs	r1, r6
    61b4:	1e4e      	subs	r6, r1, #1
    61b6:	41b1      	sbcs	r1, r6
    61b8:	4301      	orrs	r1, r0
    61ba:	185b      	adds	r3, r3, r1
    61bc:	0159      	lsls	r1, r3, #5
    61be:	d5d3      	bpl.n	6168 <__aeabi_fadd+0xd8>
    61c0:	3401      	adds	r4, #1
    61c2:	2cff      	cmp	r4, #255	; 0xff
    61c4:	d100      	bne.n	61c8 <__aeabi_fadd+0x138>
    61c6:	e087      	b.n	62d8 <__aeabi_fadd+0x248>
    61c8:	2201      	movs	r2, #1
    61ca:	4978      	ldr	r1, [pc, #480]	; (63ac <__aeabi_fadd+0x31c>)
    61cc:	401a      	ands	r2, r3
    61ce:	085b      	lsrs	r3, r3, #1
    61d0:	400b      	ands	r3, r1
    61d2:	4313      	orrs	r3, r2
    61d4:	e797      	b.n	6106 <__aeabi_fadd+0x76>
    61d6:	2c00      	cmp	r4, #0
    61d8:	d000      	beq.n	61dc <__aeabi_fadd+0x14c>
    61da:	e0a7      	b.n	632c <__aeabi_fadd+0x29c>
    61dc:	2b00      	cmp	r3, #0
    61de:	d000      	beq.n	61e2 <__aeabi_fadd+0x152>
    61e0:	e0b6      	b.n	6350 <__aeabi_fadd+0x2c0>
    61e2:	1e3b      	subs	r3, r7, #0
    61e4:	d162      	bne.n	62ac <__aeabi_fadd+0x21c>
    61e6:	2600      	movs	r6, #0
    61e8:	2200      	movs	r2, #0
    61ea:	0273      	lsls	r3, r6, #9
    61ec:	0a5b      	lsrs	r3, r3, #9
    61ee:	b2e4      	uxtb	r4, r4
    61f0:	e79a      	b.n	6128 <__aeabi_fadd+0x98>
    61f2:	0014      	movs	r4, r2
    61f4:	e787      	b.n	6106 <__aeabi_fadd+0x76>
    61f6:	2f00      	cmp	r7, #0
    61f8:	d04d      	beq.n	6296 <__aeabi_fadd+0x206>
    61fa:	1e48      	subs	r0, r1, #1
    61fc:	2800      	cmp	r0, #0
    61fe:	d157      	bne.n	62b0 <__aeabi_fadd+0x220>
    6200:	4463      	add	r3, ip
    6202:	2401      	movs	r4, #1
    6204:	015a      	lsls	r2, r3, #5
    6206:	d5af      	bpl.n	6168 <__aeabi_fadd+0xd8>
    6208:	2402      	movs	r4, #2
    620a:	e7dd      	b.n	61c8 <__aeabi_fadd+0x138>
    620c:	2a00      	cmp	r2, #0
    620e:	d124      	bne.n	625a <__aeabi_fadd+0x1ca>
    6210:	1c62      	adds	r2, r4, #1
    6212:	b2d2      	uxtb	r2, r2
    6214:	2a01      	cmp	r2, #1
    6216:	ddde      	ble.n	61d6 <__aeabi_fadd+0x146>
    6218:	1bde      	subs	r6, r3, r7
    621a:	0172      	lsls	r2, r6, #5
    621c:	d535      	bpl.n	628a <__aeabi_fadd+0x1fa>
    621e:	1afe      	subs	r6, r7, r3
    6220:	000d      	movs	r5, r1
    6222:	e75c      	b.n	60de <__aeabi_fadd+0x4e>
    6224:	002a      	movs	r2, r5
    6226:	2300      	movs	r3, #0
    6228:	e77e      	b.n	6128 <__aeabi_fadd+0x98>
    622a:	0033      	movs	r3, r6
    622c:	4a60      	ldr	r2, [pc, #384]	; (63b0 <__aeabi_fadd+0x320>)
    622e:	1a24      	subs	r4, r4, r0
    6230:	4013      	ands	r3, r2
    6232:	e768      	b.n	6106 <__aeabi_fadd+0x76>
    6234:	2900      	cmp	r1, #0
    6236:	d163      	bne.n	6300 <__aeabi_fadd+0x270>
    6238:	1c61      	adds	r1, r4, #1
    623a:	b2c8      	uxtb	r0, r1
    623c:	2801      	cmp	r0, #1
    623e:	dd4e      	ble.n	62de <__aeabi_fadd+0x24e>
    6240:	29ff      	cmp	r1, #255	; 0xff
    6242:	d049      	beq.n	62d8 <__aeabi_fadd+0x248>
    6244:	4463      	add	r3, ip
    6246:	085b      	lsrs	r3, r3, #1
    6248:	000c      	movs	r4, r1
    624a:	e75c      	b.n	6106 <__aeabi_fadd+0x76>
    624c:	2aff      	cmp	r2, #255	; 0xff
    624e:	d041      	beq.n	62d4 <__aeabi_fadd+0x244>
    6250:	000a      	movs	r2, r1
    6252:	e779      	b.n	6148 <__aeabi_fadd+0xb8>
    6254:	2201      	movs	r2, #1
    6256:	1a9b      	subs	r3, r3, r2
    6258:	e784      	b.n	6164 <__aeabi_fadd+0xd4>
    625a:	2c00      	cmp	r4, #0
    625c:	d01d      	beq.n	629a <__aeabi_fadd+0x20a>
    625e:	28ff      	cmp	r0, #255	; 0xff
    6260:	d022      	beq.n	62a8 <__aeabi_fadd+0x218>
    6262:	2480      	movs	r4, #128	; 0x80
    6264:	04e4      	lsls	r4, r4, #19
    6266:	4252      	negs	r2, r2
    6268:	4323      	orrs	r3, r4
    626a:	2a1b      	cmp	r2, #27
    626c:	dd00      	ble.n	6270 <__aeabi_fadd+0x1e0>
    626e:	e08a      	b.n	6386 <__aeabi_fadd+0x2f6>
    6270:	001c      	movs	r4, r3
    6272:	2520      	movs	r5, #32
    6274:	40d4      	lsrs	r4, r2
    6276:	1aaa      	subs	r2, r5, r2
    6278:	4093      	lsls	r3, r2
    627a:	1e5a      	subs	r2, r3, #1
    627c:	4193      	sbcs	r3, r2
    627e:	4323      	orrs	r3, r4
    6280:	4662      	mov	r2, ip
    6282:	0004      	movs	r4, r0
    6284:	1ad3      	subs	r3, r2, r3
    6286:	000d      	movs	r5, r1
    6288:	e725      	b.n	60d6 <__aeabi_fadd+0x46>
    628a:	2e00      	cmp	r6, #0
    628c:	d000      	beq.n	6290 <__aeabi_fadd+0x200>
    628e:	e726      	b.n	60de <__aeabi_fadd+0x4e>
    6290:	2200      	movs	r2, #0
    6292:	2400      	movs	r4, #0
    6294:	e7a9      	b.n	61ea <__aeabi_fadd+0x15a>
    6296:	000c      	movs	r4, r1
    6298:	e735      	b.n	6106 <__aeabi_fadd+0x76>
    629a:	2b00      	cmp	r3, #0
    629c:	d04d      	beq.n	633a <__aeabi_fadd+0x2aa>
    629e:	43d2      	mvns	r2, r2
    62a0:	2a00      	cmp	r2, #0
    62a2:	d0ed      	beq.n	6280 <__aeabi_fadd+0x1f0>
    62a4:	28ff      	cmp	r0, #255	; 0xff
    62a6:	d1e0      	bne.n	626a <__aeabi_fadd+0x1da>
    62a8:	4663      	mov	r3, ip
    62aa:	24ff      	movs	r4, #255	; 0xff
    62ac:	000d      	movs	r5, r1
    62ae:	e72a      	b.n	6106 <__aeabi_fadd+0x76>
    62b0:	29ff      	cmp	r1, #255	; 0xff
    62b2:	d00f      	beq.n	62d4 <__aeabi_fadd+0x244>
    62b4:	0001      	movs	r1, r0
    62b6:	e773      	b.n	61a0 <__aeabi_fadd+0x110>
    62b8:	2b00      	cmp	r3, #0
    62ba:	d061      	beq.n	6380 <__aeabi_fadd+0x2f0>
    62bc:	24ff      	movs	r4, #255	; 0xff
    62be:	2f00      	cmp	r7, #0
    62c0:	d100      	bne.n	62c4 <__aeabi_fadd+0x234>
    62c2:	e720      	b.n	6106 <__aeabi_fadd+0x76>
    62c4:	2280      	movs	r2, #128	; 0x80
    62c6:	4641      	mov	r1, r8
    62c8:	03d2      	lsls	r2, r2, #15
    62ca:	4211      	tst	r1, r2
    62cc:	d002      	beq.n	62d4 <__aeabi_fadd+0x244>
    62ce:	4216      	tst	r6, r2
    62d0:	d100      	bne.n	62d4 <__aeabi_fadd+0x244>
    62d2:	003b      	movs	r3, r7
    62d4:	24ff      	movs	r4, #255	; 0xff
    62d6:	e716      	b.n	6106 <__aeabi_fadd+0x76>
    62d8:	24ff      	movs	r4, #255	; 0xff
    62da:	2300      	movs	r3, #0
    62dc:	e724      	b.n	6128 <__aeabi_fadd+0x98>
    62de:	2c00      	cmp	r4, #0
    62e0:	d1ea      	bne.n	62b8 <__aeabi_fadd+0x228>
    62e2:	2b00      	cmp	r3, #0
    62e4:	d058      	beq.n	6398 <__aeabi_fadd+0x308>
    62e6:	2f00      	cmp	r7, #0
    62e8:	d100      	bne.n	62ec <__aeabi_fadd+0x25c>
    62ea:	e70c      	b.n	6106 <__aeabi_fadd+0x76>
    62ec:	4463      	add	r3, ip
    62ee:	015a      	lsls	r2, r3, #5
    62f0:	d400      	bmi.n	62f4 <__aeabi_fadd+0x264>
    62f2:	e739      	b.n	6168 <__aeabi_fadd+0xd8>
    62f4:	4a2e      	ldr	r2, [pc, #184]	; (63b0 <__aeabi_fadd+0x320>)
    62f6:	000c      	movs	r4, r1
    62f8:	4013      	ands	r3, r2
    62fa:	e704      	b.n	6106 <__aeabi_fadd+0x76>
    62fc:	2101      	movs	r1, #1
    62fe:	e75c      	b.n	61ba <__aeabi_fadd+0x12a>
    6300:	2c00      	cmp	r4, #0
    6302:	d11e      	bne.n	6342 <__aeabi_fadd+0x2b2>
    6304:	2b00      	cmp	r3, #0
    6306:	d040      	beq.n	638a <__aeabi_fadd+0x2fa>
    6308:	43c9      	mvns	r1, r1
    630a:	2900      	cmp	r1, #0
    630c:	d00b      	beq.n	6326 <__aeabi_fadd+0x296>
    630e:	28ff      	cmp	r0, #255	; 0xff
    6310:	d036      	beq.n	6380 <__aeabi_fadd+0x2f0>
    6312:	291b      	cmp	r1, #27
    6314:	dc47      	bgt.n	63a6 <__aeabi_fadd+0x316>
    6316:	001c      	movs	r4, r3
    6318:	2620      	movs	r6, #32
    631a:	40cc      	lsrs	r4, r1
    631c:	1a71      	subs	r1, r6, r1
    631e:	408b      	lsls	r3, r1
    6320:	1e59      	subs	r1, r3, #1
    6322:	418b      	sbcs	r3, r1
    6324:	4323      	orrs	r3, r4
    6326:	4463      	add	r3, ip
    6328:	0004      	movs	r4, r0
    632a:	e747      	b.n	61bc <__aeabi_fadd+0x12c>
    632c:	2b00      	cmp	r3, #0
    632e:	d118      	bne.n	6362 <__aeabi_fadd+0x2d2>
    6330:	1e3b      	subs	r3, r7, #0
    6332:	d02d      	beq.n	6390 <__aeabi_fadd+0x300>
    6334:	000d      	movs	r5, r1
    6336:	24ff      	movs	r4, #255	; 0xff
    6338:	e6e5      	b.n	6106 <__aeabi_fadd+0x76>
    633a:	003b      	movs	r3, r7
    633c:	0004      	movs	r4, r0
    633e:	000d      	movs	r5, r1
    6340:	e6e1      	b.n	6106 <__aeabi_fadd+0x76>
    6342:	28ff      	cmp	r0, #255	; 0xff
    6344:	d01c      	beq.n	6380 <__aeabi_fadd+0x2f0>
    6346:	2480      	movs	r4, #128	; 0x80
    6348:	04e4      	lsls	r4, r4, #19
    634a:	4249      	negs	r1, r1
    634c:	4323      	orrs	r3, r4
    634e:	e7e0      	b.n	6312 <__aeabi_fadd+0x282>
    6350:	2f00      	cmp	r7, #0
    6352:	d100      	bne.n	6356 <__aeabi_fadd+0x2c6>
    6354:	e6d7      	b.n	6106 <__aeabi_fadd+0x76>
    6356:	1bde      	subs	r6, r3, r7
    6358:	0172      	lsls	r2, r6, #5
    635a:	d51f      	bpl.n	639c <__aeabi_fadd+0x30c>
    635c:	1afb      	subs	r3, r7, r3
    635e:	000d      	movs	r5, r1
    6360:	e6d1      	b.n	6106 <__aeabi_fadd+0x76>
    6362:	24ff      	movs	r4, #255	; 0xff
    6364:	2f00      	cmp	r7, #0
    6366:	d100      	bne.n	636a <__aeabi_fadd+0x2da>
    6368:	e6cd      	b.n	6106 <__aeabi_fadd+0x76>
    636a:	2280      	movs	r2, #128	; 0x80
    636c:	4640      	mov	r0, r8
    636e:	03d2      	lsls	r2, r2, #15
    6370:	4210      	tst	r0, r2
    6372:	d0af      	beq.n	62d4 <__aeabi_fadd+0x244>
    6374:	4216      	tst	r6, r2
    6376:	d1ad      	bne.n	62d4 <__aeabi_fadd+0x244>
    6378:	003b      	movs	r3, r7
    637a:	000d      	movs	r5, r1
    637c:	24ff      	movs	r4, #255	; 0xff
    637e:	e6c2      	b.n	6106 <__aeabi_fadd+0x76>
    6380:	4663      	mov	r3, ip
    6382:	24ff      	movs	r4, #255	; 0xff
    6384:	e6bf      	b.n	6106 <__aeabi_fadd+0x76>
    6386:	2301      	movs	r3, #1
    6388:	e77a      	b.n	6280 <__aeabi_fadd+0x1f0>
    638a:	003b      	movs	r3, r7
    638c:	0004      	movs	r4, r0
    638e:	e6ba      	b.n	6106 <__aeabi_fadd+0x76>
    6390:	2680      	movs	r6, #128	; 0x80
    6392:	2200      	movs	r2, #0
    6394:	03f6      	lsls	r6, r6, #15
    6396:	e6f0      	b.n	617a <__aeabi_fadd+0xea>
    6398:	003b      	movs	r3, r7
    639a:	e6b4      	b.n	6106 <__aeabi_fadd+0x76>
    639c:	1e33      	subs	r3, r6, #0
    639e:	d000      	beq.n	63a2 <__aeabi_fadd+0x312>
    63a0:	e6e2      	b.n	6168 <__aeabi_fadd+0xd8>
    63a2:	2200      	movs	r2, #0
    63a4:	e721      	b.n	61ea <__aeabi_fadd+0x15a>
    63a6:	2301      	movs	r3, #1
    63a8:	e7bd      	b.n	6326 <__aeabi_fadd+0x296>
    63aa:	46c0      	nop			; (mov r8, r8)
    63ac:	7dffffff 	.word	0x7dffffff
    63b0:	fbffffff 	.word	0xfbffffff

000063b4 <__aeabi_fdiv>:
    63b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    63b6:	4657      	mov	r7, sl
    63b8:	464e      	mov	r6, r9
    63ba:	46de      	mov	lr, fp
    63bc:	4645      	mov	r5, r8
    63be:	b5e0      	push	{r5, r6, r7, lr}
    63c0:	0244      	lsls	r4, r0, #9
    63c2:	0043      	lsls	r3, r0, #1
    63c4:	0fc6      	lsrs	r6, r0, #31
    63c6:	b083      	sub	sp, #12
    63c8:	1c0f      	adds	r7, r1, #0
    63ca:	0a64      	lsrs	r4, r4, #9
    63cc:	0e1b      	lsrs	r3, r3, #24
    63ce:	46b2      	mov	sl, r6
    63d0:	d053      	beq.n	647a <__aeabi_fdiv+0xc6>
    63d2:	2bff      	cmp	r3, #255	; 0xff
    63d4:	d027      	beq.n	6426 <__aeabi_fdiv+0x72>
    63d6:	2280      	movs	r2, #128	; 0x80
    63d8:	00e4      	lsls	r4, r4, #3
    63da:	04d2      	lsls	r2, r2, #19
    63dc:	4314      	orrs	r4, r2
    63de:	227f      	movs	r2, #127	; 0x7f
    63e0:	4252      	negs	r2, r2
    63e2:	4690      	mov	r8, r2
    63e4:	4498      	add	r8, r3
    63e6:	2300      	movs	r3, #0
    63e8:	4699      	mov	r9, r3
    63ea:	469b      	mov	fp, r3
    63ec:	027d      	lsls	r5, r7, #9
    63ee:	0078      	lsls	r0, r7, #1
    63f0:	0ffb      	lsrs	r3, r7, #31
    63f2:	0a6d      	lsrs	r5, r5, #9
    63f4:	0e00      	lsrs	r0, r0, #24
    63f6:	9300      	str	r3, [sp, #0]
    63f8:	d024      	beq.n	6444 <__aeabi_fdiv+0x90>
    63fa:	28ff      	cmp	r0, #255	; 0xff
    63fc:	d046      	beq.n	648c <__aeabi_fdiv+0xd8>
    63fe:	2380      	movs	r3, #128	; 0x80
    6400:	2100      	movs	r1, #0
    6402:	00ed      	lsls	r5, r5, #3
    6404:	04db      	lsls	r3, r3, #19
    6406:	431d      	orrs	r5, r3
    6408:	387f      	subs	r0, #127	; 0x7f
    640a:	4647      	mov	r7, r8
    640c:	1a38      	subs	r0, r7, r0
    640e:	464f      	mov	r7, r9
    6410:	430f      	orrs	r7, r1
    6412:	00bf      	lsls	r7, r7, #2
    6414:	46b9      	mov	r9, r7
    6416:	0033      	movs	r3, r6
    6418:	9a00      	ldr	r2, [sp, #0]
    641a:	4f87      	ldr	r7, [pc, #540]	; (6638 <__aeabi_fdiv+0x284>)
    641c:	4053      	eors	r3, r2
    641e:	464a      	mov	r2, r9
    6420:	58ba      	ldr	r2, [r7, r2]
    6422:	9301      	str	r3, [sp, #4]
    6424:	4697      	mov	pc, r2
    6426:	2c00      	cmp	r4, #0
    6428:	d14e      	bne.n	64c8 <__aeabi_fdiv+0x114>
    642a:	2308      	movs	r3, #8
    642c:	4699      	mov	r9, r3
    642e:	33f7      	adds	r3, #247	; 0xf7
    6430:	4698      	mov	r8, r3
    6432:	3bfd      	subs	r3, #253	; 0xfd
    6434:	469b      	mov	fp, r3
    6436:	027d      	lsls	r5, r7, #9
    6438:	0078      	lsls	r0, r7, #1
    643a:	0ffb      	lsrs	r3, r7, #31
    643c:	0a6d      	lsrs	r5, r5, #9
    643e:	0e00      	lsrs	r0, r0, #24
    6440:	9300      	str	r3, [sp, #0]
    6442:	d1da      	bne.n	63fa <__aeabi_fdiv+0x46>
    6444:	2d00      	cmp	r5, #0
    6446:	d126      	bne.n	6496 <__aeabi_fdiv+0xe2>
    6448:	2000      	movs	r0, #0
    644a:	2101      	movs	r1, #1
    644c:	0033      	movs	r3, r6
    644e:	9a00      	ldr	r2, [sp, #0]
    6450:	4f7a      	ldr	r7, [pc, #488]	; (663c <__aeabi_fdiv+0x288>)
    6452:	4053      	eors	r3, r2
    6454:	4642      	mov	r2, r8
    6456:	1a10      	subs	r0, r2, r0
    6458:	464a      	mov	r2, r9
    645a:	430a      	orrs	r2, r1
    645c:	0092      	lsls	r2, r2, #2
    645e:	58ba      	ldr	r2, [r7, r2]
    6460:	001d      	movs	r5, r3
    6462:	4697      	mov	pc, r2
    6464:	9b00      	ldr	r3, [sp, #0]
    6466:	002c      	movs	r4, r5
    6468:	469a      	mov	sl, r3
    646a:	468b      	mov	fp, r1
    646c:	465b      	mov	r3, fp
    646e:	2b02      	cmp	r3, #2
    6470:	d131      	bne.n	64d6 <__aeabi_fdiv+0x122>
    6472:	4653      	mov	r3, sl
    6474:	21ff      	movs	r1, #255	; 0xff
    6476:	2400      	movs	r4, #0
    6478:	e038      	b.n	64ec <__aeabi_fdiv+0x138>
    647a:	2c00      	cmp	r4, #0
    647c:	d117      	bne.n	64ae <__aeabi_fdiv+0xfa>
    647e:	2304      	movs	r3, #4
    6480:	4699      	mov	r9, r3
    6482:	2300      	movs	r3, #0
    6484:	4698      	mov	r8, r3
    6486:	3301      	adds	r3, #1
    6488:	469b      	mov	fp, r3
    648a:	e7af      	b.n	63ec <__aeabi_fdiv+0x38>
    648c:	20ff      	movs	r0, #255	; 0xff
    648e:	2d00      	cmp	r5, #0
    6490:	d10b      	bne.n	64aa <__aeabi_fdiv+0xf6>
    6492:	2102      	movs	r1, #2
    6494:	e7da      	b.n	644c <__aeabi_fdiv+0x98>
    6496:	0028      	movs	r0, r5
    6498:	f7ff fda4 	bl	5fe4 <__clzsi2>
    649c:	1f43      	subs	r3, r0, #5
    649e:	409d      	lsls	r5, r3
    64a0:	2376      	movs	r3, #118	; 0x76
    64a2:	425b      	negs	r3, r3
    64a4:	1a18      	subs	r0, r3, r0
    64a6:	2100      	movs	r1, #0
    64a8:	e7af      	b.n	640a <__aeabi_fdiv+0x56>
    64aa:	2103      	movs	r1, #3
    64ac:	e7ad      	b.n	640a <__aeabi_fdiv+0x56>
    64ae:	0020      	movs	r0, r4
    64b0:	f7ff fd98 	bl	5fe4 <__clzsi2>
    64b4:	1f43      	subs	r3, r0, #5
    64b6:	409c      	lsls	r4, r3
    64b8:	2376      	movs	r3, #118	; 0x76
    64ba:	425b      	negs	r3, r3
    64bc:	1a1b      	subs	r3, r3, r0
    64be:	4698      	mov	r8, r3
    64c0:	2300      	movs	r3, #0
    64c2:	4699      	mov	r9, r3
    64c4:	469b      	mov	fp, r3
    64c6:	e791      	b.n	63ec <__aeabi_fdiv+0x38>
    64c8:	230c      	movs	r3, #12
    64ca:	4699      	mov	r9, r3
    64cc:	33f3      	adds	r3, #243	; 0xf3
    64ce:	4698      	mov	r8, r3
    64d0:	3bfc      	subs	r3, #252	; 0xfc
    64d2:	469b      	mov	fp, r3
    64d4:	e78a      	b.n	63ec <__aeabi_fdiv+0x38>
    64d6:	2b03      	cmp	r3, #3
    64d8:	d100      	bne.n	64dc <__aeabi_fdiv+0x128>
    64da:	e0a5      	b.n	6628 <__aeabi_fdiv+0x274>
    64dc:	4655      	mov	r5, sl
    64de:	2b01      	cmp	r3, #1
    64e0:	d000      	beq.n	64e4 <__aeabi_fdiv+0x130>
    64e2:	e081      	b.n	65e8 <__aeabi_fdiv+0x234>
    64e4:	2301      	movs	r3, #1
    64e6:	2100      	movs	r1, #0
    64e8:	2400      	movs	r4, #0
    64ea:	402b      	ands	r3, r5
    64ec:	0264      	lsls	r4, r4, #9
    64ee:	05c9      	lsls	r1, r1, #23
    64f0:	0a60      	lsrs	r0, r4, #9
    64f2:	07db      	lsls	r3, r3, #31
    64f4:	4308      	orrs	r0, r1
    64f6:	4318      	orrs	r0, r3
    64f8:	b003      	add	sp, #12
    64fa:	bc3c      	pop	{r2, r3, r4, r5}
    64fc:	4690      	mov	r8, r2
    64fe:	4699      	mov	r9, r3
    6500:	46a2      	mov	sl, r4
    6502:	46ab      	mov	fp, r5
    6504:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6506:	2480      	movs	r4, #128	; 0x80
    6508:	2300      	movs	r3, #0
    650a:	03e4      	lsls	r4, r4, #15
    650c:	21ff      	movs	r1, #255	; 0xff
    650e:	e7ed      	b.n	64ec <__aeabi_fdiv+0x138>
    6510:	21ff      	movs	r1, #255	; 0xff
    6512:	2400      	movs	r4, #0
    6514:	e7ea      	b.n	64ec <__aeabi_fdiv+0x138>
    6516:	2301      	movs	r3, #1
    6518:	1a59      	subs	r1, r3, r1
    651a:	291b      	cmp	r1, #27
    651c:	dd66      	ble.n	65ec <__aeabi_fdiv+0x238>
    651e:	9a01      	ldr	r2, [sp, #4]
    6520:	4013      	ands	r3, r2
    6522:	2100      	movs	r1, #0
    6524:	2400      	movs	r4, #0
    6526:	e7e1      	b.n	64ec <__aeabi_fdiv+0x138>
    6528:	2380      	movs	r3, #128	; 0x80
    652a:	03db      	lsls	r3, r3, #15
    652c:	421c      	tst	r4, r3
    652e:	d038      	beq.n	65a2 <__aeabi_fdiv+0x1ee>
    6530:	421d      	tst	r5, r3
    6532:	d051      	beq.n	65d8 <__aeabi_fdiv+0x224>
    6534:	431c      	orrs	r4, r3
    6536:	0264      	lsls	r4, r4, #9
    6538:	0a64      	lsrs	r4, r4, #9
    653a:	0033      	movs	r3, r6
    653c:	21ff      	movs	r1, #255	; 0xff
    653e:	e7d5      	b.n	64ec <__aeabi_fdiv+0x138>
    6540:	0163      	lsls	r3, r4, #5
    6542:	016c      	lsls	r4, r5, #5
    6544:	42a3      	cmp	r3, r4
    6546:	d23b      	bcs.n	65c0 <__aeabi_fdiv+0x20c>
    6548:	261b      	movs	r6, #27
    654a:	2100      	movs	r1, #0
    654c:	3801      	subs	r0, #1
    654e:	2501      	movs	r5, #1
    6550:	001f      	movs	r7, r3
    6552:	0049      	lsls	r1, r1, #1
    6554:	005b      	lsls	r3, r3, #1
    6556:	2f00      	cmp	r7, #0
    6558:	db01      	blt.n	655e <__aeabi_fdiv+0x1aa>
    655a:	429c      	cmp	r4, r3
    655c:	d801      	bhi.n	6562 <__aeabi_fdiv+0x1ae>
    655e:	1b1b      	subs	r3, r3, r4
    6560:	4329      	orrs	r1, r5
    6562:	3e01      	subs	r6, #1
    6564:	2e00      	cmp	r6, #0
    6566:	d1f3      	bne.n	6550 <__aeabi_fdiv+0x19c>
    6568:	001c      	movs	r4, r3
    656a:	1e63      	subs	r3, r4, #1
    656c:	419c      	sbcs	r4, r3
    656e:	430c      	orrs	r4, r1
    6570:	0001      	movs	r1, r0
    6572:	317f      	adds	r1, #127	; 0x7f
    6574:	2900      	cmp	r1, #0
    6576:	ddce      	ble.n	6516 <__aeabi_fdiv+0x162>
    6578:	0763      	lsls	r3, r4, #29
    657a:	d004      	beq.n	6586 <__aeabi_fdiv+0x1d2>
    657c:	230f      	movs	r3, #15
    657e:	4023      	ands	r3, r4
    6580:	2b04      	cmp	r3, #4
    6582:	d000      	beq.n	6586 <__aeabi_fdiv+0x1d2>
    6584:	3404      	adds	r4, #4
    6586:	0123      	lsls	r3, r4, #4
    6588:	d503      	bpl.n	6592 <__aeabi_fdiv+0x1de>
    658a:	0001      	movs	r1, r0
    658c:	4b2c      	ldr	r3, [pc, #176]	; (6640 <__aeabi_fdiv+0x28c>)
    658e:	3180      	adds	r1, #128	; 0x80
    6590:	401c      	ands	r4, r3
    6592:	29fe      	cmp	r1, #254	; 0xfe
    6594:	dd0d      	ble.n	65b2 <__aeabi_fdiv+0x1fe>
    6596:	2301      	movs	r3, #1
    6598:	9a01      	ldr	r2, [sp, #4]
    659a:	21ff      	movs	r1, #255	; 0xff
    659c:	4013      	ands	r3, r2
    659e:	2400      	movs	r4, #0
    65a0:	e7a4      	b.n	64ec <__aeabi_fdiv+0x138>
    65a2:	2380      	movs	r3, #128	; 0x80
    65a4:	03db      	lsls	r3, r3, #15
    65a6:	431c      	orrs	r4, r3
    65a8:	0264      	lsls	r4, r4, #9
    65aa:	0a64      	lsrs	r4, r4, #9
    65ac:	0033      	movs	r3, r6
    65ae:	21ff      	movs	r1, #255	; 0xff
    65b0:	e79c      	b.n	64ec <__aeabi_fdiv+0x138>
    65b2:	2301      	movs	r3, #1
    65b4:	9a01      	ldr	r2, [sp, #4]
    65b6:	01a4      	lsls	r4, r4, #6
    65b8:	0a64      	lsrs	r4, r4, #9
    65ba:	b2c9      	uxtb	r1, r1
    65bc:	4013      	ands	r3, r2
    65be:	e795      	b.n	64ec <__aeabi_fdiv+0x138>
    65c0:	1b1b      	subs	r3, r3, r4
    65c2:	261a      	movs	r6, #26
    65c4:	2101      	movs	r1, #1
    65c6:	e7c2      	b.n	654e <__aeabi_fdiv+0x19a>
    65c8:	9b00      	ldr	r3, [sp, #0]
    65ca:	468b      	mov	fp, r1
    65cc:	469a      	mov	sl, r3
    65ce:	2400      	movs	r4, #0
    65d0:	e74c      	b.n	646c <__aeabi_fdiv+0xb8>
    65d2:	0263      	lsls	r3, r4, #9
    65d4:	d5e5      	bpl.n	65a2 <__aeabi_fdiv+0x1ee>
    65d6:	2500      	movs	r5, #0
    65d8:	2480      	movs	r4, #128	; 0x80
    65da:	03e4      	lsls	r4, r4, #15
    65dc:	432c      	orrs	r4, r5
    65de:	0264      	lsls	r4, r4, #9
    65e0:	0a64      	lsrs	r4, r4, #9
    65e2:	9b00      	ldr	r3, [sp, #0]
    65e4:	21ff      	movs	r1, #255	; 0xff
    65e6:	e781      	b.n	64ec <__aeabi_fdiv+0x138>
    65e8:	9501      	str	r5, [sp, #4]
    65ea:	e7c1      	b.n	6570 <__aeabi_fdiv+0x1bc>
    65ec:	0023      	movs	r3, r4
    65ee:	2020      	movs	r0, #32
    65f0:	40cb      	lsrs	r3, r1
    65f2:	1a41      	subs	r1, r0, r1
    65f4:	408c      	lsls	r4, r1
    65f6:	1e61      	subs	r1, r4, #1
    65f8:	418c      	sbcs	r4, r1
    65fa:	431c      	orrs	r4, r3
    65fc:	0763      	lsls	r3, r4, #29
    65fe:	d004      	beq.n	660a <__aeabi_fdiv+0x256>
    6600:	230f      	movs	r3, #15
    6602:	4023      	ands	r3, r4
    6604:	2b04      	cmp	r3, #4
    6606:	d000      	beq.n	660a <__aeabi_fdiv+0x256>
    6608:	3404      	adds	r4, #4
    660a:	0163      	lsls	r3, r4, #5
    660c:	d505      	bpl.n	661a <__aeabi_fdiv+0x266>
    660e:	2301      	movs	r3, #1
    6610:	9a01      	ldr	r2, [sp, #4]
    6612:	2101      	movs	r1, #1
    6614:	4013      	ands	r3, r2
    6616:	2400      	movs	r4, #0
    6618:	e768      	b.n	64ec <__aeabi_fdiv+0x138>
    661a:	2301      	movs	r3, #1
    661c:	9a01      	ldr	r2, [sp, #4]
    661e:	01a4      	lsls	r4, r4, #6
    6620:	0a64      	lsrs	r4, r4, #9
    6622:	4013      	ands	r3, r2
    6624:	2100      	movs	r1, #0
    6626:	e761      	b.n	64ec <__aeabi_fdiv+0x138>
    6628:	2380      	movs	r3, #128	; 0x80
    662a:	03db      	lsls	r3, r3, #15
    662c:	431c      	orrs	r4, r3
    662e:	0264      	lsls	r4, r4, #9
    6630:	0a64      	lsrs	r4, r4, #9
    6632:	4653      	mov	r3, sl
    6634:	21ff      	movs	r1, #255	; 0xff
    6636:	e759      	b.n	64ec <__aeabi_fdiv+0x138>
    6638:	0000808c 	.word	0x0000808c
    663c:	000080cc 	.word	0x000080cc
    6640:	f7ffffff 	.word	0xf7ffffff

00006644 <__aeabi_fmul>:
    6644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6646:	4657      	mov	r7, sl
    6648:	464e      	mov	r6, r9
    664a:	4645      	mov	r5, r8
    664c:	46de      	mov	lr, fp
    664e:	b5e0      	push	{r5, r6, r7, lr}
    6650:	0247      	lsls	r7, r0, #9
    6652:	0046      	lsls	r6, r0, #1
    6654:	4688      	mov	r8, r1
    6656:	0a7f      	lsrs	r7, r7, #9
    6658:	0e36      	lsrs	r6, r6, #24
    665a:	0fc4      	lsrs	r4, r0, #31
    665c:	2e00      	cmp	r6, #0
    665e:	d047      	beq.n	66f0 <__aeabi_fmul+0xac>
    6660:	2eff      	cmp	r6, #255	; 0xff
    6662:	d024      	beq.n	66ae <__aeabi_fmul+0x6a>
    6664:	00fb      	lsls	r3, r7, #3
    6666:	2780      	movs	r7, #128	; 0x80
    6668:	04ff      	lsls	r7, r7, #19
    666a:	431f      	orrs	r7, r3
    666c:	2300      	movs	r3, #0
    666e:	4699      	mov	r9, r3
    6670:	469a      	mov	sl, r3
    6672:	3e7f      	subs	r6, #127	; 0x7f
    6674:	4643      	mov	r3, r8
    6676:	025d      	lsls	r5, r3, #9
    6678:	0058      	lsls	r0, r3, #1
    667a:	0fdb      	lsrs	r3, r3, #31
    667c:	0a6d      	lsrs	r5, r5, #9
    667e:	0e00      	lsrs	r0, r0, #24
    6680:	4698      	mov	r8, r3
    6682:	d043      	beq.n	670c <__aeabi_fmul+0xc8>
    6684:	28ff      	cmp	r0, #255	; 0xff
    6686:	d03b      	beq.n	6700 <__aeabi_fmul+0xbc>
    6688:	00eb      	lsls	r3, r5, #3
    668a:	2580      	movs	r5, #128	; 0x80
    668c:	2200      	movs	r2, #0
    668e:	04ed      	lsls	r5, r5, #19
    6690:	431d      	orrs	r5, r3
    6692:	387f      	subs	r0, #127	; 0x7f
    6694:	1836      	adds	r6, r6, r0
    6696:	1c73      	adds	r3, r6, #1
    6698:	4641      	mov	r1, r8
    669a:	469b      	mov	fp, r3
    669c:	464b      	mov	r3, r9
    669e:	4061      	eors	r1, r4
    66a0:	4313      	orrs	r3, r2
    66a2:	2b0f      	cmp	r3, #15
    66a4:	d864      	bhi.n	6770 <__aeabi_fmul+0x12c>
    66a6:	4875      	ldr	r0, [pc, #468]	; (687c <__aeabi_fmul+0x238>)
    66a8:	009b      	lsls	r3, r3, #2
    66aa:	58c3      	ldr	r3, [r0, r3]
    66ac:	469f      	mov	pc, r3
    66ae:	2f00      	cmp	r7, #0
    66b0:	d142      	bne.n	6738 <__aeabi_fmul+0xf4>
    66b2:	2308      	movs	r3, #8
    66b4:	4699      	mov	r9, r3
    66b6:	3b06      	subs	r3, #6
    66b8:	26ff      	movs	r6, #255	; 0xff
    66ba:	469a      	mov	sl, r3
    66bc:	e7da      	b.n	6674 <__aeabi_fmul+0x30>
    66be:	4641      	mov	r1, r8
    66c0:	2a02      	cmp	r2, #2
    66c2:	d028      	beq.n	6716 <__aeabi_fmul+0xd2>
    66c4:	2a03      	cmp	r2, #3
    66c6:	d100      	bne.n	66ca <__aeabi_fmul+0x86>
    66c8:	e0ce      	b.n	6868 <__aeabi_fmul+0x224>
    66ca:	2a01      	cmp	r2, #1
    66cc:	d000      	beq.n	66d0 <__aeabi_fmul+0x8c>
    66ce:	e0ac      	b.n	682a <__aeabi_fmul+0x1e6>
    66d0:	4011      	ands	r1, r2
    66d2:	2000      	movs	r0, #0
    66d4:	2200      	movs	r2, #0
    66d6:	b2cc      	uxtb	r4, r1
    66d8:	0240      	lsls	r0, r0, #9
    66da:	05d2      	lsls	r2, r2, #23
    66dc:	0a40      	lsrs	r0, r0, #9
    66de:	07e4      	lsls	r4, r4, #31
    66e0:	4310      	orrs	r0, r2
    66e2:	4320      	orrs	r0, r4
    66e4:	bc3c      	pop	{r2, r3, r4, r5}
    66e6:	4690      	mov	r8, r2
    66e8:	4699      	mov	r9, r3
    66ea:	46a2      	mov	sl, r4
    66ec:	46ab      	mov	fp, r5
    66ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    66f0:	2f00      	cmp	r7, #0
    66f2:	d115      	bne.n	6720 <__aeabi_fmul+0xdc>
    66f4:	2304      	movs	r3, #4
    66f6:	4699      	mov	r9, r3
    66f8:	3b03      	subs	r3, #3
    66fa:	2600      	movs	r6, #0
    66fc:	469a      	mov	sl, r3
    66fe:	e7b9      	b.n	6674 <__aeabi_fmul+0x30>
    6700:	20ff      	movs	r0, #255	; 0xff
    6702:	2202      	movs	r2, #2
    6704:	2d00      	cmp	r5, #0
    6706:	d0c5      	beq.n	6694 <__aeabi_fmul+0x50>
    6708:	2203      	movs	r2, #3
    670a:	e7c3      	b.n	6694 <__aeabi_fmul+0x50>
    670c:	2d00      	cmp	r5, #0
    670e:	d119      	bne.n	6744 <__aeabi_fmul+0x100>
    6710:	2000      	movs	r0, #0
    6712:	2201      	movs	r2, #1
    6714:	e7be      	b.n	6694 <__aeabi_fmul+0x50>
    6716:	2401      	movs	r4, #1
    6718:	22ff      	movs	r2, #255	; 0xff
    671a:	400c      	ands	r4, r1
    671c:	2000      	movs	r0, #0
    671e:	e7db      	b.n	66d8 <__aeabi_fmul+0x94>
    6720:	0038      	movs	r0, r7
    6722:	f7ff fc5f 	bl	5fe4 <__clzsi2>
    6726:	2676      	movs	r6, #118	; 0x76
    6728:	1f43      	subs	r3, r0, #5
    672a:	409f      	lsls	r7, r3
    672c:	2300      	movs	r3, #0
    672e:	4276      	negs	r6, r6
    6730:	1a36      	subs	r6, r6, r0
    6732:	4699      	mov	r9, r3
    6734:	469a      	mov	sl, r3
    6736:	e79d      	b.n	6674 <__aeabi_fmul+0x30>
    6738:	230c      	movs	r3, #12
    673a:	4699      	mov	r9, r3
    673c:	3b09      	subs	r3, #9
    673e:	26ff      	movs	r6, #255	; 0xff
    6740:	469a      	mov	sl, r3
    6742:	e797      	b.n	6674 <__aeabi_fmul+0x30>
    6744:	0028      	movs	r0, r5
    6746:	f7ff fc4d 	bl	5fe4 <__clzsi2>
    674a:	1f43      	subs	r3, r0, #5
    674c:	409d      	lsls	r5, r3
    674e:	2376      	movs	r3, #118	; 0x76
    6750:	425b      	negs	r3, r3
    6752:	1a18      	subs	r0, r3, r0
    6754:	2200      	movs	r2, #0
    6756:	e79d      	b.n	6694 <__aeabi_fmul+0x50>
    6758:	2080      	movs	r0, #128	; 0x80
    675a:	2400      	movs	r4, #0
    675c:	03c0      	lsls	r0, r0, #15
    675e:	22ff      	movs	r2, #255	; 0xff
    6760:	e7ba      	b.n	66d8 <__aeabi_fmul+0x94>
    6762:	003d      	movs	r5, r7
    6764:	4652      	mov	r2, sl
    6766:	e7ab      	b.n	66c0 <__aeabi_fmul+0x7c>
    6768:	003d      	movs	r5, r7
    676a:	0021      	movs	r1, r4
    676c:	4652      	mov	r2, sl
    676e:	e7a7      	b.n	66c0 <__aeabi_fmul+0x7c>
    6770:	0c3b      	lsrs	r3, r7, #16
    6772:	469c      	mov	ip, r3
    6774:	042a      	lsls	r2, r5, #16
    6776:	0c12      	lsrs	r2, r2, #16
    6778:	0c2b      	lsrs	r3, r5, #16
    677a:	0014      	movs	r4, r2
    677c:	4660      	mov	r0, ip
    677e:	4665      	mov	r5, ip
    6780:	043f      	lsls	r7, r7, #16
    6782:	0c3f      	lsrs	r7, r7, #16
    6784:	437c      	muls	r4, r7
    6786:	4342      	muls	r2, r0
    6788:	435d      	muls	r5, r3
    678a:	437b      	muls	r3, r7
    678c:	0c27      	lsrs	r7, r4, #16
    678e:	189b      	adds	r3, r3, r2
    6790:	18ff      	adds	r7, r7, r3
    6792:	42ba      	cmp	r2, r7
    6794:	d903      	bls.n	679e <__aeabi_fmul+0x15a>
    6796:	2380      	movs	r3, #128	; 0x80
    6798:	025b      	lsls	r3, r3, #9
    679a:	469c      	mov	ip, r3
    679c:	4465      	add	r5, ip
    679e:	0424      	lsls	r4, r4, #16
    67a0:	043a      	lsls	r2, r7, #16
    67a2:	0c24      	lsrs	r4, r4, #16
    67a4:	1912      	adds	r2, r2, r4
    67a6:	0193      	lsls	r3, r2, #6
    67a8:	1e5c      	subs	r4, r3, #1
    67aa:	41a3      	sbcs	r3, r4
    67ac:	0c3f      	lsrs	r7, r7, #16
    67ae:	0e92      	lsrs	r2, r2, #26
    67b0:	197d      	adds	r5, r7, r5
    67b2:	431a      	orrs	r2, r3
    67b4:	01ad      	lsls	r5, r5, #6
    67b6:	4315      	orrs	r5, r2
    67b8:	012b      	lsls	r3, r5, #4
    67ba:	d504      	bpl.n	67c6 <__aeabi_fmul+0x182>
    67bc:	2301      	movs	r3, #1
    67be:	465e      	mov	r6, fp
    67c0:	086a      	lsrs	r2, r5, #1
    67c2:	401d      	ands	r5, r3
    67c4:	4315      	orrs	r5, r2
    67c6:	0032      	movs	r2, r6
    67c8:	327f      	adds	r2, #127	; 0x7f
    67ca:	2a00      	cmp	r2, #0
    67cc:	dd25      	ble.n	681a <__aeabi_fmul+0x1d6>
    67ce:	076b      	lsls	r3, r5, #29
    67d0:	d004      	beq.n	67dc <__aeabi_fmul+0x198>
    67d2:	230f      	movs	r3, #15
    67d4:	402b      	ands	r3, r5
    67d6:	2b04      	cmp	r3, #4
    67d8:	d000      	beq.n	67dc <__aeabi_fmul+0x198>
    67da:	3504      	adds	r5, #4
    67dc:	012b      	lsls	r3, r5, #4
    67de:	d503      	bpl.n	67e8 <__aeabi_fmul+0x1a4>
    67e0:	0032      	movs	r2, r6
    67e2:	4b27      	ldr	r3, [pc, #156]	; (6880 <__aeabi_fmul+0x23c>)
    67e4:	3280      	adds	r2, #128	; 0x80
    67e6:	401d      	ands	r5, r3
    67e8:	2afe      	cmp	r2, #254	; 0xfe
    67ea:	dc94      	bgt.n	6716 <__aeabi_fmul+0xd2>
    67ec:	2401      	movs	r4, #1
    67ee:	01a8      	lsls	r0, r5, #6
    67f0:	0a40      	lsrs	r0, r0, #9
    67f2:	b2d2      	uxtb	r2, r2
    67f4:	400c      	ands	r4, r1
    67f6:	e76f      	b.n	66d8 <__aeabi_fmul+0x94>
    67f8:	2080      	movs	r0, #128	; 0x80
    67fa:	03c0      	lsls	r0, r0, #15
    67fc:	4207      	tst	r7, r0
    67fe:	d007      	beq.n	6810 <__aeabi_fmul+0x1cc>
    6800:	4205      	tst	r5, r0
    6802:	d105      	bne.n	6810 <__aeabi_fmul+0x1cc>
    6804:	4328      	orrs	r0, r5
    6806:	0240      	lsls	r0, r0, #9
    6808:	0a40      	lsrs	r0, r0, #9
    680a:	4644      	mov	r4, r8
    680c:	22ff      	movs	r2, #255	; 0xff
    680e:	e763      	b.n	66d8 <__aeabi_fmul+0x94>
    6810:	4338      	orrs	r0, r7
    6812:	0240      	lsls	r0, r0, #9
    6814:	0a40      	lsrs	r0, r0, #9
    6816:	22ff      	movs	r2, #255	; 0xff
    6818:	e75e      	b.n	66d8 <__aeabi_fmul+0x94>
    681a:	2401      	movs	r4, #1
    681c:	1aa3      	subs	r3, r4, r2
    681e:	2b1b      	cmp	r3, #27
    6820:	dd05      	ble.n	682e <__aeabi_fmul+0x1ea>
    6822:	400c      	ands	r4, r1
    6824:	2200      	movs	r2, #0
    6826:	2000      	movs	r0, #0
    6828:	e756      	b.n	66d8 <__aeabi_fmul+0x94>
    682a:	465e      	mov	r6, fp
    682c:	e7cb      	b.n	67c6 <__aeabi_fmul+0x182>
    682e:	002a      	movs	r2, r5
    6830:	2020      	movs	r0, #32
    6832:	40da      	lsrs	r2, r3
    6834:	1ac3      	subs	r3, r0, r3
    6836:	409d      	lsls	r5, r3
    6838:	002b      	movs	r3, r5
    683a:	1e5d      	subs	r5, r3, #1
    683c:	41ab      	sbcs	r3, r5
    683e:	4313      	orrs	r3, r2
    6840:	075a      	lsls	r2, r3, #29
    6842:	d004      	beq.n	684e <__aeabi_fmul+0x20a>
    6844:	220f      	movs	r2, #15
    6846:	401a      	ands	r2, r3
    6848:	2a04      	cmp	r2, #4
    684a:	d000      	beq.n	684e <__aeabi_fmul+0x20a>
    684c:	3304      	adds	r3, #4
    684e:	015a      	lsls	r2, r3, #5
    6850:	d504      	bpl.n	685c <__aeabi_fmul+0x218>
    6852:	2401      	movs	r4, #1
    6854:	2201      	movs	r2, #1
    6856:	400c      	ands	r4, r1
    6858:	2000      	movs	r0, #0
    685a:	e73d      	b.n	66d8 <__aeabi_fmul+0x94>
    685c:	2401      	movs	r4, #1
    685e:	019b      	lsls	r3, r3, #6
    6860:	0a58      	lsrs	r0, r3, #9
    6862:	400c      	ands	r4, r1
    6864:	2200      	movs	r2, #0
    6866:	e737      	b.n	66d8 <__aeabi_fmul+0x94>
    6868:	2080      	movs	r0, #128	; 0x80
    686a:	2401      	movs	r4, #1
    686c:	03c0      	lsls	r0, r0, #15
    686e:	4328      	orrs	r0, r5
    6870:	0240      	lsls	r0, r0, #9
    6872:	0a40      	lsrs	r0, r0, #9
    6874:	400c      	ands	r4, r1
    6876:	22ff      	movs	r2, #255	; 0xff
    6878:	e72e      	b.n	66d8 <__aeabi_fmul+0x94>
    687a:	46c0      	nop			; (mov r8, r8)
    687c:	0000810c 	.word	0x0000810c
    6880:	f7ffffff 	.word	0xf7ffffff

00006884 <__aeabi_fsub>:
    6884:	b5f0      	push	{r4, r5, r6, r7, lr}
    6886:	464f      	mov	r7, r9
    6888:	46d6      	mov	lr, sl
    688a:	4646      	mov	r6, r8
    688c:	0044      	lsls	r4, r0, #1
    688e:	b5c0      	push	{r6, r7, lr}
    6890:	0fc2      	lsrs	r2, r0, #31
    6892:	0247      	lsls	r7, r0, #9
    6894:	0248      	lsls	r0, r1, #9
    6896:	0a40      	lsrs	r0, r0, #9
    6898:	4684      	mov	ip, r0
    689a:	4666      	mov	r6, ip
    689c:	0a7b      	lsrs	r3, r7, #9
    689e:	0048      	lsls	r0, r1, #1
    68a0:	0fc9      	lsrs	r1, r1, #31
    68a2:	469a      	mov	sl, r3
    68a4:	0e24      	lsrs	r4, r4, #24
    68a6:	0015      	movs	r5, r2
    68a8:	00db      	lsls	r3, r3, #3
    68aa:	0e00      	lsrs	r0, r0, #24
    68ac:	4689      	mov	r9, r1
    68ae:	00f6      	lsls	r6, r6, #3
    68b0:	28ff      	cmp	r0, #255	; 0xff
    68b2:	d100      	bne.n	68b6 <__aeabi_fsub+0x32>
    68b4:	e08f      	b.n	69d6 <__aeabi_fsub+0x152>
    68b6:	2101      	movs	r1, #1
    68b8:	464f      	mov	r7, r9
    68ba:	404f      	eors	r7, r1
    68bc:	0039      	movs	r1, r7
    68be:	4291      	cmp	r1, r2
    68c0:	d066      	beq.n	6990 <__aeabi_fsub+0x10c>
    68c2:	1a22      	subs	r2, r4, r0
    68c4:	2a00      	cmp	r2, #0
    68c6:	dc00      	bgt.n	68ca <__aeabi_fsub+0x46>
    68c8:	e09d      	b.n	6a06 <__aeabi_fsub+0x182>
    68ca:	2800      	cmp	r0, #0
    68cc:	d13d      	bne.n	694a <__aeabi_fsub+0xc6>
    68ce:	2e00      	cmp	r6, #0
    68d0:	d100      	bne.n	68d4 <__aeabi_fsub+0x50>
    68d2:	e08b      	b.n	69ec <__aeabi_fsub+0x168>
    68d4:	1e51      	subs	r1, r2, #1
    68d6:	2900      	cmp	r1, #0
    68d8:	d000      	beq.n	68dc <__aeabi_fsub+0x58>
    68da:	e0b5      	b.n	6a48 <__aeabi_fsub+0x1c4>
    68dc:	2401      	movs	r4, #1
    68de:	1b9b      	subs	r3, r3, r6
    68e0:	015a      	lsls	r2, r3, #5
    68e2:	d544      	bpl.n	696e <__aeabi_fsub+0xea>
    68e4:	019b      	lsls	r3, r3, #6
    68e6:	099f      	lsrs	r7, r3, #6
    68e8:	0038      	movs	r0, r7
    68ea:	f7ff fb7b 	bl	5fe4 <__clzsi2>
    68ee:	3805      	subs	r0, #5
    68f0:	4087      	lsls	r7, r0
    68f2:	4284      	cmp	r4, r0
    68f4:	dd00      	ble.n	68f8 <__aeabi_fsub+0x74>
    68f6:	e096      	b.n	6a26 <__aeabi_fsub+0x1a2>
    68f8:	1b04      	subs	r4, r0, r4
    68fa:	003a      	movs	r2, r7
    68fc:	2020      	movs	r0, #32
    68fe:	3401      	adds	r4, #1
    6900:	40e2      	lsrs	r2, r4
    6902:	1b04      	subs	r4, r0, r4
    6904:	40a7      	lsls	r7, r4
    6906:	003b      	movs	r3, r7
    6908:	1e5f      	subs	r7, r3, #1
    690a:	41bb      	sbcs	r3, r7
    690c:	2400      	movs	r4, #0
    690e:	4313      	orrs	r3, r2
    6910:	075a      	lsls	r2, r3, #29
    6912:	d004      	beq.n	691e <__aeabi_fsub+0x9a>
    6914:	220f      	movs	r2, #15
    6916:	401a      	ands	r2, r3
    6918:	2a04      	cmp	r2, #4
    691a:	d000      	beq.n	691e <__aeabi_fsub+0x9a>
    691c:	3304      	adds	r3, #4
    691e:	015a      	lsls	r2, r3, #5
    6920:	d527      	bpl.n	6972 <__aeabi_fsub+0xee>
    6922:	3401      	adds	r4, #1
    6924:	2cff      	cmp	r4, #255	; 0xff
    6926:	d100      	bne.n	692a <__aeabi_fsub+0xa6>
    6928:	e079      	b.n	6a1e <__aeabi_fsub+0x19a>
    692a:	2201      	movs	r2, #1
    692c:	019b      	lsls	r3, r3, #6
    692e:	0a5b      	lsrs	r3, r3, #9
    6930:	b2e4      	uxtb	r4, r4
    6932:	402a      	ands	r2, r5
    6934:	025b      	lsls	r3, r3, #9
    6936:	05e4      	lsls	r4, r4, #23
    6938:	0a58      	lsrs	r0, r3, #9
    693a:	07d2      	lsls	r2, r2, #31
    693c:	4320      	orrs	r0, r4
    693e:	4310      	orrs	r0, r2
    6940:	bc1c      	pop	{r2, r3, r4}
    6942:	4690      	mov	r8, r2
    6944:	4699      	mov	r9, r3
    6946:	46a2      	mov	sl, r4
    6948:	bdf0      	pop	{r4, r5, r6, r7, pc}
    694a:	2cff      	cmp	r4, #255	; 0xff
    694c:	d0e0      	beq.n	6910 <__aeabi_fsub+0x8c>
    694e:	2180      	movs	r1, #128	; 0x80
    6950:	04c9      	lsls	r1, r1, #19
    6952:	430e      	orrs	r6, r1
    6954:	2a1b      	cmp	r2, #27
    6956:	dc7b      	bgt.n	6a50 <__aeabi_fsub+0x1cc>
    6958:	0031      	movs	r1, r6
    695a:	2020      	movs	r0, #32
    695c:	40d1      	lsrs	r1, r2
    695e:	1a82      	subs	r2, r0, r2
    6960:	4096      	lsls	r6, r2
    6962:	1e72      	subs	r2, r6, #1
    6964:	4196      	sbcs	r6, r2
    6966:	430e      	orrs	r6, r1
    6968:	1b9b      	subs	r3, r3, r6
    696a:	015a      	lsls	r2, r3, #5
    696c:	d4ba      	bmi.n	68e4 <__aeabi_fsub+0x60>
    696e:	075a      	lsls	r2, r3, #29
    6970:	d1d0      	bne.n	6914 <__aeabi_fsub+0x90>
    6972:	2201      	movs	r2, #1
    6974:	08df      	lsrs	r7, r3, #3
    6976:	402a      	ands	r2, r5
    6978:	2cff      	cmp	r4, #255	; 0xff
    697a:	d133      	bne.n	69e4 <__aeabi_fsub+0x160>
    697c:	2f00      	cmp	r7, #0
    697e:	d100      	bne.n	6982 <__aeabi_fsub+0xfe>
    6980:	e0a8      	b.n	6ad4 <__aeabi_fsub+0x250>
    6982:	2380      	movs	r3, #128	; 0x80
    6984:	03db      	lsls	r3, r3, #15
    6986:	433b      	orrs	r3, r7
    6988:	025b      	lsls	r3, r3, #9
    698a:	0a5b      	lsrs	r3, r3, #9
    698c:	24ff      	movs	r4, #255	; 0xff
    698e:	e7d1      	b.n	6934 <__aeabi_fsub+0xb0>
    6990:	1a21      	subs	r1, r4, r0
    6992:	2900      	cmp	r1, #0
    6994:	dd4c      	ble.n	6a30 <__aeabi_fsub+0x1ac>
    6996:	2800      	cmp	r0, #0
    6998:	d02a      	beq.n	69f0 <__aeabi_fsub+0x16c>
    699a:	2cff      	cmp	r4, #255	; 0xff
    699c:	d0b8      	beq.n	6910 <__aeabi_fsub+0x8c>
    699e:	2080      	movs	r0, #128	; 0x80
    69a0:	04c0      	lsls	r0, r0, #19
    69a2:	4306      	orrs	r6, r0
    69a4:	291b      	cmp	r1, #27
    69a6:	dd00      	ble.n	69aa <__aeabi_fsub+0x126>
    69a8:	e0af      	b.n	6b0a <__aeabi_fsub+0x286>
    69aa:	0030      	movs	r0, r6
    69ac:	2720      	movs	r7, #32
    69ae:	40c8      	lsrs	r0, r1
    69b0:	1a79      	subs	r1, r7, r1
    69b2:	408e      	lsls	r6, r1
    69b4:	1e71      	subs	r1, r6, #1
    69b6:	418e      	sbcs	r6, r1
    69b8:	4306      	orrs	r6, r0
    69ba:	199b      	adds	r3, r3, r6
    69bc:	0159      	lsls	r1, r3, #5
    69be:	d5d6      	bpl.n	696e <__aeabi_fsub+0xea>
    69c0:	3401      	adds	r4, #1
    69c2:	2cff      	cmp	r4, #255	; 0xff
    69c4:	d100      	bne.n	69c8 <__aeabi_fsub+0x144>
    69c6:	e085      	b.n	6ad4 <__aeabi_fsub+0x250>
    69c8:	2201      	movs	r2, #1
    69ca:	497a      	ldr	r1, [pc, #488]	; (6bb4 <__aeabi_fsub+0x330>)
    69cc:	401a      	ands	r2, r3
    69ce:	085b      	lsrs	r3, r3, #1
    69d0:	400b      	ands	r3, r1
    69d2:	4313      	orrs	r3, r2
    69d4:	e79c      	b.n	6910 <__aeabi_fsub+0x8c>
    69d6:	2e00      	cmp	r6, #0
    69d8:	d000      	beq.n	69dc <__aeabi_fsub+0x158>
    69da:	e770      	b.n	68be <__aeabi_fsub+0x3a>
    69dc:	e76b      	b.n	68b6 <__aeabi_fsub+0x32>
    69de:	1e3b      	subs	r3, r7, #0
    69e0:	d1c5      	bne.n	696e <__aeabi_fsub+0xea>
    69e2:	2200      	movs	r2, #0
    69e4:	027b      	lsls	r3, r7, #9
    69e6:	0a5b      	lsrs	r3, r3, #9
    69e8:	b2e4      	uxtb	r4, r4
    69ea:	e7a3      	b.n	6934 <__aeabi_fsub+0xb0>
    69ec:	0014      	movs	r4, r2
    69ee:	e78f      	b.n	6910 <__aeabi_fsub+0x8c>
    69f0:	2e00      	cmp	r6, #0
    69f2:	d04d      	beq.n	6a90 <__aeabi_fsub+0x20c>
    69f4:	1e48      	subs	r0, r1, #1
    69f6:	2800      	cmp	r0, #0
    69f8:	d157      	bne.n	6aaa <__aeabi_fsub+0x226>
    69fa:	199b      	adds	r3, r3, r6
    69fc:	2401      	movs	r4, #1
    69fe:	015a      	lsls	r2, r3, #5
    6a00:	d5b5      	bpl.n	696e <__aeabi_fsub+0xea>
    6a02:	2402      	movs	r4, #2
    6a04:	e7e0      	b.n	69c8 <__aeabi_fsub+0x144>
    6a06:	2a00      	cmp	r2, #0
    6a08:	d125      	bne.n	6a56 <__aeabi_fsub+0x1d2>
    6a0a:	1c62      	adds	r2, r4, #1
    6a0c:	b2d2      	uxtb	r2, r2
    6a0e:	2a01      	cmp	r2, #1
    6a10:	dd72      	ble.n	6af8 <__aeabi_fsub+0x274>
    6a12:	1b9f      	subs	r7, r3, r6
    6a14:	017a      	lsls	r2, r7, #5
    6a16:	d535      	bpl.n	6a84 <__aeabi_fsub+0x200>
    6a18:	1af7      	subs	r7, r6, r3
    6a1a:	000d      	movs	r5, r1
    6a1c:	e764      	b.n	68e8 <__aeabi_fsub+0x64>
    6a1e:	2201      	movs	r2, #1
    6a20:	2300      	movs	r3, #0
    6a22:	402a      	ands	r2, r5
    6a24:	e786      	b.n	6934 <__aeabi_fsub+0xb0>
    6a26:	003b      	movs	r3, r7
    6a28:	4a63      	ldr	r2, [pc, #396]	; (6bb8 <__aeabi_fsub+0x334>)
    6a2a:	1a24      	subs	r4, r4, r0
    6a2c:	4013      	ands	r3, r2
    6a2e:	e76f      	b.n	6910 <__aeabi_fsub+0x8c>
    6a30:	2900      	cmp	r1, #0
    6a32:	d16c      	bne.n	6b0e <__aeabi_fsub+0x28a>
    6a34:	1c61      	adds	r1, r4, #1
    6a36:	b2c8      	uxtb	r0, r1
    6a38:	2801      	cmp	r0, #1
    6a3a:	dd4e      	ble.n	6ada <__aeabi_fsub+0x256>
    6a3c:	29ff      	cmp	r1, #255	; 0xff
    6a3e:	d049      	beq.n	6ad4 <__aeabi_fsub+0x250>
    6a40:	199b      	adds	r3, r3, r6
    6a42:	085b      	lsrs	r3, r3, #1
    6a44:	000c      	movs	r4, r1
    6a46:	e763      	b.n	6910 <__aeabi_fsub+0x8c>
    6a48:	2aff      	cmp	r2, #255	; 0xff
    6a4a:	d041      	beq.n	6ad0 <__aeabi_fsub+0x24c>
    6a4c:	000a      	movs	r2, r1
    6a4e:	e781      	b.n	6954 <__aeabi_fsub+0xd0>
    6a50:	2601      	movs	r6, #1
    6a52:	1b9b      	subs	r3, r3, r6
    6a54:	e789      	b.n	696a <__aeabi_fsub+0xe6>
    6a56:	2c00      	cmp	r4, #0
    6a58:	d01c      	beq.n	6a94 <__aeabi_fsub+0x210>
    6a5a:	28ff      	cmp	r0, #255	; 0xff
    6a5c:	d021      	beq.n	6aa2 <__aeabi_fsub+0x21e>
    6a5e:	2480      	movs	r4, #128	; 0x80
    6a60:	04e4      	lsls	r4, r4, #19
    6a62:	4252      	negs	r2, r2
    6a64:	4323      	orrs	r3, r4
    6a66:	2a1b      	cmp	r2, #27
    6a68:	dd00      	ble.n	6a6c <__aeabi_fsub+0x1e8>
    6a6a:	e096      	b.n	6b9a <__aeabi_fsub+0x316>
    6a6c:	001c      	movs	r4, r3
    6a6e:	2520      	movs	r5, #32
    6a70:	40d4      	lsrs	r4, r2
    6a72:	1aaa      	subs	r2, r5, r2
    6a74:	4093      	lsls	r3, r2
    6a76:	1e5a      	subs	r2, r3, #1
    6a78:	4193      	sbcs	r3, r2
    6a7a:	4323      	orrs	r3, r4
    6a7c:	1af3      	subs	r3, r6, r3
    6a7e:	0004      	movs	r4, r0
    6a80:	000d      	movs	r5, r1
    6a82:	e72d      	b.n	68e0 <__aeabi_fsub+0x5c>
    6a84:	2f00      	cmp	r7, #0
    6a86:	d000      	beq.n	6a8a <__aeabi_fsub+0x206>
    6a88:	e72e      	b.n	68e8 <__aeabi_fsub+0x64>
    6a8a:	2200      	movs	r2, #0
    6a8c:	2400      	movs	r4, #0
    6a8e:	e7a9      	b.n	69e4 <__aeabi_fsub+0x160>
    6a90:	000c      	movs	r4, r1
    6a92:	e73d      	b.n	6910 <__aeabi_fsub+0x8c>
    6a94:	2b00      	cmp	r3, #0
    6a96:	d058      	beq.n	6b4a <__aeabi_fsub+0x2c6>
    6a98:	43d2      	mvns	r2, r2
    6a9a:	2a00      	cmp	r2, #0
    6a9c:	d0ee      	beq.n	6a7c <__aeabi_fsub+0x1f8>
    6a9e:	28ff      	cmp	r0, #255	; 0xff
    6aa0:	d1e1      	bne.n	6a66 <__aeabi_fsub+0x1e2>
    6aa2:	0033      	movs	r3, r6
    6aa4:	24ff      	movs	r4, #255	; 0xff
    6aa6:	000d      	movs	r5, r1
    6aa8:	e732      	b.n	6910 <__aeabi_fsub+0x8c>
    6aaa:	29ff      	cmp	r1, #255	; 0xff
    6aac:	d010      	beq.n	6ad0 <__aeabi_fsub+0x24c>
    6aae:	0001      	movs	r1, r0
    6ab0:	e778      	b.n	69a4 <__aeabi_fsub+0x120>
    6ab2:	2b00      	cmp	r3, #0
    6ab4:	d06e      	beq.n	6b94 <__aeabi_fsub+0x310>
    6ab6:	24ff      	movs	r4, #255	; 0xff
    6ab8:	2e00      	cmp	r6, #0
    6aba:	d100      	bne.n	6abe <__aeabi_fsub+0x23a>
    6abc:	e728      	b.n	6910 <__aeabi_fsub+0x8c>
    6abe:	2280      	movs	r2, #128	; 0x80
    6ac0:	4651      	mov	r1, sl
    6ac2:	03d2      	lsls	r2, r2, #15
    6ac4:	4211      	tst	r1, r2
    6ac6:	d003      	beq.n	6ad0 <__aeabi_fsub+0x24c>
    6ac8:	4661      	mov	r1, ip
    6aca:	4211      	tst	r1, r2
    6acc:	d100      	bne.n	6ad0 <__aeabi_fsub+0x24c>
    6ace:	0033      	movs	r3, r6
    6ad0:	24ff      	movs	r4, #255	; 0xff
    6ad2:	e71d      	b.n	6910 <__aeabi_fsub+0x8c>
    6ad4:	24ff      	movs	r4, #255	; 0xff
    6ad6:	2300      	movs	r3, #0
    6ad8:	e72c      	b.n	6934 <__aeabi_fsub+0xb0>
    6ada:	2c00      	cmp	r4, #0
    6adc:	d1e9      	bne.n	6ab2 <__aeabi_fsub+0x22e>
    6ade:	2b00      	cmp	r3, #0
    6ae0:	d063      	beq.n	6baa <__aeabi_fsub+0x326>
    6ae2:	2e00      	cmp	r6, #0
    6ae4:	d100      	bne.n	6ae8 <__aeabi_fsub+0x264>
    6ae6:	e713      	b.n	6910 <__aeabi_fsub+0x8c>
    6ae8:	199b      	adds	r3, r3, r6
    6aea:	015a      	lsls	r2, r3, #5
    6aec:	d400      	bmi.n	6af0 <__aeabi_fsub+0x26c>
    6aee:	e73e      	b.n	696e <__aeabi_fsub+0xea>
    6af0:	4a31      	ldr	r2, [pc, #196]	; (6bb8 <__aeabi_fsub+0x334>)
    6af2:	000c      	movs	r4, r1
    6af4:	4013      	ands	r3, r2
    6af6:	e70b      	b.n	6910 <__aeabi_fsub+0x8c>
    6af8:	2c00      	cmp	r4, #0
    6afa:	d11e      	bne.n	6b3a <__aeabi_fsub+0x2b6>
    6afc:	2b00      	cmp	r3, #0
    6afe:	d12f      	bne.n	6b60 <__aeabi_fsub+0x2dc>
    6b00:	2e00      	cmp	r6, #0
    6b02:	d04f      	beq.n	6ba4 <__aeabi_fsub+0x320>
    6b04:	0033      	movs	r3, r6
    6b06:	000d      	movs	r5, r1
    6b08:	e702      	b.n	6910 <__aeabi_fsub+0x8c>
    6b0a:	2601      	movs	r6, #1
    6b0c:	e755      	b.n	69ba <__aeabi_fsub+0x136>
    6b0e:	2c00      	cmp	r4, #0
    6b10:	d11f      	bne.n	6b52 <__aeabi_fsub+0x2ce>
    6b12:	2b00      	cmp	r3, #0
    6b14:	d043      	beq.n	6b9e <__aeabi_fsub+0x31a>
    6b16:	43c9      	mvns	r1, r1
    6b18:	2900      	cmp	r1, #0
    6b1a:	d00b      	beq.n	6b34 <__aeabi_fsub+0x2b0>
    6b1c:	28ff      	cmp	r0, #255	; 0xff
    6b1e:	d039      	beq.n	6b94 <__aeabi_fsub+0x310>
    6b20:	291b      	cmp	r1, #27
    6b22:	dc44      	bgt.n	6bae <__aeabi_fsub+0x32a>
    6b24:	001c      	movs	r4, r3
    6b26:	2720      	movs	r7, #32
    6b28:	40cc      	lsrs	r4, r1
    6b2a:	1a79      	subs	r1, r7, r1
    6b2c:	408b      	lsls	r3, r1
    6b2e:	1e59      	subs	r1, r3, #1
    6b30:	418b      	sbcs	r3, r1
    6b32:	4323      	orrs	r3, r4
    6b34:	199b      	adds	r3, r3, r6
    6b36:	0004      	movs	r4, r0
    6b38:	e740      	b.n	69bc <__aeabi_fsub+0x138>
    6b3a:	2b00      	cmp	r3, #0
    6b3c:	d11a      	bne.n	6b74 <__aeabi_fsub+0x2f0>
    6b3e:	2e00      	cmp	r6, #0
    6b40:	d124      	bne.n	6b8c <__aeabi_fsub+0x308>
    6b42:	2780      	movs	r7, #128	; 0x80
    6b44:	2200      	movs	r2, #0
    6b46:	03ff      	lsls	r7, r7, #15
    6b48:	e71b      	b.n	6982 <__aeabi_fsub+0xfe>
    6b4a:	0033      	movs	r3, r6
    6b4c:	0004      	movs	r4, r0
    6b4e:	000d      	movs	r5, r1
    6b50:	e6de      	b.n	6910 <__aeabi_fsub+0x8c>
    6b52:	28ff      	cmp	r0, #255	; 0xff
    6b54:	d01e      	beq.n	6b94 <__aeabi_fsub+0x310>
    6b56:	2480      	movs	r4, #128	; 0x80
    6b58:	04e4      	lsls	r4, r4, #19
    6b5a:	4249      	negs	r1, r1
    6b5c:	4323      	orrs	r3, r4
    6b5e:	e7df      	b.n	6b20 <__aeabi_fsub+0x29c>
    6b60:	2e00      	cmp	r6, #0
    6b62:	d100      	bne.n	6b66 <__aeabi_fsub+0x2e2>
    6b64:	e6d4      	b.n	6910 <__aeabi_fsub+0x8c>
    6b66:	1b9f      	subs	r7, r3, r6
    6b68:	017a      	lsls	r2, r7, #5
    6b6a:	d400      	bmi.n	6b6e <__aeabi_fsub+0x2ea>
    6b6c:	e737      	b.n	69de <__aeabi_fsub+0x15a>
    6b6e:	1af3      	subs	r3, r6, r3
    6b70:	000d      	movs	r5, r1
    6b72:	e6cd      	b.n	6910 <__aeabi_fsub+0x8c>
    6b74:	24ff      	movs	r4, #255	; 0xff
    6b76:	2e00      	cmp	r6, #0
    6b78:	d100      	bne.n	6b7c <__aeabi_fsub+0x2f8>
    6b7a:	e6c9      	b.n	6910 <__aeabi_fsub+0x8c>
    6b7c:	2280      	movs	r2, #128	; 0x80
    6b7e:	4650      	mov	r0, sl
    6b80:	03d2      	lsls	r2, r2, #15
    6b82:	4210      	tst	r0, r2
    6b84:	d0a4      	beq.n	6ad0 <__aeabi_fsub+0x24c>
    6b86:	4660      	mov	r0, ip
    6b88:	4210      	tst	r0, r2
    6b8a:	d1a1      	bne.n	6ad0 <__aeabi_fsub+0x24c>
    6b8c:	0033      	movs	r3, r6
    6b8e:	000d      	movs	r5, r1
    6b90:	24ff      	movs	r4, #255	; 0xff
    6b92:	e6bd      	b.n	6910 <__aeabi_fsub+0x8c>
    6b94:	0033      	movs	r3, r6
    6b96:	24ff      	movs	r4, #255	; 0xff
    6b98:	e6ba      	b.n	6910 <__aeabi_fsub+0x8c>
    6b9a:	2301      	movs	r3, #1
    6b9c:	e76e      	b.n	6a7c <__aeabi_fsub+0x1f8>
    6b9e:	0033      	movs	r3, r6
    6ba0:	0004      	movs	r4, r0
    6ba2:	e6b5      	b.n	6910 <__aeabi_fsub+0x8c>
    6ba4:	2700      	movs	r7, #0
    6ba6:	2200      	movs	r2, #0
    6ba8:	e71c      	b.n	69e4 <__aeabi_fsub+0x160>
    6baa:	0033      	movs	r3, r6
    6bac:	e6b0      	b.n	6910 <__aeabi_fsub+0x8c>
    6bae:	2301      	movs	r3, #1
    6bb0:	e7c0      	b.n	6b34 <__aeabi_fsub+0x2b0>
    6bb2:	46c0      	nop			; (mov r8, r8)
    6bb4:	7dffffff 	.word	0x7dffffff
    6bb8:	fbffffff 	.word	0xfbffffff

00006bbc <__aeabi_f2iz>:
    6bbc:	0241      	lsls	r1, r0, #9
    6bbe:	0043      	lsls	r3, r0, #1
    6bc0:	0fc2      	lsrs	r2, r0, #31
    6bc2:	0a49      	lsrs	r1, r1, #9
    6bc4:	0e1b      	lsrs	r3, r3, #24
    6bc6:	2000      	movs	r0, #0
    6bc8:	2b7e      	cmp	r3, #126	; 0x7e
    6bca:	dd0d      	ble.n	6be8 <__aeabi_f2iz+0x2c>
    6bcc:	2b9d      	cmp	r3, #157	; 0x9d
    6bce:	dc0c      	bgt.n	6bea <__aeabi_f2iz+0x2e>
    6bd0:	2080      	movs	r0, #128	; 0x80
    6bd2:	0400      	lsls	r0, r0, #16
    6bd4:	4301      	orrs	r1, r0
    6bd6:	2b95      	cmp	r3, #149	; 0x95
    6bd8:	dc0a      	bgt.n	6bf0 <__aeabi_f2iz+0x34>
    6bda:	2096      	movs	r0, #150	; 0x96
    6bdc:	1ac3      	subs	r3, r0, r3
    6bde:	40d9      	lsrs	r1, r3
    6be0:	4248      	negs	r0, r1
    6be2:	2a00      	cmp	r2, #0
    6be4:	d100      	bne.n	6be8 <__aeabi_f2iz+0x2c>
    6be6:	0008      	movs	r0, r1
    6be8:	4770      	bx	lr
    6bea:	4b03      	ldr	r3, [pc, #12]	; (6bf8 <__aeabi_f2iz+0x3c>)
    6bec:	18d0      	adds	r0, r2, r3
    6bee:	e7fb      	b.n	6be8 <__aeabi_f2iz+0x2c>
    6bf0:	3b96      	subs	r3, #150	; 0x96
    6bf2:	4099      	lsls	r1, r3
    6bf4:	e7f4      	b.n	6be0 <__aeabi_f2iz+0x24>
    6bf6:	46c0      	nop			; (mov r8, r8)
    6bf8:	7fffffff 	.word	0x7fffffff

00006bfc <__aeabi_i2f>:
    6bfc:	b570      	push	{r4, r5, r6, lr}
    6bfe:	2800      	cmp	r0, #0
    6c00:	d030      	beq.n	6c64 <__aeabi_i2f+0x68>
    6c02:	17c3      	asrs	r3, r0, #31
    6c04:	18c4      	adds	r4, r0, r3
    6c06:	405c      	eors	r4, r3
    6c08:	0fc5      	lsrs	r5, r0, #31
    6c0a:	0020      	movs	r0, r4
    6c0c:	f7ff f9ea 	bl	5fe4 <__clzsi2>
    6c10:	239e      	movs	r3, #158	; 0x9e
    6c12:	1a1b      	subs	r3, r3, r0
    6c14:	2b96      	cmp	r3, #150	; 0x96
    6c16:	dc0d      	bgt.n	6c34 <__aeabi_i2f+0x38>
    6c18:	2296      	movs	r2, #150	; 0x96
    6c1a:	1ad2      	subs	r2, r2, r3
    6c1c:	4094      	lsls	r4, r2
    6c1e:	002a      	movs	r2, r5
    6c20:	0264      	lsls	r4, r4, #9
    6c22:	0a64      	lsrs	r4, r4, #9
    6c24:	b2db      	uxtb	r3, r3
    6c26:	0264      	lsls	r4, r4, #9
    6c28:	05db      	lsls	r3, r3, #23
    6c2a:	0a60      	lsrs	r0, r4, #9
    6c2c:	07d2      	lsls	r2, r2, #31
    6c2e:	4318      	orrs	r0, r3
    6c30:	4310      	orrs	r0, r2
    6c32:	bd70      	pop	{r4, r5, r6, pc}
    6c34:	2b99      	cmp	r3, #153	; 0x99
    6c36:	dc19      	bgt.n	6c6c <__aeabi_i2f+0x70>
    6c38:	2299      	movs	r2, #153	; 0x99
    6c3a:	1ad2      	subs	r2, r2, r3
    6c3c:	2a00      	cmp	r2, #0
    6c3e:	dd29      	ble.n	6c94 <__aeabi_i2f+0x98>
    6c40:	4094      	lsls	r4, r2
    6c42:	0022      	movs	r2, r4
    6c44:	4c14      	ldr	r4, [pc, #80]	; (6c98 <__aeabi_i2f+0x9c>)
    6c46:	4014      	ands	r4, r2
    6c48:	0751      	lsls	r1, r2, #29
    6c4a:	d004      	beq.n	6c56 <__aeabi_i2f+0x5a>
    6c4c:	210f      	movs	r1, #15
    6c4e:	400a      	ands	r2, r1
    6c50:	2a04      	cmp	r2, #4
    6c52:	d000      	beq.n	6c56 <__aeabi_i2f+0x5a>
    6c54:	3404      	adds	r4, #4
    6c56:	0162      	lsls	r2, r4, #5
    6c58:	d413      	bmi.n	6c82 <__aeabi_i2f+0x86>
    6c5a:	01a4      	lsls	r4, r4, #6
    6c5c:	0a64      	lsrs	r4, r4, #9
    6c5e:	b2db      	uxtb	r3, r3
    6c60:	002a      	movs	r2, r5
    6c62:	e7e0      	b.n	6c26 <__aeabi_i2f+0x2a>
    6c64:	2200      	movs	r2, #0
    6c66:	2300      	movs	r3, #0
    6c68:	2400      	movs	r4, #0
    6c6a:	e7dc      	b.n	6c26 <__aeabi_i2f+0x2a>
    6c6c:	2205      	movs	r2, #5
    6c6e:	0021      	movs	r1, r4
    6c70:	1a12      	subs	r2, r2, r0
    6c72:	40d1      	lsrs	r1, r2
    6c74:	22b9      	movs	r2, #185	; 0xb9
    6c76:	1ad2      	subs	r2, r2, r3
    6c78:	4094      	lsls	r4, r2
    6c7a:	1e62      	subs	r2, r4, #1
    6c7c:	4194      	sbcs	r4, r2
    6c7e:	430c      	orrs	r4, r1
    6c80:	e7da      	b.n	6c38 <__aeabi_i2f+0x3c>
    6c82:	4b05      	ldr	r3, [pc, #20]	; (6c98 <__aeabi_i2f+0x9c>)
    6c84:	002a      	movs	r2, r5
    6c86:	401c      	ands	r4, r3
    6c88:	239f      	movs	r3, #159	; 0x9f
    6c8a:	01a4      	lsls	r4, r4, #6
    6c8c:	1a1b      	subs	r3, r3, r0
    6c8e:	0a64      	lsrs	r4, r4, #9
    6c90:	b2db      	uxtb	r3, r3
    6c92:	e7c8      	b.n	6c26 <__aeabi_i2f+0x2a>
    6c94:	0022      	movs	r2, r4
    6c96:	e7d5      	b.n	6c44 <__aeabi_i2f+0x48>
    6c98:	fbffffff 	.word	0xfbffffff

00006c9c <__aeabi_ui2f>:
    6c9c:	b510      	push	{r4, lr}
    6c9e:	1e04      	subs	r4, r0, #0
    6ca0:	d027      	beq.n	6cf2 <__aeabi_ui2f+0x56>
    6ca2:	f7ff f99f 	bl	5fe4 <__clzsi2>
    6ca6:	239e      	movs	r3, #158	; 0x9e
    6ca8:	1a1b      	subs	r3, r3, r0
    6caa:	2b96      	cmp	r3, #150	; 0x96
    6cac:	dc0a      	bgt.n	6cc4 <__aeabi_ui2f+0x28>
    6cae:	2296      	movs	r2, #150	; 0x96
    6cb0:	1ad2      	subs	r2, r2, r3
    6cb2:	4094      	lsls	r4, r2
    6cb4:	0264      	lsls	r4, r4, #9
    6cb6:	0a64      	lsrs	r4, r4, #9
    6cb8:	b2db      	uxtb	r3, r3
    6cba:	0264      	lsls	r4, r4, #9
    6cbc:	05db      	lsls	r3, r3, #23
    6cbe:	0a60      	lsrs	r0, r4, #9
    6cc0:	4318      	orrs	r0, r3
    6cc2:	bd10      	pop	{r4, pc}
    6cc4:	2b99      	cmp	r3, #153	; 0x99
    6cc6:	dc17      	bgt.n	6cf8 <__aeabi_ui2f+0x5c>
    6cc8:	2299      	movs	r2, #153	; 0x99
    6cca:	1ad2      	subs	r2, r2, r3
    6ccc:	2a00      	cmp	r2, #0
    6cce:	dd27      	ble.n	6d20 <__aeabi_ui2f+0x84>
    6cd0:	4094      	lsls	r4, r2
    6cd2:	0022      	movs	r2, r4
    6cd4:	4c13      	ldr	r4, [pc, #76]	; (6d24 <__aeabi_ui2f+0x88>)
    6cd6:	4014      	ands	r4, r2
    6cd8:	0751      	lsls	r1, r2, #29
    6cda:	d004      	beq.n	6ce6 <__aeabi_ui2f+0x4a>
    6cdc:	210f      	movs	r1, #15
    6cde:	400a      	ands	r2, r1
    6ce0:	2a04      	cmp	r2, #4
    6ce2:	d000      	beq.n	6ce6 <__aeabi_ui2f+0x4a>
    6ce4:	3404      	adds	r4, #4
    6ce6:	0162      	lsls	r2, r4, #5
    6ce8:	d412      	bmi.n	6d10 <__aeabi_ui2f+0x74>
    6cea:	01a4      	lsls	r4, r4, #6
    6cec:	0a64      	lsrs	r4, r4, #9
    6cee:	b2db      	uxtb	r3, r3
    6cf0:	e7e3      	b.n	6cba <__aeabi_ui2f+0x1e>
    6cf2:	2300      	movs	r3, #0
    6cf4:	2400      	movs	r4, #0
    6cf6:	e7e0      	b.n	6cba <__aeabi_ui2f+0x1e>
    6cf8:	22b9      	movs	r2, #185	; 0xb9
    6cfa:	0021      	movs	r1, r4
    6cfc:	1ad2      	subs	r2, r2, r3
    6cfe:	4091      	lsls	r1, r2
    6d00:	000a      	movs	r2, r1
    6d02:	1e51      	subs	r1, r2, #1
    6d04:	418a      	sbcs	r2, r1
    6d06:	2105      	movs	r1, #5
    6d08:	1a09      	subs	r1, r1, r0
    6d0a:	40cc      	lsrs	r4, r1
    6d0c:	4314      	orrs	r4, r2
    6d0e:	e7db      	b.n	6cc8 <__aeabi_ui2f+0x2c>
    6d10:	4b04      	ldr	r3, [pc, #16]	; (6d24 <__aeabi_ui2f+0x88>)
    6d12:	401c      	ands	r4, r3
    6d14:	239f      	movs	r3, #159	; 0x9f
    6d16:	01a4      	lsls	r4, r4, #6
    6d18:	1a1b      	subs	r3, r3, r0
    6d1a:	0a64      	lsrs	r4, r4, #9
    6d1c:	b2db      	uxtb	r3, r3
    6d1e:	e7cc      	b.n	6cba <__aeabi_ui2f+0x1e>
    6d20:	0022      	movs	r2, r4
    6d22:	e7d7      	b.n	6cd4 <__aeabi_ui2f+0x38>
    6d24:	fbffffff 	.word	0xfbffffff

00006d28 <__aeabi_ddiv>:
    6d28:	b5f0      	push	{r4, r5, r6, r7, lr}
    6d2a:	4657      	mov	r7, sl
    6d2c:	4645      	mov	r5, r8
    6d2e:	46de      	mov	lr, fp
    6d30:	464e      	mov	r6, r9
    6d32:	b5e0      	push	{r5, r6, r7, lr}
    6d34:	004c      	lsls	r4, r1, #1
    6d36:	030e      	lsls	r6, r1, #12
    6d38:	b087      	sub	sp, #28
    6d3a:	4683      	mov	fp, r0
    6d3c:	4692      	mov	sl, r2
    6d3e:	001d      	movs	r5, r3
    6d40:	4680      	mov	r8, r0
    6d42:	0b36      	lsrs	r6, r6, #12
    6d44:	0d64      	lsrs	r4, r4, #21
    6d46:	0fcf      	lsrs	r7, r1, #31
    6d48:	2c00      	cmp	r4, #0
    6d4a:	d04f      	beq.n	6dec <__aeabi_ddiv+0xc4>
    6d4c:	4b6f      	ldr	r3, [pc, #444]	; (6f0c <__aeabi_ddiv+0x1e4>)
    6d4e:	429c      	cmp	r4, r3
    6d50:	d035      	beq.n	6dbe <__aeabi_ddiv+0x96>
    6d52:	2380      	movs	r3, #128	; 0x80
    6d54:	0f42      	lsrs	r2, r0, #29
    6d56:	041b      	lsls	r3, r3, #16
    6d58:	00f6      	lsls	r6, r6, #3
    6d5a:	4313      	orrs	r3, r2
    6d5c:	4333      	orrs	r3, r6
    6d5e:	4699      	mov	r9, r3
    6d60:	00c3      	lsls	r3, r0, #3
    6d62:	4698      	mov	r8, r3
    6d64:	4b6a      	ldr	r3, [pc, #424]	; (6f10 <__aeabi_ddiv+0x1e8>)
    6d66:	2600      	movs	r6, #0
    6d68:	469c      	mov	ip, r3
    6d6a:	2300      	movs	r3, #0
    6d6c:	4464      	add	r4, ip
    6d6e:	9303      	str	r3, [sp, #12]
    6d70:	032b      	lsls	r3, r5, #12
    6d72:	0b1b      	lsrs	r3, r3, #12
    6d74:	469b      	mov	fp, r3
    6d76:	006b      	lsls	r3, r5, #1
    6d78:	0fed      	lsrs	r5, r5, #31
    6d7a:	4650      	mov	r0, sl
    6d7c:	0d5b      	lsrs	r3, r3, #21
    6d7e:	9501      	str	r5, [sp, #4]
    6d80:	d05e      	beq.n	6e40 <__aeabi_ddiv+0x118>
    6d82:	4a62      	ldr	r2, [pc, #392]	; (6f0c <__aeabi_ddiv+0x1e4>)
    6d84:	4293      	cmp	r3, r2
    6d86:	d053      	beq.n	6e30 <__aeabi_ddiv+0x108>
    6d88:	465a      	mov	r2, fp
    6d8a:	00d1      	lsls	r1, r2, #3
    6d8c:	2280      	movs	r2, #128	; 0x80
    6d8e:	0f40      	lsrs	r0, r0, #29
    6d90:	0412      	lsls	r2, r2, #16
    6d92:	4302      	orrs	r2, r0
    6d94:	430a      	orrs	r2, r1
    6d96:	4693      	mov	fp, r2
    6d98:	4652      	mov	r2, sl
    6d9a:	00d1      	lsls	r1, r2, #3
    6d9c:	4a5c      	ldr	r2, [pc, #368]	; (6f10 <__aeabi_ddiv+0x1e8>)
    6d9e:	4694      	mov	ip, r2
    6da0:	2200      	movs	r2, #0
    6da2:	4463      	add	r3, ip
    6da4:	0038      	movs	r0, r7
    6da6:	4068      	eors	r0, r5
    6da8:	4684      	mov	ip, r0
    6daa:	9002      	str	r0, [sp, #8]
    6dac:	1ae4      	subs	r4, r4, r3
    6dae:	4316      	orrs	r6, r2
    6db0:	2e0f      	cmp	r6, #15
    6db2:	d900      	bls.n	6db6 <__aeabi_ddiv+0x8e>
    6db4:	e0b4      	b.n	6f20 <__aeabi_ddiv+0x1f8>
    6db6:	4b57      	ldr	r3, [pc, #348]	; (6f14 <__aeabi_ddiv+0x1ec>)
    6db8:	00b6      	lsls	r6, r6, #2
    6dba:	599b      	ldr	r3, [r3, r6]
    6dbc:	469f      	mov	pc, r3
    6dbe:	0003      	movs	r3, r0
    6dc0:	4333      	orrs	r3, r6
    6dc2:	4699      	mov	r9, r3
    6dc4:	d16c      	bne.n	6ea0 <__aeabi_ddiv+0x178>
    6dc6:	2300      	movs	r3, #0
    6dc8:	4698      	mov	r8, r3
    6dca:	3302      	adds	r3, #2
    6dcc:	2608      	movs	r6, #8
    6dce:	9303      	str	r3, [sp, #12]
    6dd0:	e7ce      	b.n	6d70 <__aeabi_ddiv+0x48>
    6dd2:	46cb      	mov	fp, r9
    6dd4:	4641      	mov	r1, r8
    6dd6:	9a03      	ldr	r2, [sp, #12]
    6dd8:	9701      	str	r7, [sp, #4]
    6dda:	2a02      	cmp	r2, #2
    6ddc:	d165      	bne.n	6eaa <__aeabi_ddiv+0x182>
    6dde:	9b01      	ldr	r3, [sp, #4]
    6de0:	4c4a      	ldr	r4, [pc, #296]	; (6f0c <__aeabi_ddiv+0x1e4>)
    6de2:	469c      	mov	ip, r3
    6de4:	2300      	movs	r3, #0
    6de6:	2200      	movs	r2, #0
    6de8:	4698      	mov	r8, r3
    6dea:	e06b      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    6dec:	0003      	movs	r3, r0
    6dee:	4333      	orrs	r3, r6
    6df0:	4699      	mov	r9, r3
    6df2:	d04e      	beq.n	6e92 <__aeabi_ddiv+0x16a>
    6df4:	2e00      	cmp	r6, #0
    6df6:	d100      	bne.n	6dfa <__aeabi_ddiv+0xd2>
    6df8:	e1bc      	b.n	7174 <__aeabi_ddiv+0x44c>
    6dfa:	0030      	movs	r0, r6
    6dfc:	f7ff f8f2 	bl	5fe4 <__clzsi2>
    6e00:	0003      	movs	r3, r0
    6e02:	3b0b      	subs	r3, #11
    6e04:	2b1c      	cmp	r3, #28
    6e06:	dd00      	ble.n	6e0a <__aeabi_ddiv+0xe2>
    6e08:	e1ac      	b.n	7164 <__aeabi_ddiv+0x43c>
    6e0a:	221d      	movs	r2, #29
    6e0c:	1ad3      	subs	r3, r2, r3
    6e0e:	465a      	mov	r2, fp
    6e10:	0001      	movs	r1, r0
    6e12:	40da      	lsrs	r2, r3
    6e14:	3908      	subs	r1, #8
    6e16:	408e      	lsls	r6, r1
    6e18:	0013      	movs	r3, r2
    6e1a:	4333      	orrs	r3, r6
    6e1c:	4699      	mov	r9, r3
    6e1e:	465b      	mov	r3, fp
    6e20:	408b      	lsls	r3, r1
    6e22:	4698      	mov	r8, r3
    6e24:	2300      	movs	r3, #0
    6e26:	4c3c      	ldr	r4, [pc, #240]	; (6f18 <__aeabi_ddiv+0x1f0>)
    6e28:	2600      	movs	r6, #0
    6e2a:	1a24      	subs	r4, r4, r0
    6e2c:	9303      	str	r3, [sp, #12]
    6e2e:	e79f      	b.n	6d70 <__aeabi_ddiv+0x48>
    6e30:	4651      	mov	r1, sl
    6e32:	465a      	mov	r2, fp
    6e34:	4311      	orrs	r1, r2
    6e36:	d129      	bne.n	6e8c <__aeabi_ddiv+0x164>
    6e38:	2200      	movs	r2, #0
    6e3a:	4693      	mov	fp, r2
    6e3c:	3202      	adds	r2, #2
    6e3e:	e7b1      	b.n	6da4 <__aeabi_ddiv+0x7c>
    6e40:	4659      	mov	r1, fp
    6e42:	4301      	orrs	r1, r0
    6e44:	d01e      	beq.n	6e84 <__aeabi_ddiv+0x15c>
    6e46:	465b      	mov	r3, fp
    6e48:	2b00      	cmp	r3, #0
    6e4a:	d100      	bne.n	6e4e <__aeabi_ddiv+0x126>
    6e4c:	e19e      	b.n	718c <__aeabi_ddiv+0x464>
    6e4e:	4658      	mov	r0, fp
    6e50:	f7ff f8c8 	bl	5fe4 <__clzsi2>
    6e54:	0003      	movs	r3, r0
    6e56:	3b0b      	subs	r3, #11
    6e58:	2b1c      	cmp	r3, #28
    6e5a:	dd00      	ble.n	6e5e <__aeabi_ddiv+0x136>
    6e5c:	e18f      	b.n	717e <__aeabi_ddiv+0x456>
    6e5e:	0002      	movs	r2, r0
    6e60:	4659      	mov	r1, fp
    6e62:	3a08      	subs	r2, #8
    6e64:	4091      	lsls	r1, r2
    6e66:	468b      	mov	fp, r1
    6e68:	211d      	movs	r1, #29
    6e6a:	1acb      	subs	r3, r1, r3
    6e6c:	4651      	mov	r1, sl
    6e6e:	40d9      	lsrs	r1, r3
    6e70:	000b      	movs	r3, r1
    6e72:	4659      	mov	r1, fp
    6e74:	430b      	orrs	r3, r1
    6e76:	4651      	mov	r1, sl
    6e78:	469b      	mov	fp, r3
    6e7a:	4091      	lsls	r1, r2
    6e7c:	4b26      	ldr	r3, [pc, #152]	; (6f18 <__aeabi_ddiv+0x1f0>)
    6e7e:	2200      	movs	r2, #0
    6e80:	1a1b      	subs	r3, r3, r0
    6e82:	e78f      	b.n	6da4 <__aeabi_ddiv+0x7c>
    6e84:	2300      	movs	r3, #0
    6e86:	2201      	movs	r2, #1
    6e88:	469b      	mov	fp, r3
    6e8a:	e78b      	b.n	6da4 <__aeabi_ddiv+0x7c>
    6e8c:	4651      	mov	r1, sl
    6e8e:	2203      	movs	r2, #3
    6e90:	e788      	b.n	6da4 <__aeabi_ddiv+0x7c>
    6e92:	2300      	movs	r3, #0
    6e94:	4698      	mov	r8, r3
    6e96:	3301      	adds	r3, #1
    6e98:	2604      	movs	r6, #4
    6e9a:	2400      	movs	r4, #0
    6e9c:	9303      	str	r3, [sp, #12]
    6e9e:	e767      	b.n	6d70 <__aeabi_ddiv+0x48>
    6ea0:	2303      	movs	r3, #3
    6ea2:	46b1      	mov	r9, r6
    6ea4:	9303      	str	r3, [sp, #12]
    6ea6:	260c      	movs	r6, #12
    6ea8:	e762      	b.n	6d70 <__aeabi_ddiv+0x48>
    6eaa:	2a03      	cmp	r2, #3
    6eac:	d100      	bne.n	6eb0 <__aeabi_ddiv+0x188>
    6eae:	e25c      	b.n	736a <__aeabi_ddiv+0x642>
    6eb0:	9b01      	ldr	r3, [sp, #4]
    6eb2:	2a01      	cmp	r2, #1
    6eb4:	d000      	beq.n	6eb8 <__aeabi_ddiv+0x190>
    6eb6:	e1e4      	b.n	7282 <__aeabi_ddiv+0x55a>
    6eb8:	4013      	ands	r3, r2
    6eba:	469c      	mov	ip, r3
    6ebc:	2300      	movs	r3, #0
    6ebe:	2400      	movs	r4, #0
    6ec0:	2200      	movs	r2, #0
    6ec2:	4698      	mov	r8, r3
    6ec4:	2100      	movs	r1, #0
    6ec6:	0312      	lsls	r2, r2, #12
    6ec8:	0b13      	lsrs	r3, r2, #12
    6eca:	0d0a      	lsrs	r2, r1, #20
    6ecc:	0512      	lsls	r2, r2, #20
    6ece:	431a      	orrs	r2, r3
    6ed0:	0523      	lsls	r3, r4, #20
    6ed2:	4c12      	ldr	r4, [pc, #72]	; (6f1c <__aeabi_ddiv+0x1f4>)
    6ed4:	4640      	mov	r0, r8
    6ed6:	4022      	ands	r2, r4
    6ed8:	4313      	orrs	r3, r2
    6eda:	4662      	mov	r2, ip
    6edc:	005b      	lsls	r3, r3, #1
    6ede:	07d2      	lsls	r2, r2, #31
    6ee0:	085b      	lsrs	r3, r3, #1
    6ee2:	4313      	orrs	r3, r2
    6ee4:	0019      	movs	r1, r3
    6ee6:	b007      	add	sp, #28
    6ee8:	bc3c      	pop	{r2, r3, r4, r5}
    6eea:	4690      	mov	r8, r2
    6eec:	4699      	mov	r9, r3
    6eee:	46a2      	mov	sl, r4
    6ef0:	46ab      	mov	fp, r5
    6ef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6ef4:	2300      	movs	r3, #0
    6ef6:	2280      	movs	r2, #128	; 0x80
    6ef8:	469c      	mov	ip, r3
    6efa:	0312      	lsls	r2, r2, #12
    6efc:	4698      	mov	r8, r3
    6efe:	4c03      	ldr	r4, [pc, #12]	; (6f0c <__aeabi_ddiv+0x1e4>)
    6f00:	e7e0      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    6f02:	2300      	movs	r3, #0
    6f04:	4c01      	ldr	r4, [pc, #4]	; (6f0c <__aeabi_ddiv+0x1e4>)
    6f06:	2200      	movs	r2, #0
    6f08:	4698      	mov	r8, r3
    6f0a:	e7db      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    6f0c:	000007ff 	.word	0x000007ff
    6f10:	fffffc01 	.word	0xfffffc01
    6f14:	0000814c 	.word	0x0000814c
    6f18:	fffffc0d 	.word	0xfffffc0d
    6f1c:	800fffff 	.word	0x800fffff
    6f20:	45d9      	cmp	r9, fp
    6f22:	d900      	bls.n	6f26 <__aeabi_ddiv+0x1fe>
    6f24:	e139      	b.n	719a <__aeabi_ddiv+0x472>
    6f26:	d100      	bne.n	6f2a <__aeabi_ddiv+0x202>
    6f28:	e134      	b.n	7194 <__aeabi_ddiv+0x46c>
    6f2a:	2300      	movs	r3, #0
    6f2c:	4646      	mov	r6, r8
    6f2e:	464d      	mov	r5, r9
    6f30:	469a      	mov	sl, r3
    6f32:	3c01      	subs	r4, #1
    6f34:	465b      	mov	r3, fp
    6f36:	0e0a      	lsrs	r2, r1, #24
    6f38:	021b      	lsls	r3, r3, #8
    6f3a:	431a      	orrs	r2, r3
    6f3c:	020b      	lsls	r3, r1, #8
    6f3e:	0c17      	lsrs	r7, r2, #16
    6f40:	9303      	str	r3, [sp, #12]
    6f42:	0413      	lsls	r3, r2, #16
    6f44:	0c1b      	lsrs	r3, r3, #16
    6f46:	0039      	movs	r1, r7
    6f48:	0028      	movs	r0, r5
    6f4a:	4690      	mov	r8, r2
    6f4c:	9301      	str	r3, [sp, #4]
    6f4e:	f7fe fed3 	bl	5cf8 <__udivsi3>
    6f52:	0002      	movs	r2, r0
    6f54:	9b01      	ldr	r3, [sp, #4]
    6f56:	4683      	mov	fp, r0
    6f58:	435a      	muls	r2, r3
    6f5a:	0028      	movs	r0, r5
    6f5c:	0039      	movs	r1, r7
    6f5e:	4691      	mov	r9, r2
    6f60:	f7fe ff50 	bl	5e04 <__aeabi_uidivmod>
    6f64:	0c35      	lsrs	r5, r6, #16
    6f66:	0409      	lsls	r1, r1, #16
    6f68:	430d      	orrs	r5, r1
    6f6a:	45a9      	cmp	r9, r5
    6f6c:	d90d      	bls.n	6f8a <__aeabi_ddiv+0x262>
    6f6e:	465b      	mov	r3, fp
    6f70:	4445      	add	r5, r8
    6f72:	3b01      	subs	r3, #1
    6f74:	45a8      	cmp	r8, r5
    6f76:	d900      	bls.n	6f7a <__aeabi_ddiv+0x252>
    6f78:	e13a      	b.n	71f0 <__aeabi_ddiv+0x4c8>
    6f7a:	45a9      	cmp	r9, r5
    6f7c:	d800      	bhi.n	6f80 <__aeabi_ddiv+0x258>
    6f7e:	e137      	b.n	71f0 <__aeabi_ddiv+0x4c8>
    6f80:	2302      	movs	r3, #2
    6f82:	425b      	negs	r3, r3
    6f84:	469c      	mov	ip, r3
    6f86:	4445      	add	r5, r8
    6f88:	44e3      	add	fp, ip
    6f8a:	464b      	mov	r3, r9
    6f8c:	1aeb      	subs	r3, r5, r3
    6f8e:	0039      	movs	r1, r7
    6f90:	0018      	movs	r0, r3
    6f92:	9304      	str	r3, [sp, #16]
    6f94:	f7fe feb0 	bl	5cf8 <__udivsi3>
    6f98:	9b01      	ldr	r3, [sp, #4]
    6f9a:	0005      	movs	r5, r0
    6f9c:	4343      	muls	r3, r0
    6f9e:	0039      	movs	r1, r7
    6fa0:	9804      	ldr	r0, [sp, #16]
    6fa2:	4699      	mov	r9, r3
    6fa4:	f7fe ff2e 	bl	5e04 <__aeabi_uidivmod>
    6fa8:	0433      	lsls	r3, r6, #16
    6faa:	0409      	lsls	r1, r1, #16
    6fac:	0c1b      	lsrs	r3, r3, #16
    6fae:	430b      	orrs	r3, r1
    6fb0:	4599      	cmp	r9, r3
    6fb2:	d909      	bls.n	6fc8 <__aeabi_ddiv+0x2a0>
    6fb4:	4443      	add	r3, r8
    6fb6:	1e6a      	subs	r2, r5, #1
    6fb8:	4598      	cmp	r8, r3
    6fba:	d900      	bls.n	6fbe <__aeabi_ddiv+0x296>
    6fbc:	e11a      	b.n	71f4 <__aeabi_ddiv+0x4cc>
    6fbe:	4599      	cmp	r9, r3
    6fc0:	d800      	bhi.n	6fc4 <__aeabi_ddiv+0x29c>
    6fc2:	e117      	b.n	71f4 <__aeabi_ddiv+0x4cc>
    6fc4:	3d02      	subs	r5, #2
    6fc6:	4443      	add	r3, r8
    6fc8:	464a      	mov	r2, r9
    6fca:	1a9b      	subs	r3, r3, r2
    6fcc:	465a      	mov	r2, fp
    6fce:	0412      	lsls	r2, r2, #16
    6fd0:	432a      	orrs	r2, r5
    6fd2:	9903      	ldr	r1, [sp, #12]
    6fd4:	4693      	mov	fp, r2
    6fd6:	0c10      	lsrs	r0, r2, #16
    6fd8:	0c0a      	lsrs	r2, r1, #16
    6fda:	4691      	mov	r9, r2
    6fdc:	0409      	lsls	r1, r1, #16
    6fde:	465a      	mov	r2, fp
    6fe0:	0c09      	lsrs	r1, r1, #16
    6fe2:	464e      	mov	r6, r9
    6fe4:	000d      	movs	r5, r1
    6fe6:	0412      	lsls	r2, r2, #16
    6fe8:	0c12      	lsrs	r2, r2, #16
    6fea:	4345      	muls	r5, r0
    6fec:	9105      	str	r1, [sp, #20]
    6fee:	4351      	muls	r1, r2
    6ff0:	4372      	muls	r2, r6
    6ff2:	4370      	muls	r0, r6
    6ff4:	1952      	adds	r2, r2, r5
    6ff6:	0c0e      	lsrs	r6, r1, #16
    6ff8:	18b2      	adds	r2, r6, r2
    6ffa:	4295      	cmp	r5, r2
    6ffc:	d903      	bls.n	7006 <__aeabi_ddiv+0x2de>
    6ffe:	2580      	movs	r5, #128	; 0x80
    7000:	026d      	lsls	r5, r5, #9
    7002:	46ac      	mov	ip, r5
    7004:	4460      	add	r0, ip
    7006:	0c15      	lsrs	r5, r2, #16
    7008:	0409      	lsls	r1, r1, #16
    700a:	0412      	lsls	r2, r2, #16
    700c:	0c09      	lsrs	r1, r1, #16
    700e:	1828      	adds	r0, r5, r0
    7010:	1852      	adds	r2, r2, r1
    7012:	4283      	cmp	r3, r0
    7014:	d200      	bcs.n	7018 <__aeabi_ddiv+0x2f0>
    7016:	e0ce      	b.n	71b6 <__aeabi_ddiv+0x48e>
    7018:	d100      	bne.n	701c <__aeabi_ddiv+0x2f4>
    701a:	e0c8      	b.n	71ae <__aeabi_ddiv+0x486>
    701c:	1a1d      	subs	r5, r3, r0
    701e:	4653      	mov	r3, sl
    7020:	1a9e      	subs	r6, r3, r2
    7022:	45b2      	cmp	sl, r6
    7024:	4192      	sbcs	r2, r2
    7026:	4252      	negs	r2, r2
    7028:	1aab      	subs	r3, r5, r2
    702a:	469a      	mov	sl, r3
    702c:	4598      	cmp	r8, r3
    702e:	d100      	bne.n	7032 <__aeabi_ddiv+0x30a>
    7030:	e117      	b.n	7262 <__aeabi_ddiv+0x53a>
    7032:	0039      	movs	r1, r7
    7034:	0018      	movs	r0, r3
    7036:	f7fe fe5f 	bl	5cf8 <__udivsi3>
    703a:	9b01      	ldr	r3, [sp, #4]
    703c:	0005      	movs	r5, r0
    703e:	4343      	muls	r3, r0
    7040:	0039      	movs	r1, r7
    7042:	4650      	mov	r0, sl
    7044:	9304      	str	r3, [sp, #16]
    7046:	f7fe fedd 	bl	5e04 <__aeabi_uidivmod>
    704a:	9804      	ldr	r0, [sp, #16]
    704c:	040b      	lsls	r3, r1, #16
    704e:	0c31      	lsrs	r1, r6, #16
    7050:	4319      	orrs	r1, r3
    7052:	4288      	cmp	r0, r1
    7054:	d909      	bls.n	706a <__aeabi_ddiv+0x342>
    7056:	4441      	add	r1, r8
    7058:	1e6b      	subs	r3, r5, #1
    705a:	4588      	cmp	r8, r1
    705c:	d900      	bls.n	7060 <__aeabi_ddiv+0x338>
    705e:	e107      	b.n	7270 <__aeabi_ddiv+0x548>
    7060:	4288      	cmp	r0, r1
    7062:	d800      	bhi.n	7066 <__aeabi_ddiv+0x33e>
    7064:	e104      	b.n	7270 <__aeabi_ddiv+0x548>
    7066:	3d02      	subs	r5, #2
    7068:	4441      	add	r1, r8
    706a:	9b04      	ldr	r3, [sp, #16]
    706c:	1acb      	subs	r3, r1, r3
    706e:	0018      	movs	r0, r3
    7070:	0039      	movs	r1, r7
    7072:	9304      	str	r3, [sp, #16]
    7074:	f7fe fe40 	bl	5cf8 <__udivsi3>
    7078:	9b01      	ldr	r3, [sp, #4]
    707a:	4682      	mov	sl, r0
    707c:	4343      	muls	r3, r0
    707e:	0039      	movs	r1, r7
    7080:	9804      	ldr	r0, [sp, #16]
    7082:	9301      	str	r3, [sp, #4]
    7084:	f7fe febe 	bl	5e04 <__aeabi_uidivmod>
    7088:	9801      	ldr	r0, [sp, #4]
    708a:	040b      	lsls	r3, r1, #16
    708c:	0431      	lsls	r1, r6, #16
    708e:	0c09      	lsrs	r1, r1, #16
    7090:	4319      	orrs	r1, r3
    7092:	4288      	cmp	r0, r1
    7094:	d90d      	bls.n	70b2 <__aeabi_ddiv+0x38a>
    7096:	4653      	mov	r3, sl
    7098:	4441      	add	r1, r8
    709a:	3b01      	subs	r3, #1
    709c:	4588      	cmp	r8, r1
    709e:	d900      	bls.n	70a2 <__aeabi_ddiv+0x37a>
    70a0:	e0e8      	b.n	7274 <__aeabi_ddiv+0x54c>
    70a2:	4288      	cmp	r0, r1
    70a4:	d800      	bhi.n	70a8 <__aeabi_ddiv+0x380>
    70a6:	e0e5      	b.n	7274 <__aeabi_ddiv+0x54c>
    70a8:	2302      	movs	r3, #2
    70aa:	425b      	negs	r3, r3
    70ac:	469c      	mov	ip, r3
    70ae:	4441      	add	r1, r8
    70b0:	44e2      	add	sl, ip
    70b2:	9b01      	ldr	r3, [sp, #4]
    70b4:	042d      	lsls	r5, r5, #16
    70b6:	1ace      	subs	r6, r1, r3
    70b8:	4651      	mov	r1, sl
    70ba:	4329      	orrs	r1, r5
    70bc:	9d05      	ldr	r5, [sp, #20]
    70be:	464f      	mov	r7, r9
    70c0:	002a      	movs	r2, r5
    70c2:	040b      	lsls	r3, r1, #16
    70c4:	0c08      	lsrs	r0, r1, #16
    70c6:	0c1b      	lsrs	r3, r3, #16
    70c8:	435a      	muls	r2, r3
    70ca:	4345      	muls	r5, r0
    70cc:	437b      	muls	r3, r7
    70ce:	4378      	muls	r0, r7
    70d0:	195b      	adds	r3, r3, r5
    70d2:	0c17      	lsrs	r7, r2, #16
    70d4:	18fb      	adds	r3, r7, r3
    70d6:	429d      	cmp	r5, r3
    70d8:	d903      	bls.n	70e2 <__aeabi_ddiv+0x3ba>
    70da:	2580      	movs	r5, #128	; 0x80
    70dc:	026d      	lsls	r5, r5, #9
    70de:	46ac      	mov	ip, r5
    70e0:	4460      	add	r0, ip
    70e2:	0c1d      	lsrs	r5, r3, #16
    70e4:	0412      	lsls	r2, r2, #16
    70e6:	041b      	lsls	r3, r3, #16
    70e8:	0c12      	lsrs	r2, r2, #16
    70ea:	1828      	adds	r0, r5, r0
    70ec:	189b      	adds	r3, r3, r2
    70ee:	4286      	cmp	r6, r0
    70f0:	d200      	bcs.n	70f4 <__aeabi_ddiv+0x3cc>
    70f2:	e093      	b.n	721c <__aeabi_ddiv+0x4f4>
    70f4:	d100      	bne.n	70f8 <__aeabi_ddiv+0x3d0>
    70f6:	e08e      	b.n	7216 <__aeabi_ddiv+0x4ee>
    70f8:	2301      	movs	r3, #1
    70fa:	4319      	orrs	r1, r3
    70fc:	4ba0      	ldr	r3, [pc, #640]	; (7380 <__aeabi_ddiv+0x658>)
    70fe:	18e3      	adds	r3, r4, r3
    7100:	2b00      	cmp	r3, #0
    7102:	dc00      	bgt.n	7106 <__aeabi_ddiv+0x3de>
    7104:	e099      	b.n	723a <__aeabi_ddiv+0x512>
    7106:	074a      	lsls	r2, r1, #29
    7108:	d000      	beq.n	710c <__aeabi_ddiv+0x3e4>
    710a:	e09e      	b.n	724a <__aeabi_ddiv+0x522>
    710c:	465a      	mov	r2, fp
    710e:	01d2      	lsls	r2, r2, #7
    7110:	d506      	bpl.n	7120 <__aeabi_ddiv+0x3f8>
    7112:	465a      	mov	r2, fp
    7114:	4b9b      	ldr	r3, [pc, #620]	; (7384 <__aeabi_ddiv+0x65c>)
    7116:	401a      	ands	r2, r3
    7118:	2380      	movs	r3, #128	; 0x80
    711a:	4693      	mov	fp, r2
    711c:	00db      	lsls	r3, r3, #3
    711e:	18e3      	adds	r3, r4, r3
    7120:	4a99      	ldr	r2, [pc, #612]	; (7388 <__aeabi_ddiv+0x660>)
    7122:	4293      	cmp	r3, r2
    7124:	dd68      	ble.n	71f8 <__aeabi_ddiv+0x4d0>
    7126:	2301      	movs	r3, #1
    7128:	9a02      	ldr	r2, [sp, #8]
    712a:	4c98      	ldr	r4, [pc, #608]	; (738c <__aeabi_ddiv+0x664>)
    712c:	401a      	ands	r2, r3
    712e:	2300      	movs	r3, #0
    7130:	4694      	mov	ip, r2
    7132:	4698      	mov	r8, r3
    7134:	2200      	movs	r2, #0
    7136:	e6c5      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    7138:	2280      	movs	r2, #128	; 0x80
    713a:	464b      	mov	r3, r9
    713c:	0312      	lsls	r2, r2, #12
    713e:	4213      	tst	r3, r2
    7140:	d00a      	beq.n	7158 <__aeabi_ddiv+0x430>
    7142:	465b      	mov	r3, fp
    7144:	4213      	tst	r3, r2
    7146:	d106      	bne.n	7156 <__aeabi_ddiv+0x42e>
    7148:	431a      	orrs	r2, r3
    714a:	0312      	lsls	r2, r2, #12
    714c:	0b12      	lsrs	r2, r2, #12
    714e:	46ac      	mov	ip, r5
    7150:	4688      	mov	r8, r1
    7152:	4c8e      	ldr	r4, [pc, #568]	; (738c <__aeabi_ddiv+0x664>)
    7154:	e6b6      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    7156:	464b      	mov	r3, r9
    7158:	431a      	orrs	r2, r3
    715a:	0312      	lsls	r2, r2, #12
    715c:	0b12      	lsrs	r2, r2, #12
    715e:	46bc      	mov	ip, r7
    7160:	4c8a      	ldr	r4, [pc, #552]	; (738c <__aeabi_ddiv+0x664>)
    7162:	e6af      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    7164:	0003      	movs	r3, r0
    7166:	465a      	mov	r2, fp
    7168:	3b28      	subs	r3, #40	; 0x28
    716a:	409a      	lsls	r2, r3
    716c:	2300      	movs	r3, #0
    716e:	4691      	mov	r9, r2
    7170:	4698      	mov	r8, r3
    7172:	e657      	b.n	6e24 <__aeabi_ddiv+0xfc>
    7174:	4658      	mov	r0, fp
    7176:	f7fe ff35 	bl	5fe4 <__clzsi2>
    717a:	3020      	adds	r0, #32
    717c:	e640      	b.n	6e00 <__aeabi_ddiv+0xd8>
    717e:	0003      	movs	r3, r0
    7180:	4652      	mov	r2, sl
    7182:	3b28      	subs	r3, #40	; 0x28
    7184:	409a      	lsls	r2, r3
    7186:	2100      	movs	r1, #0
    7188:	4693      	mov	fp, r2
    718a:	e677      	b.n	6e7c <__aeabi_ddiv+0x154>
    718c:	f7fe ff2a 	bl	5fe4 <__clzsi2>
    7190:	3020      	adds	r0, #32
    7192:	e65f      	b.n	6e54 <__aeabi_ddiv+0x12c>
    7194:	4588      	cmp	r8, r1
    7196:	d200      	bcs.n	719a <__aeabi_ddiv+0x472>
    7198:	e6c7      	b.n	6f2a <__aeabi_ddiv+0x202>
    719a:	464b      	mov	r3, r9
    719c:	07de      	lsls	r6, r3, #31
    719e:	085d      	lsrs	r5, r3, #1
    71a0:	4643      	mov	r3, r8
    71a2:	085b      	lsrs	r3, r3, #1
    71a4:	431e      	orrs	r6, r3
    71a6:	4643      	mov	r3, r8
    71a8:	07db      	lsls	r3, r3, #31
    71aa:	469a      	mov	sl, r3
    71ac:	e6c2      	b.n	6f34 <__aeabi_ddiv+0x20c>
    71ae:	2500      	movs	r5, #0
    71b0:	4592      	cmp	sl, r2
    71b2:	d300      	bcc.n	71b6 <__aeabi_ddiv+0x48e>
    71b4:	e733      	b.n	701e <__aeabi_ddiv+0x2f6>
    71b6:	9e03      	ldr	r6, [sp, #12]
    71b8:	4659      	mov	r1, fp
    71ba:	46b4      	mov	ip, r6
    71bc:	44e2      	add	sl, ip
    71be:	45b2      	cmp	sl, r6
    71c0:	41ad      	sbcs	r5, r5
    71c2:	426d      	negs	r5, r5
    71c4:	4445      	add	r5, r8
    71c6:	18eb      	adds	r3, r5, r3
    71c8:	3901      	subs	r1, #1
    71ca:	4598      	cmp	r8, r3
    71cc:	d207      	bcs.n	71de <__aeabi_ddiv+0x4b6>
    71ce:	4298      	cmp	r0, r3
    71d0:	d900      	bls.n	71d4 <__aeabi_ddiv+0x4ac>
    71d2:	e07f      	b.n	72d4 <__aeabi_ddiv+0x5ac>
    71d4:	d100      	bne.n	71d8 <__aeabi_ddiv+0x4b0>
    71d6:	e0bc      	b.n	7352 <__aeabi_ddiv+0x62a>
    71d8:	1a1d      	subs	r5, r3, r0
    71da:	468b      	mov	fp, r1
    71dc:	e71f      	b.n	701e <__aeabi_ddiv+0x2f6>
    71de:	4598      	cmp	r8, r3
    71e0:	d1fa      	bne.n	71d8 <__aeabi_ddiv+0x4b0>
    71e2:	9d03      	ldr	r5, [sp, #12]
    71e4:	4555      	cmp	r5, sl
    71e6:	d9f2      	bls.n	71ce <__aeabi_ddiv+0x4a6>
    71e8:	4643      	mov	r3, r8
    71ea:	468b      	mov	fp, r1
    71ec:	1a1d      	subs	r5, r3, r0
    71ee:	e716      	b.n	701e <__aeabi_ddiv+0x2f6>
    71f0:	469b      	mov	fp, r3
    71f2:	e6ca      	b.n	6f8a <__aeabi_ddiv+0x262>
    71f4:	0015      	movs	r5, r2
    71f6:	e6e7      	b.n	6fc8 <__aeabi_ddiv+0x2a0>
    71f8:	465a      	mov	r2, fp
    71fa:	08c9      	lsrs	r1, r1, #3
    71fc:	0752      	lsls	r2, r2, #29
    71fe:	430a      	orrs	r2, r1
    7200:	055b      	lsls	r3, r3, #21
    7202:	4690      	mov	r8, r2
    7204:	0d5c      	lsrs	r4, r3, #21
    7206:	465a      	mov	r2, fp
    7208:	2301      	movs	r3, #1
    720a:	9902      	ldr	r1, [sp, #8]
    720c:	0252      	lsls	r2, r2, #9
    720e:	4019      	ands	r1, r3
    7210:	0b12      	lsrs	r2, r2, #12
    7212:	468c      	mov	ip, r1
    7214:	e656      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    7216:	2b00      	cmp	r3, #0
    7218:	d100      	bne.n	721c <__aeabi_ddiv+0x4f4>
    721a:	e76f      	b.n	70fc <__aeabi_ddiv+0x3d4>
    721c:	4446      	add	r6, r8
    721e:	1e4a      	subs	r2, r1, #1
    7220:	45b0      	cmp	r8, r6
    7222:	d929      	bls.n	7278 <__aeabi_ddiv+0x550>
    7224:	0011      	movs	r1, r2
    7226:	4286      	cmp	r6, r0
    7228:	d000      	beq.n	722c <__aeabi_ddiv+0x504>
    722a:	e765      	b.n	70f8 <__aeabi_ddiv+0x3d0>
    722c:	9a03      	ldr	r2, [sp, #12]
    722e:	4293      	cmp	r3, r2
    7230:	d000      	beq.n	7234 <__aeabi_ddiv+0x50c>
    7232:	e761      	b.n	70f8 <__aeabi_ddiv+0x3d0>
    7234:	e762      	b.n	70fc <__aeabi_ddiv+0x3d4>
    7236:	2101      	movs	r1, #1
    7238:	4249      	negs	r1, r1
    723a:	2001      	movs	r0, #1
    723c:	1ac2      	subs	r2, r0, r3
    723e:	2a38      	cmp	r2, #56	; 0x38
    7240:	dd21      	ble.n	7286 <__aeabi_ddiv+0x55e>
    7242:	9b02      	ldr	r3, [sp, #8]
    7244:	4003      	ands	r3, r0
    7246:	469c      	mov	ip, r3
    7248:	e638      	b.n	6ebc <__aeabi_ddiv+0x194>
    724a:	220f      	movs	r2, #15
    724c:	400a      	ands	r2, r1
    724e:	2a04      	cmp	r2, #4
    7250:	d100      	bne.n	7254 <__aeabi_ddiv+0x52c>
    7252:	e75b      	b.n	710c <__aeabi_ddiv+0x3e4>
    7254:	000a      	movs	r2, r1
    7256:	1d11      	adds	r1, r2, #4
    7258:	4291      	cmp	r1, r2
    725a:	4192      	sbcs	r2, r2
    725c:	4252      	negs	r2, r2
    725e:	4493      	add	fp, r2
    7260:	e754      	b.n	710c <__aeabi_ddiv+0x3e4>
    7262:	4b47      	ldr	r3, [pc, #284]	; (7380 <__aeabi_ddiv+0x658>)
    7264:	18e3      	adds	r3, r4, r3
    7266:	2b00      	cmp	r3, #0
    7268:	dde5      	ble.n	7236 <__aeabi_ddiv+0x50e>
    726a:	2201      	movs	r2, #1
    726c:	4252      	negs	r2, r2
    726e:	e7f2      	b.n	7256 <__aeabi_ddiv+0x52e>
    7270:	001d      	movs	r5, r3
    7272:	e6fa      	b.n	706a <__aeabi_ddiv+0x342>
    7274:	469a      	mov	sl, r3
    7276:	e71c      	b.n	70b2 <__aeabi_ddiv+0x38a>
    7278:	42b0      	cmp	r0, r6
    727a:	d839      	bhi.n	72f0 <__aeabi_ddiv+0x5c8>
    727c:	d06e      	beq.n	735c <__aeabi_ddiv+0x634>
    727e:	0011      	movs	r1, r2
    7280:	e73a      	b.n	70f8 <__aeabi_ddiv+0x3d0>
    7282:	9302      	str	r3, [sp, #8]
    7284:	e73a      	b.n	70fc <__aeabi_ddiv+0x3d4>
    7286:	2a1f      	cmp	r2, #31
    7288:	dc3c      	bgt.n	7304 <__aeabi_ddiv+0x5dc>
    728a:	2320      	movs	r3, #32
    728c:	1a9b      	subs	r3, r3, r2
    728e:	000c      	movs	r4, r1
    7290:	4658      	mov	r0, fp
    7292:	4099      	lsls	r1, r3
    7294:	4098      	lsls	r0, r3
    7296:	1e4b      	subs	r3, r1, #1
    7298:	4199      	sbcs	r1, r3
    729a:	465b      	mov	r3, fp
    729c:	40d4      	lsrs	r4, r2
    729e:	40d3      	lsrs	r3, r2
    72a0:	4320      	orrs	r0, r4
    72a2:	4308      	orrs	r0, r1
    72a4:	001a      	movs	r2, r3
    72a6:	0743      	lsls	r3, r0, #29
    72a8:	d009      	beq.n	72be <__aeabi_ddiv+0x596>
    72aa:	230f      	movs	r3, #15
    72ac:	4003      	ands	r3, r0
    72ae:	2b04      	cmp	r3, #4
    72b0:	d005      	beq.n	72be <__aeabi_ddiv+0x596>
    72b2:	0001      	movs	r1, r0
    72b4:	1d08      	adds	r0, r1, #4
    72b6:	4288      	cmp	r0, r1
    72b8:	419b      	sbcs	r3, r3
    72ba:	425b      	negs	r3, r3
    72bc:	18d2      	adds	r2, r2, r3
    72be:	0213      	lsls	r3, r2, #8
    72c0:	d53a      	bpl.n	7338 <__aeabi_ddiv+0x610>
    72c2:	2301      	movs	r3, #1
    72c4:	9a02      	ldr	r2, [sp, #8]
    72c6:	2401      	movs	r4, #1
    72c8:	401a      	ands	r2, r3
    72ca:	2300      	movs	r3, #0
    72cc:	4694      	mov	ip, r2
    72ce:	4698      	mov	r8, r3
    72d0:	2200      	movs	r2, #0
    72d2:	e5f7      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    72d4:	2102      	movs	r1, #2
    72d6:	4249      	negs	r1, r1
    72d8:	468c      	mov	ip, r1
    72da:	9d03      	ldr	r5, [sp, #12]
    72dc:	44e3      	add	fp, ip
    72de:	46ac      	mov	ip, r5
    72e0:	44e2      	add	sl, ip
    72e2:	45aa      	cmp	sl, r5
    72e4:	41ad      	sbcs	r5, r5
    72e6:	426d      	negs	r5, r5
    72e8:	4445      	add	r5, r8
    72ea:	18ed      	adds	r5, r5, r3
    72ec:	1a2d      	subs	r5, r5, r0
    72ee:	e696      	b.n	701e <__aeabi_ddiv+0x2f6>
    72f0:	1e8a      	subs	r2, r1, #2
    72f2:	9903      	ldr	r1, [sp, #12]
    72f4:	004d      	lsls	r5, r1, #1
    72f6:	428d      	cmp	r5, r1
    72f8:	4189      	sbcs	r1, r1
    72fa:	4249      	negs	r1, r1
    72fc:	4441      	add	r1, r8
    72fe:	1876      	adds	r6, r6, r1
    7300:	9503      	str	r5, [sp, #12]
    7302:	e78f      	b.n	7224 <__aeabi_ddiv+0x4fc>
    7304:	201f      	movs	r0, #31
    7306:	4240      	negs	r0, r0
    7308:	1ac3      	subs	r3, r0, r3
    730a:	4658      	mov	r0, fp
    730c:	40d8      	lsrs	r0, r3
    730e:	0003      	movs	r3, r0
    7310:	2a20      	cmp	r2, #32
    7312:	d028      	beq.n	7366 <__aeabi_ddiv+0x63e>
    7314:	2040      	movs	r0, #64	; 0x40
    7316:	465d      	mov	r5, fp
    7318:	1a82      	subs	r2, r0, r2
    731a:	4095      	lsls	r5, r2
    731c:	4329      	orrs	r1, r5
    731e:	1e4a      	subs	r2, r1, #1
    7320:	4191      	sbcs	r1, r2
    7322:	4319      	orrs	r1, r3
    7324:	2307      	movs	r3, #7
    7326:	2200      	movs	r2, #0
    7328:	400b      	ands	r3, r1
    732a:	d009      	beq.n	7340 <__aeabi_ddiv+0x618>
    732c:	230f      	movs	r3, #15
    732e:	2200      	movs	r2, #0
    7330:	400b      	ands	r3, r1
    7332:	0008      	movs	r0, r1
    7334:	2b04      	cmp	r3, #4
    7336:	d1bd      	bne.n	72b4 <__aeabi_ddiv+0x58c>
    7338:	0001      	movs	r1, r0
    733a:	0753      	lsls	r3, r2, #29
    733c:	0252      	lsls	r2, r2, #9
    733e:	0b12      	lsrs	r2, r2, #12
    7340:	08c9      	lsrs	r1, r1, #3
    7342:	4319      	orrs	r1, r3
    7344:	2301      	movs	r3, #1
    7346:	4688      	mov	r8, r1
    7348:	9902      	ldr	r1, [sp, #8]
    734a:	2400      	movs	r4, #0
    734c:	4019      	ands	r1, r3
    734e:	468c      	mov	ip, r1
    7350:	e5b8      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    7352:	4552      	cmp	r2, sl
    7354:	d8be      	bhi.n	72d4 <__aeabi_ddiv+0x5ac>
    7356:	468b      	mov	fp, r1
    7358:	2500      	movs	r5, #0
    735a:	e660      	b.n	701e <__aeabi_ddiv+0x2f6>
    735c:	9d03      	ldr	r5, [sp, #12]
    735e:	429d      	cmp	r5, r3
    7360:	d3c6      	bcc.n	72f0 <__aeabi_ddiv+0x5c8>
    7362:	0011      	movs	r1, r2
    7364:	e762      	b.n	722c <__aeabi_ddiv+0x504>
    7366:	2500      	movs	r5, #0
    7368:	e7d8      	b.n	731c <__aeabi_ddiv+0x5f4>
    736a:	2280      	movs	r2, #128	; 0x80
    736c:	465b      	mov	r3, fp
    736e:	0312      	lsls	r2, r2, #12
    7370:	431a      	orrs	r2, r3
    7372:	9b01      	ldr	r3, [sp, #4]
    7374:	0312      	lsls	r2, r2, #12
    7376:	0b12      	lsrs	r2, r2, #12
    7378:	469c      	mov	ip, r3
    737a:	4688      	mov	r8, r1
    737c:	4c03      	ldr	r4, [pc, #12]	; (738c <__aeabi_ddiv+0x664>)
    737e:	e5a1      	b.n	6ec4 <__aeabi_ddiv+0x19c>
    7380:	000003ff 	.word	0x000003ff
    7384:	feffffff 	.word	0xfeffffff
    7388:	000007fe 	.word	0x000007fe
    738c:	000007ff 	.word	0x000007ff

00007390 <__aeabi_dsub>:
    7390:	b5f0      	push	{r4, r5, r6, r7, lr}
    7392:	4646      	mov	r6, r8
    7394:	46d6      	mov	lr, sl
    7396:	464f      	mov	r7, r9
    7398:	030c      	lsls	r4, r1, #12
    739a:	b5c0      	push	{r6, r7, lr}
    739c:	0fcd      	lsrs	r5, r1, #31
    739e:	004e      	lsls	r6, r1, #1
    73a0:	0a61      	lsrs	r1, r4, #9
    73a2:	0f44      	lsrs	r4, r0, #29
    73a4:	430c      	orrs	r4, r1
    73a6:	00c1      	lsls	r1, r0, #3
    73a8:	0058      	lsls	r0, r3, #1
    73aa:	0d40      	lsrs	r0, r0, #21
    73ac:	4684      	mov	ip, r0
    73ae:	468a      	mov	sl, r1
    73b0:	000f      	movs	r7, r1
    73b2:	0319      	lsls	r1, r3, #12
    73b4:	0f50      	lsrs	r0, r2, #29
    73b6:	0a49      	lsrs	r1, r1, #9
    73b8:	4301      	orrs	r1, r0
    73ba:	48c6      	ldr	r0, [pc, #792]	; (76d4 <__aeabi_dsub+0x344>)
    73bc:	0d76      	lsrs	r6, r6, #21
    73be:	46a8      	mov	r8, r5
    73c0:	0fdb      	lsrs	r3, r3, #31
    73c2:	00d2      	lsls	r2, r2, #3
    73c4:	4584      	cmp	ip, r0
    73c6:	d100      	bne.n	73ca <__aeabi_dsub+0x3a>
    73c8:	e0d8      	b.n	757c <__aeabi_dsub+0x1ec>
    73ca:	2001      	movs	r0, #1
    73cc:	4043      	eors	r3, r0
    73ce:	42ab      	cmp	r3, r5
    73d0:	d100      	bne.n	73d4 <__aeabi_dsub+0x44>
    73d2:	e0a6      	b.n	7522 <__aeabi_dsub+0x192>
    73d4:	4660      	mov	r0, ip
    73d6:	1a35      	subs	r5, r6, r0
    73d8:	2d00      	cmp	r5, #0
    73da:	dc00      	bgt.n	73de <__aeabi_dsub+0x4e>
    73dc:	e105      	b.n	75ea <__aeabi_dsub+0x25a>
    73de:	2800      	cmp	r0, #0
    73e0:	d110      	bne.n	7404 <__aeabi_dsub+0x74>
    73e2:	000b      	movs	r3, r1
    73e4:	4313      	orrs	r3, r2
    73e6:	d100      	bne.n	73ea <__aeabi_dsub+0x5a>
    73e8:	e0d7      	b.n	759a <__aeabi_dsub+0x20a>
    73ea:	1e6b      	subs	r3, r5, #1
    73ec:	2b00      	cmp	r3, #0
    73ee:	d000      	beq.n	73f2 <__aeabi_dsub+0x62>
    73f0:	e14b      	b.n	768a <__aeabi_dsub+0x2fa>
    73f2:	4653      	mov	r3, sl
    73f4:	1a9f      	subs	r7, r3, r2
    73f6:	45ba      	cmp	sl, r7
    73f8:	4180      	sbcs	r0, r0
    73fa:	1a64      	subs	r4, r4, r1
    73fc:	4240      	negs	r0, r0
    73fe:	1a24      	subs	r4, r4, r0
    7400:	2601      	movs	r6, #1
    7402:	e01e      	b.n	7442 <__aeabi_dsub+0xb2>
    7404:	4bb3      	ldr	r3, [pc, #716]	; (76d4 <__aeabi_dsub+0x344>)
    7406:	429e      	cmp	r6, r3
    7408:	d048      	beq.n	749c <__aeabi_dsub+0x10c>
    740a:	2380      	movs	r3, #128	; 0x80
    740c:	041b      	lsls	r3, r3, #16
    740e:	4319      	orrs	r1, r3
    7410:	2d38      	cmp	r5, #56	; 0x38
    7412:	dd00      	ble.n	7416 <__aeabi_dsub+0x86>
    7414:	e119      	b.n	764a <__aeabi_dsub+0x2ba>
    7416:	2d1f      	cmp	r5, #31
    7418:	dd00      	ble.n	741c <__aeabi_dsub+0x8c>
    741a:	e14c      	b.n	76b6 <__aeabi_dsub+0x326>
    741c:	2320      	movs	r3, #32
    741e:	000f      	movs	r7, r1
    7420:	1b5b      	subs	r3, r3, r5
    7422:	0010      	movs	r0, r2
    7424:	409a      	lsls	r2, r3
    7426:	409f      	lsls	r7, r3
    7428:	40e8      	lsrs	r0, r5
    742a:	1e53      	subs	r3, r2, #1
    742c:	419a      	sbcs	r2, r3
    742e:	40e9      	lsrs	r1, r5
    7430:	4307      	orrs	r7, r0
    7432:	4317      	orrs	r7, r2
    7434:	4653      	mov	r3, sl
    7436:	1bdf      	subs	r7, r3, r7
    7438:	1a61      	subs	r1, r4, r1
    743a:	45ba      	cmp	sl, r7
    743c:	41a4      	sbcs	r4, r4
    743e:	4264      	negs	r4, r4
    7440:	1b0c      	subs	r4, r1, r4
    7442:	0223      	lsls	r3, r4, #8
    7444:	d400      	bmi.n	7448 <__aeabi_dsub+0xb8>
    7446:	e0c5      	b.n	75d4 <__aeabi_dsub+0x244>
    7448:	0264      	lsls	r4, r4, #9
    744a:	0a65      	lsrs	r5, r4, #9
    744c:	2d00      	cmp	r5, #0
    744e:	d100      	bne.n	7452 <__aeabi_dsub+0xc2>
    7450:	e0f6      	b.n	7640 <__aeabi_dsub+0x2b0>
    7452:	0028      	movs	r0, r5
    7454:	f7fe fdc6 	bl	5fe4 <__clzsi2>
    7458:	0003      	movs	r3, r0
    745a:	3b08      	subs	r3, #8
    745c:	2b1f      	cmp	r3, #31
    745e:	dd00      	ble.n	7462 <__aeabi_dsub+0xd2>
    7460:	e0e9      	b.n	7636 <__aeabi_dsub+0x2a6>
    7462:	2220      	movs	r2, #32
    7464:	003c      	movs	r4, r7
    7466:	1ad2      	subs	r2, r2, r3
    7468:	409d      	lsls	r5, r3
    746a:	40d4      	lsrs	r4, r2
    746c:	409f      	lsls	r7, r3
    746e:	4325      	orrs	r5, r4
    7470:	429e      	cmp	r6, r3
    7472:	dd00      	ble.n	7476 <__aeabi_dsub+0xe6>
    7474:	e0db      	b.n	762e <__aeabi_dsub+0x29e>
    7476:	1b9e      	subs	r6, r3, r6
    7478:	1c73      	adds	r3, r6, #1
    747a:	2b1f      	cmp	r3, #31
    747c:	dd00      	ble.n	7480 <__aeabi_dsub+0xf0>
    747e:	e10a      	b.n	7696 <__aeabi_dsub+0x306>
    7480:	2220      	movs	r2, #32
    7482:	0038      	movs	r0, r7
    7484:	1ad2      	subs	r2, r2, r3
    7486:	0029      	movs	r1, r5
    7488:	4097      	lsls	r7, r2
    748a:	002c      	movs	r4, r5
    748c:	4091      	lsls	r1, r2
    748e:	40d8      	lsrs	r0, r3
    7490:	1e7a      	subs	r2, r7, #1
    7492:	4197      	sbcs	r7, r2
    7494:	40dc      	lsrs	r4, r3
    7496:	2600      	movs	r6, #0
    7498:	4301      	orrs	r1, r0
    749a:	430f      	orrs	r7, r1
    749c:	077b      	lsls	r3, r7, #29
    749e:	d009      	beq.n	74b4 <__aeabi_dsub+0x124>
    74a0:	230f      	movs	r3, #15
    74a2:	403b      	ands	r3, r7
    74a4:	2b04      	cmp	r3, #4
    74a6:	d005      	beq.n	74b4 <__aeabi_dsub+0x124>
    74a8:	1d3b      	adds	r3, r7, #4
    74aa:	42bb      	cmp	r3, r7
    74ac:	41bf      	sbcs	r7, r7
    74ae:	427f      	negs	r7, r7
    74b0:	19e4      	adds	r4, r4, r7
    74b2:	001f      	movs	r7, r3
    74b4:	0223      	lsls	r3, r4, #8
    74b6:	d525      	bpl.n	7504 <__aeabi_dsub+0x174>
    74b8:	4b86      	ldr	r3, [pc, #536]	; (76d4 <__aeabi_dsub+0x344>)
    74ba:	3601      	adds	r6, #1
    74bc:	429e      	cmp	r6, r3
    74be:	d100      	bne.n	74c2 <__aeabi_dsub+0x132>
    74c0:	e0af      	b.n	7622 <__aeabi_dsub+0x292>
    74c2:	4b85      	ldr	r3, [pc, #532]	; (76d8 <__aeabi_dsub+0x348>)
    74c4:	2501      	movs	r5, #1
    74c6:	401c      	ands	r4, r3
    74c8:	4643      	mov	r3, r8
    74ca:	0762      	lsls	r2, r4, #29
    74cc:	08ff      	lsrs	r7, r7, #3
    74ce:	0264      	lsls	r4, r4, #9
    74d0:	0576      	lsls	r6, r6, #21
    74d2:	4317      	orrs	r7, r2
    74d4:	0b24      	lsrs	r4, r4, #12
    74d6:	0d76      	lsrs	r6, r6, #21
    74d8:	401d      	ands	r5, r3
    74da:	2100      	movs	r1, #0
    74dc:	0324      	lsls	r4, r4, #12
    74de:	0b23      	lsrs	r3, r4, #12
    74e0:	0d0c      	lsrs	r4, r1, #20
    74e2:	4a7e      	ldr	r2, [pc, #504]	; (76dc <__aeabi_dsub+0x34c>)
    74e4:	0524      	lsls	r4, r4, #20
    74e6:	431c      	orrs	r4, r3
    74e8:	4014      	ands	r4, r2
    74ea:	0533      	lsls	r3, r6, #20
    74ec:	4323      	orrs	r3, r4
    74ee:	005b      	lsls	r3, r3, #1
    74f0:	07ed      	lsls	r5, r5, #31
    74f2:	085b      	lsrs	r3, r3, #1
    74f4:	432b      	orrs	r3, r5
    74f6:	0038      	movs	r0, r7
    74f8:	0019      	movs	r1, r3
    74fa:	bc1c      	pop	{r2, r3, r4}
    74fc:	4690      	mov	r8, r2
    74fe:	4699      	mov	r9, r3
    7500:	46a2      	mov	sl, r4
    7502:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7504:	2501      	movs	r5, #1
    7506:	4643      	mov	r3, r8
    7508:	0762      	lsls	r2, r4, #29
    750a:	08ff      	lsrs	r7, r7, #3
    750c:	4317      	orrs	r7, r2
    750e:	08e4      	lsrs	r4, r4, #3
    7510:	401d      	ands	r5, r3
    7512:	4b70      	ldr	r3, [pc, #448]	; (76d4 <__aeabi_dsub+0x344>)
    7514:	429e      	cmp	r6, r3
    7516:	d036      	beq.n	7586 <__aeabi_dsub+0x1f6>
    7518:	0324      	lsls	r4, r4, #12
    751a:	0576      	lsls	r6, r6, #21
    751c:	0b24      	lsrs	r4, r4, #12
    751e:	0d76      	lsrs	r6, r6, #21
    7520:	e7db      	b.n	74da <__aeabi_dsub+0x14a>
    7522:	4663      	mov	r3, ip
    7524:	1af3      	subs	r3, r6, r3
    7526:	2b00      	cmp	r3, #0
    7528:	dc00      	bgt.n	752c <__aeabi_dsub+0x19c>
    752a:	e094      	b.n	7656 <__aeabi_dsub+0x2c6>
    752c:	4660      	mov	r0, ip
    752e:	2800      	cmp	r0, #0
    7530:	d035      	beq.n	759e <__aeabi_dsub+0x20e>
    7532:	4868      	ldr	r0, [pc, #416]	; (76d4 <__aeabi_dsub+0x344>)
    7534:	4286      	cmp	r6, r0
    7536:	d0b1      	beq.n	749c <__aeabi_dsub+0x10c>
    7538:	2780      	movs	r7, #128	; 0x80
    753a:	043f      	lsls	r7, r7, #16
    753c:	4339      	orrs	r1, r7
    753e:	2b38      	cmp	r3, #56	; 0x38
    7540:	dc00      	bgt.n	7544 <__aeabi_dsub+0x1b4>
    7542:	e0fd      	b.n	7740 <__aeabi_dsub+0x3b0>
    7544:	430a      	orrs	r2, r1
    7546:	0017      	movs	r7, r2
    7548:	2100      	movs	r1, #0
    754a:	1e7a      	subs	r2, r7, #1
    754c:	4197      	sbcs	r7, r2
    754e:	4457      	add	r7, sl
    7550:	4557      	cmp	r7, sl
    7552:	4180      	sbcs	r0, r0
    7554:	1909      	adds	r1, r1, r4
    7556:	4244      	negs	r4, r0
    7558:	190c      	adds	r4, r1, r4
    755a:	0223      	lsls	r3, r4, #8
    755c:	d53a      	bpl.n	75d4 <__aeabi_dsub+0x244>
    755e:	4b5d      	ldr	r3, [pc, #372]	; (76d4 <__aeabi_dsub+0x344>)
    7560:	3601      	adds	r6, #1
    7562:	429e      	cmp	r6, r3
    7564:	d100      	bne.n	7568 <__aeabi_dsub+0x1d8>
    7566:	e14b      	b.n	7800 <__aeabi_dsub+0x470>
    7568:	2201      	movs	r2, #1
    756a:	4b5b      	ldr	r3, [pc, #364]	; (76d8 <__aeabi_dsub+0x348>)
    756c:	401c      	ands	r4, r3
    756e:	087b      	lsrs	r3, r7, #1
    7570:	4017      	ands	r7, r2
    7572:	431f      	orrs	r7, r3
    7574:	07e2      	lsls	r2, r4, #31
    7576:	4317      	orrs	r7, r2
    7578:	0864      	lsrs	r4, r4, #1
    757a:	e78f      	b.n	749c <__aeabi_dsub+0x10c>
    757c:	0008      	movs	r0, r1
    757e:	4310      	orrs	r0, r2
    7580:	d000      	beq.n	7584 <__aeabi_dsub+0x1f4>
    7582:	e724      	b.n	73ce <__aeabi_dsub+0x3e>
    7584:	e721      	b.n	73ca <__aeabi_dsub+0x3a>
    7586:	0023      	movs	r3, r4
    7588:	433b      	orrs	r3, r7
    758a:	d100      	bne.n	758e <__aeabi_dsub+0x1fe>
    758c:	e1b9      	b.n	7902 <__aeabi_dsub+0x572>
    758e:	2280      	movs	r2, #128	; 0x80
    7590:	0312      	lsls	r2, r2, #12
    7592:	4314      	orrs	r4, r2
    7594:	0324      	lsls	r4, r4, #12
    7596:	0b24      	lsrs	r4, r4, #12
    7598:	e79f      	b.n	74da <__aeabi_dsub+0x14a>
    759a:	002e      	movs	r6, r5
    759c:	e77e      	b.n	749c <__aeabi_dsub+0x10c>
    759e:	0008      	movs	r0, r1
    75a0:	4310      	orrs	r0, r2
    75a2:	d100      	bne.n	75a6 <__aeabi_dsub+0x216>
    75a4:	e0ca      	b.n	773c <__aeabi_dsub+0x3ac>
    75a6:	1e58      	subs	r0, r3, #1
    75a8:	4684      	mov	ip, r0
    75aa:	2800      	cmp	r0, #0
    75ac:	d000      	beq.n	75b0 <__aeabi_dsub+0x220>
    75ae:	e0e7      	b.n	7780 <__aeabi_dsub+0x3f0>
    75b0:	4452      	add	r2, sl
    75b2:	4552      	cmp	r2, sl
    75b4:	4180      	sbcs	r0, r0
    75b6:	1864      	adds	r4, r4, r1
    75b8:	4240      	negs	r0, r0
    75ba:	1824      	adds	r4, r4, r0
    75bc:	0017      	movs	r7, r2
    75be:	2601      	movs	r6, #1
    75c0:	0223      	lsls	r3, r4, #8
    75c2:	d507      	bpl.n	75d4 <__aeabi_dsub+0x244>
    75c4:	2602      	movs	r6, #2
    75c6:	e7cf      	b.n	7568 <__aeabi_dsub+0x1d8>
    75c8:	4664      	mov	r4, ip
    75ca:	432c      	orrs	r4, r5
    75cc:	d100      	bne.n	75d0 <__aeabi_dsub+0x240>
    75ce:	e1b3      	b.n	7938 <__aeabi_dsub+0x5a8>
    75d0:	002c      	movs	r4, r5
    75d2:	4667      	mov	r7, ip
    75d4:	077b      	lsls	r3, r7, #29
    75d6:	d000      	beq.n	75da <__aeabi_dsub+0x24a>
    75d8:	e762      	b.n	74a0 <__aeabi_dsub+0x110>
    75da:	0763      	lsls	r3, r4, #29
    75dc:	08ff      	lsrs	r7, r7, #3
    75de:	431f      	orrs	r7, r3
    75e0:	2501      	movs	r5, #1
    75e2:	4643      	mov	r3, r8
    75e4:	08e4      	lsrs	r4, r4, #3
    75e6:	401d      	ands	r5, r3
    75e8:	e793      	b.n	7512 <__aeabi_dsub+0x182>
    75ea:	2d00      	cmp	r5, #0
    75ec:	d178      	bne.n	76e0 <__aeabi_dsub+0x350>
    75ee:	1c75      	adds	r5, r6, #1
    75f0:	056d      	lsls	r5, r5, #21
    75f2:	0d6d      	lsrs	r5, r5, #21
    75f4:	2d01      	cmp	r5, #1
    75f6:	dc00      	bgt.n	75fa <__aeabi_dsub+0x26a>
    75f8:	e0f2      	b.n	77e0 <__aeabi_dsub+0x450>
    75fa:	4650      	mov	r0, sl
    75fc:	1a80      	subs	r0, r0, r2
    75fe:	4582      	cmp	sl, r0
    7600:	41bf      	sbcs	r7, r7
    7602:	1a65      	subs	r5, r4, r1
    7604:	427f      	negs	r7, r7
    7606:	1bed      	subs	r5, r5, r7
    7608:	4684      	mov	ip, r0
    760a:	0228      	lsls	r0, r5, #8
    760c:	d400      	bmi.n	7610 <__aeabi_dsub+0x280>
    760e:	e08c      	b.n	772a <__aeabi_dsub+0x39a>
    7610:	4650      	mov	r0, sl
    7612:	1a17      	subs	r7, r2, r0
    7614:	42ba      	cmp	r2, r7
    7616:	4192      	sbcs	r2, r2
    7618:	1b0c      	subs	r4, r1, r4
    761a:	4255      	negs	r5, r2
    761c:	1b65      	subs	r5, r4, r5
    761e:	4698      	mov	r8, r3
    7620:	e714      	b.n	744c <__aeabi_dsub+0xbc>
    7622:	2501      	movs	r5, #1
    7624:	4643      	mov	r3, r8
    7626:	2400      	movs	r4, #0
    7628:	401d      	ands	r5, r3
    762a:	2700      	movs	r7, #0
    762c:	e755      	b.n	74da <__aeabi_dsub+0x14a>
    762e:	4c2a      	ldr	r4, [pc, #168]	; (76d8 <__aeabi_dsub+0x348>)
    7630:	1af6      	subs	r6, r6, r3
    7632:	402c      	ands	r4, r5
    7634:	e732      	b.n	749c <__aeabi_dsub+0x10c>
    7636:	003d      	movs	r5, r7
    7638:	3828      	subs	r0, #40	; 0x28
    763a:	4085      	lsls	r5, r0
    763c:	2700      	movs	r7, #0
    763e:	e717      	b.n	7470 <__aeabi_dsub+0xe0>
    7640:	0038      	movs	r0, r7
    7642:	f7fe fccf 	bl	5fe4 <__clzsi2>
    7646:	3020      	adds	r0, #32
    7648:	e706      	b.n	7458 <__aeabi_dsub+0xc8>
    764a:	430a      	orrs	r2, r1
    764c:	0017      	movs	r7, r2
    764e:	2100      	movs	r1, #0
    7650:	1e7a      	subs	r2, r7, #1
    7652:	4197      	sbcs	r7, r2
    7654:	e6ee      	b.n	7434 <__aeabi_dsub+0xa4>
    7656:	2b00      	cmp	r3, #0
    7658:	d000      	beq.n	765c <__aeabi_dsub+0x2cc>
    765a:	e0e5      	b.n	7828 <__aeabi_dsub+0x498>
    765c:	1c73      	adds	r3, r6, #1
    765e:	469c      	mov	ip, r3
    7660:	055b      	lsls	r3, r3, #21
    7662:	0d5b      	lsrs	r3, r3, #21
    7664:	2b01      	cmp	r3, #1
    7666:	dc00      	bgt.n	766a <__aeabi_dsub+0x2da>
    7668:	e09f      	b.n	77aa <__aeabi_dsub+0x41a>
    766a:	4b1a      	ldr	r3, [pc, #104]	; (76d4 <__aeabi_dsub+0x344>)
    766c:	459c      	cmp	ip, r3
    766e:	d100      	bne.n	7672 <__aeabi_dsub+0x2e2>
    7670:	e0c5      	b.n	77fe <__aeabi_dsub+0x46e>
    7672:	4452      	add	r2, sl
    7674:	4552      	cmp	r2, sl
    7676:	4180      	sbcs	r0, r0
    7678:	1864      	adds	r4, r4, r1
    767a:	4240      	negs	r0, r0
    767c:	1824      	adds	r4, r4, r0
    767e:	07e7      	lsls	r7, r4, #31
    7680:	0852      	lsrs	r2, r2, #1
    7682:	4317      	orrs	r7, r2
    7684:	0864      	lsrs	r4, r4, #1
    7686:	4666      	mov	r6, ip
    7688:	e708      	b.n	749c <__aeabi_dsub+0x10c>
    768a:	4812      	ldr	r0, [pc, #72]	; (76d4 <__aeabi_dsub+0x344>)
    768c:	4285      	cmp	r5, r0
    768e:	d100      	bne.n	7692 <__aeabi_dsub+0x302>
    7690:	e085      	b.n	779e <__aeabi_dsub+0x40e>
    7692:	001d      	movs	r5, r3
    7694:	e6bc      	b.n	7410 <__aeabi_dsub+0x80>
    7696:	0029      	movs	r1, r5
    7698:	3e1f      	subs	r6, #31
    769a:	40f1      	lsrs	r1, r6
    769c:	2b20      	cmp	r3, #32
    769e:	d100      	bne.n	76a2 <__aeabi_dsub+0x312>
    76a0:	e07f      	b.n	77a2 <__aeabi_dsub+0x412>
    76a2:	2240      	movs	r2, #64	; 0x40
    76a4:	1ad3      	subs	r3, r2, r3
    76a6:	409d      	lsls	r5, r3
    76a8:	432f      	orrs	r7, r5
    76aa:	1e7d      	subs	r5, r7, #1
    76ac:	41af      	sbcs	r7, r5
    76ae:	2400      	movs	r4, #0
    76b0:	430f      	orrs	r7, r1
    76b2:	2600      	movs	r6, #0
    76b4:	e78e      	b.n	75d4 <__aeabi_dsub+0x244>
    76b6:	002b      	movs	r3, r5
    76b8:	000f      	movs	r7, r1
    76ba:	3b20      	subs	r3, #32
    76bc:	40df      	lsrs	r7, r3
    76be:	2d20      	cmp	r5, #32
    76c0:	d071      	beq.n	77a6 <__aeabi_dsub+0x416>
    76c2:	2340      	movs	r3, #64	; 0x40
    76c4:	1b5d      	subs	r5, r3, r5
    76c6:	40a9      	lsls	r1, r5
    76c8:	430a      	orrs	r2, r1
    76ca:	1e51      	subs	r1, r2, #1
    76cc:	418a      	sbcs	r2, r1
    76ce:	2100      	movs	r1, #0
    76d0:	4317      	orrs	r7, r2
    76d2:	e6af      	b.n	7434 <__aeabi_dsub+0xa4>
    76d4:	000007ff 	.word	0x000007ff
    76d8:	ff7fffff 	.word	0xff7fffff
    76dc:	800fffff 	.word	0x800fffff
    76e0:	2e00      	cmp	r6, #0
    76e2:	d03e      	beq.n	7762 <__aeabi_dsub+0x3d2>
    76e4:	4eb3      	ldr	r6, [pc, #716]	; (79b4 <__aeabi_dsub+0x624>)
    76e6:	45b4      	cmp	ip, r6
    76e8:	d045      	beq.n	7776 <__aeabi_dsub+0x3e6>
    76ea:	2680      	movs	r6, #128	; 0x80
    76ec:	0436      	lsls	r6, r6, #16
    76ee:	426d      	negs	r5, r5
    76f0:	4334      	orrs	r4, r6
    76f2:	2d38      	cmp	r5, #56	; 0x38
    76f4:	dd00      	ble.n	76f8 <__aeabi_dsub+0x368>
    76f6:	e0a8      	b.n	784a <__aeabi_dsub+0x4ba>
    76f8:	2d1f      	cmp	r5, #31
    76fa:	dd00      	ble.n	76fe <__aeabi_dsub+0x36e>
    76fc:	e11f      	b.n	793e <__aeabi_dsub+0x5ae>
    76fe:	2620      	movs	r6, #32
    7700:	0027      	movs	r7, r4
    7702:	4650      	mov	r0, sl
    7704:	1b76      	subs	r6, r6, r5
    7706:	40b7      	lsls	r7, r6
    7708:	40e8      	lsrs	r0, r5
    770a:	4307      	orrs	r7, r0
    770c:	4650      	mov	r0, sl
    770e:	40b0      	lsls	r0, r6
    7710:	1e46      	subs	r6, r0, #1
    7712:	41b0      	sbcs	r0, r6
    7714:	40ec      	lsrs	r4, r5
    7716:	4338      	orrs	r0, r7
    7718:	1a17      	subs	r7, r2, r0
    771a:	42ba      	cmp	r2, r7
    771c:	4192      	sbcs	r2, r2
    771e:	1b0c      	subs	r4, r1, r4
    7720:	4252      	negs	r2, r2
    7722:	1aa4      	subs	r4, r4, r2
    7724:	4666      	mov	r6, ip
    7726:	4698      	mov	r8, r3
    7728:	e68b      	b.n	7442 <__aeabi_dsub+0xb2>
    772a:	4664      	mov	r4, ip
    772c:	4667      	mov	r7, ip
    772e:	432c      	orrs	r4, r5
    7730:	d000      	beq.n	7734 <__aeabi_dsub+0x3a4>
    7732:	e68b      	b.n	744c <__aeabi_dsub+0xbc>
    7734:	2500      	movs	r5, #0
    7736:	2600      	movs	r6, #0
    7738:	2700      	movs	r7, #0
    773a:	e6ea      	b.n	7512 <__aeabi_dsub+0x182>
    773c:	001e      	movs	r6, r3
    773e:	e6ad      	b.n	749c <__aeabi_dsub+0x10c>
    7740:	2b1f      	cmp	r3, #31
    7742:	dc60      	bgt.n	7806 <__aeabi_dsub+0x476>
    7744:	2720      	movs	r7, #32
    7746:	1af8      	subs	r0, r7, r3
    7748:	000f      	movs	r7, r1
    774a:	4684      	mov	ip, r0
    774c:	4087      	lsls	r7, r0
    774e:	0010      	movs	r0, r2
    7750:	40d8      	lsrs	r0, r3
    7752:	4307      	orrs	r7, r0
    7754:	4660      	mov	r0, ip
    7756:	4082      	lsls	r2, r0
    7758:	1e50      	subs	r0, r2, #1
    775a:	4182      	sbcs	r2, r0
    775c:	40d9      	lsrs	r1, r3
    775e:	4317      	orrs	r7, r2
    7760:	e6f5      	b.n	754e <__aeabi_dsub+0x1be>
    7762:	0026      	movs	r6, r4
    7764:	4650      	mov	r0, sl
    7766:	4306      	orrs	r6, r0
    7768:	d005      	beq.n	7776 <__aeabi_dsub+0x3e6>
    776a:	43ed      	mvns	r5, r5
    776c:	2d00      	cmp	r5, #0
    776e:	d0d3      	beq.n	7718 <__aeabi_dsub+0x388>
    7770:	4e90      	ldr	r6, [pc, #576]	; (79b4 <__aeabi_dsub+0x624>)
    7772:	45b4      	cmp	ip, r6
    7774:	d1bd      	bne.n	76f2 <__aeabi_dsub+0x362>
    7776:	000c      	movs	r4, r1
    7778:	0017      	movs	r7, r2
    777a:	4666      	mov	r6, ip
    777c:	4698      	mov	r8, r3
    777e:	e68d      	b.n	749c <__aeabi_dsub+0x10c>
    7780:	488c      	ldr	r0, [pc, #560]	; (79b4 <__aeabi_dsub+0x624>)
    7782:	4283      	cmp	r3, r0
    7784:	d00b      	beq.n	779e <__aeabi_dsub+0x40e>
    7786:	4663      	mov	r3, ip
    7788:	e6d9      	b.n	753e <__aeabi_dsub+0x1ae>
    778a:	2d00      	cmp	r5, #0
    778c:	d000      	beq.n	7790 <__aeabi_dsub+0x400>
    778e:	e096      	b.n	78be <__aeabi_dsub+0x52e>
    7790:	0008      	movs	r0, r1
    7792:	4310      	orrs	r0, r2
    7794:	d100      	bne.n	7798 <__aeabi_dsub+0x408>
    7796:	e0e2      	b.n	795e <__aeabi_dsub+0x5ce>
    7798:	000c      	movs	r4, r1
    779a:	0017      	movs	r7, r2
    779c:	4698      	mov	r8, r3
    779e:	4e85      	ldr	r6, [pc, #532]	; (79b4 <__aeabi_dsub+0x624>)
    77a0:	e67c      	b.n	749c <__aeabi_dsub+0x10c>
    77a2:	2500      	movs	r5, #0
    77a4:	e780      	b.n	76a8 <__aeabi_dsub+0x318>
    77a6:	2100      	movs	r1, #0
    77a8:	e78e      	b.n	76c8 <__aeabi_dsub+0x338>
    77aa:	0023      	movs	r3, r4
    77ac:	4650      	mov	r0, sl
    77ae:	4303      	orrs	r3, r0
    77b0:	2e00      	cmp	r6, #0
    77b2:	d000      	beq.n	77b6 <__aeabi_dsub+0x426>
    77b4:	e0a8      	b.n	7908 <__aeabi_dsub+0x578>
    77b6:	2b00      	cmp	r3, #0
    77b8:	d100      	bne.n	77bc <__aeabi_dsub+0x42c>
    77ba:	e0de      	b.n	797a <__aeabi_dsub+0x5ea>
    77bc:	000b      	movs	r3, r1
    77be:	4313      	orrs	r3, r2
    77c0:	d100      	bne.n	77c4 <__aeabi_dsub+0x434>
    77c2:	e66b      	b.n	749c <__aeabi_dsub+0x10c>
    77c4:	4452      	add	r2, sl
    77c6:	4552      	cmp	r2, sl
    77c8:	4180      	sbcs	r0, r0
    77ca:	1864      	adds	r4, r4, r1
    77cc:	4240      	negs	r0, r0
    77ce:	1824      	adds	r4, r4, r0
    77d0:	0017      	movs	r7, r2
    77d2:	0223      	lsls	r3, r4, #8
    77d4:	d400      	bmi.n	77d8 <__aeabi_dsub+0x448>
    77d6:	e6fd      	b.n	75d4 <__aeabi_dsub+0x244>
    77d8:	4b77      	ldr	r3, [pc, #476]	; (79b8 <__aeabi_dsub+0x628>)
    77da:	4666      	mov	r6, ip
    77dc:	401c      	ands	r4, r3
    77de:	e65d      	b.n	749c <__aeabi_dsub+0x10c>
    77e0:	0025      	movs	r5, r4
    77e2:	4650      	mov	r0, sl
    77e4:	4305      	orrs	r5, r0
    77e6:	2e00      	cmp	r6, #0
    77e8:	d1cf      	bne.n	778a <__aeabi_dsub+0x3fa>
    77ea:	2d00      	cmp	r5, #0
    77ec:	d14f      	bne.n	788e <__aeabi_dsub+0x4fe>
    77ee:	000c      	movs	r4, r1
    77f0:	4314      	orrs	r4, r2
    77f2:	d100      	bne.n	77f6 <__aeabi_dsub+0x466>
    77f4:	e0a0      	b.n	7938 <__aeabi_dsub+0x5a8>
    77f6:	000c      	movs	r4, r1
    77f8:	0017      	movs	r7, r2
    77fa:	4698      	mov	r8, r3
    77fc:	e64e      	b.n	749c <__aeabi_dsub+0x10c>
    77fe:	4666      	mov	r6, ip
    7800:	2400      	movs	r4, #0
    7802:	2700      	movs	r7, #0
    7804:	e685      	b.n	7512 <__aeabi_dsub+0x182>
    7806:	001f      	movs	r7, r3
    7808:	0008      	movs	r0, r1
    780a:	3f20      	subs	r7, #32
    780c:	40f8      	lsrs	r0, r7
    780e:	0007      	movs	r7, r0
    7810:	2b20      	cmp	r3, #32
    7812:	d100      	bne.n	7816 <__aeabi_dsub+0x486>
    7814:	e08e      	b.n	7934 <__aeabi_dsub+0x5a4>
    7816:	2040      	movs	r0, #64	; 0x40
    7818:	1ac3      	subs	r3, r0, r3
    781a:	4099      	lsls	r1, r3
    781c:	430a      	orrs	r2, r1
    781e:	1e51      	subs	r1, r2, #1
    7820:	418a      	sbcs	r2, r1
    7822:	2100      	movs	r1, #0
    7824:	4317      	orrs	r7, r2
    7826:	e692      	b.n	754e <__aeabi_dsub+0x1be>
    7828:	2e00      	cmp	r6, #0
    782a:	d114      	bne.n	7856 <__aeabi_dsub+0x4c6>
    782c:	0026      	movs	r6, r4
    782e:	4650      	mov	r0, sl
    7830:	4306      	orrs	r6, r0
    7832:	d062      	beq.n	78fa <__aeabi_dsub+0x56a>
    7834:	43db      	mvns	r3, r3
    7836:	2b00      	cmp	r3, #0
    7838:	d15c      	bne.n	78f4 <__aeabi_dsub+0x564>
    783a:	1887      	adds	r7, r0, r2
    783c:	4297      	cmp	r7, r2
    783e:	4192      	sbcs	r2, r2
    7840:	1864      	adds	r4, r4, r1
    7842:	4252      	negs	r2, r2
    7844:	18a4      	adds	r4, r4, r2
    7846:	4666      	mov	r6, ip
    7848:	e687      	b.n	755a <__aeabi_dsub+0x1ca>
    784a:	4650      	mov	r0, sl
    784c:	4320      	orrs	r0, r4
    784e:	1e44      	subs	r4, r0, #1
    7850:	41a0      	sbcs	r0, r4
    7852:	2400      	movs	r4, #0
    7854:	e760      	b.n	7718 <__aeabi_dsub+0x388>
    7856:	4e57      	ldr	r6, [pc, #348]	; (79b4 <__aeabi_dsub+0x624>)
    7858:	45b4      	cmp	ip, r6
    785a:	d04e      	beq.n	78fa <__aeabi_dsub+0x56a>
    785c:	2680      	movs	r6, #128	; 0x80
    785e:	0436      	lsls	r6, r6, #16
    7860:	425b      	negs	r3, r3
    7862:	4334      	orrs	r4, r6
    7864:	2b38      	cmp	r3, #56	; 0x38
    7866:	dd00      	ble.n	786a <__aeabi_dsub+0x4da>
    7868:	e07f      	b.n	796a <__aeabi_dsub+0x5da>
    786a:	2b1f      	cmp	r3, #31
    786c:	dd00      	ble.n	7870 <__aeabi_dsub+0x4e0>
    786e:	e08b      	b.n	7988 <__aeabi_dsub+0x5f8>
    7870:	2620      	movs	r6, #32
    7872:	0027      	movs	r7, r4
    7874:	4650      	mov	r0, sl
    7876:	1af6      	subs	r6, r6, r3
    7878:	40b7      	lsls	r7, r6
    787a:	40d8      	lsrs	r0, r3
    787c:	4307      	orrs	r7, r0
    787e:	4650      	mov	r0, sl
    7880:	40b0      	lsls	r0, r6
    7882:	1e46      	subs	r6, r0, #1
    7884:	41b0      	sbcs	r0, r6
    7886:	4307      	orrs	r7, r0
    7888:	40dc      	lsrs	r4, r3
    788a:	18bf      	adds	r7, r7, r2
    788c:	e7d6      	b.n	783c <__aeabi_dsub+0x4ac>
    788e:	000d      	movs	r5, r1
    7890:	4315      	orrs	r5, r2
    7892:	d100      	bne.n	7896 <__aeabi_dsub+0x506>
    7894:	e602      	b.n	749c <__aeabi_dsub+0x10c>
    7896:	4650      	mov	r0, sl
    7898:	1a80      	subs	r0, r0, r2
    789a:	4582      	cmp	sl, r0
    789c:	41bf      	sbcs	r7, r7
    789e:	1a65      	subs	r5, r4, r1
    78a0:	427f      	negs	r7, r7
    78a2:	1bed      	subs	r5, r5, r7
    78a4:	4684      	mov	ip, r0
    78a6:	0228      	lsls	r0, r5, #8
    78a8:	d400      	bmi.n	78ac <__aeabi_dsub+0x51c>
    78aa:	e68d      	b.n	75c8 <__aeabi_dsub+0x238>
    78ac:	4650      	mov	r0, sl
    78ae:	1a17      	subs	r7, r2, r0
    78b0:	42ba      	cmp	r2, r7
    78b2:	4192      	sbcs	r2, r2
    78b4:	1b0c      	subs	r4, r1, r4
    78b6:	4252      	negs	r2, r2
    78b8:	1aa4      	subs	r4, r4, r2
    78ba:	4698      	mov	r8, r3
    78bc:	e5ee      	b.n	749c <__aeabi_dsub+0x10c>
    78be:	000d      	movs	r5, r1
    78c0:	4315      	orrs	r5, r2
    78c2:	d100      	bne.n	78c6 <__aeabi_dsub+0x536>
    78c4:	e76b      	b.n	779e <__aeabi_dsub+0x40e>
    78c6:	4650      	mov	r0, sl
    78c8:	0767      	lsls	r7, r4, #29
    78ca:	08c0      	lsrs	r0, r0, #3
    78cc:	4307      	orrs	r7, r0
    78ce:	2080      	movs	r0, #128	; 0x80
    78d0:	08e4      	lsrs	r4, r4, #3
    78d2:	0300      	lsls	r0, r0, #12
    78d4:	4204      	tst	r4, r0
    78d6:	d007      	beq.n	78e8 <__aeabi_dsub+0x558>
    78d8:	08cd      	lsrs	r5, r1, #3
    78da:	4205      	tst	r5, r0
    78dc:	d104      	bne.n	78e8 <__aeabi_dsub+0x558>
    78de:	002c      	movs	r4, r5
    78e0:	4698      	mov	r8, r3
    78e2:	08d7      	lsrs	r7, r2, #3
    78e4:	0749      	lsls	r1, r1, #29
    78e6:	430f      	orrs	r7, r1
    78e8:	0f7b      	lsrs	r3, r7, #29
    78ea:	00e4      	lsls	r4, r4, #3
    78ec:	431c      	orrs	r4, r3
    78ee:	00ff      	lsls	r7, r7, #3
    78f0:	4e30      	ldr	r6, [pc, #192]	; (79b4 <__aeabi_dsub+0x624>)
    78f2:	e5d3      	b.n	749c <__aeabi_dsub+0x10c>
    78f4:	4e2f      	ldr	r6, [pc, #188]	; (79b4 <__aeabi_dsub+0x624>)
    78f6:	45b4      	cmp	ip, r6
    78f8:	d1b4      	bne.n	7864 <__aeabi_dsub+0x4d4>
    78fa:	000c      	movs	r4, r1
    78fc:	0017      	movs	r7, r2
    78fe:	4666      	mov	r6, ip
    7900:	e5cc      	b.n	749c <__aeabi_dsub+0x10c>
    7902:	2700      	movs	r7, #0
    7904:	2400      	movs	r4, #0
    7906:	e5e8      	b.n	74da <__aeabi_dsub+0x14a>
    7908:	2b00      	cmp	r3, #0
    790a:	d039      	beq.n	7980 <__aeabi_dsub+0x5f0>
    790c:	000b      	movs	r3, r1
    790e:	4313      	orrs	r3, r2
    7910:	d100      	bne.n	7914 <__aeabi_dsub+0x584>
    7912:	e744      	b.n	779e <__aeabi_dsub+0x40e>
    7914:	08c0      	lsrs	r0, r0, #3
    7916:	0767      	lsls	r7, r4, #29
    7918:	4307      	orrs	r7, r0
    791a:	2080      	movs	r0, #128	; 0x80
    791c:	08e4      	lsrs	r4, r4, #3
    791e:	0300      	lsls	r0, r0, #12
    7920:	4204      	tst	r4, r0
    7922:	d0e1      	beq.n	78e8 <__aeabi_dsub+0x558>
    7924:	08cb      	lsrs	r3, r1, #3
    7926:	4203      	tst	r3, r0
    7928:	d1de      	bne.n	78e8 <__aeabi_dsub+0x558>
    792a:	08d7      	lsrs	r7, r2, #3
    792c:	0749      	lsls	r1, r1, #29
    792e:	430f      	orrs	r7, r1
    7930:	001c      	movs	r4, r3
    7932:	e7d9      	b.n	78e8 <__aeabi_dsub+0x558>
    7934:	2100      	movs	r1, #0
    7936:	e771      	b.n	781c <__aeabi_dsub+0x48c>
    7938:	2500      	movs	r5, #0
    793a:	2700      	movs	r7, #0
    793c:	e5e9      	b.n	7512 <__aeabi_dsub+0x182>
    793e:	002e      	movs	r6, r5
    7940:	0027      	movs	r7, r4
    7942:	3e20      	subs	r6, #32
    7944:	40f7      	lsrs	r7, r6
    7946:	2d20      	cmp	r5, #32
    7948:	d02f      	beq.n	79aa <__aeabi_dsub+0x61a>
    794a:	2640      	movs	r6, #64	; 0x40
    794c:	1b75      	subs	r5, r6, r5
    794e:	40ac      	lsls	r4, r5
    7950:	4650      	mov	r0, sl
    7952:	4320      	orrs	r0, r4
    7954:	1e44      	subs	r4, r0, #1
    7956:	41a0      	sbcs	r0, r4
    7958:	2400      	movs	r4, #0
    795a:	4338      	orrs	r0, r7
    795c:	e6dc      	b.n	7718 <__aeabi_dsub+0x388>
    795e:	2480      	movs	r4, #128	; 0x80
    7960:	2500      	movs	r5, #0
    7962:	0324      	lsls	r4, r4, #12
    7964:	4e13      	ldr	r6, [pc, #76]	; (79b4 <__aeabi_dsub+0x624>)
    7966:	2700      	movs	r7, #0
    7968:	e5d3      	b.n	7512 <__aeabi_dsub+0x182>
    796a:	4650      	mov	r0, sl
    796c:	4320      	orrs	r0, r4
    796e:	0007      	movs	r7, r0
    7970:	1e78      	subs	r0, r7, #1
    7972:	4187      	sbcs	r7, r0
    7974:	2400      	movs	r4, #0
    7976:	18bf      	adds	r7, r7, r2
    7978:	e760      	b.n	783c <__aeabi_dsub+0x4ac>
    797a:	000c      	movs	r4, r1
    797c:	0017      	movs	r7, r2
    797e:	e58d      	b.n	749c <__aeabi_dsub+0x10c>
    7980:	000c      	movs	r4, r1
    7982:	0017      	movs	r7, r2
    7984:	4e0b      	ldr	r6, [pc, #44]	; (79b4 <__aeabi_dsub+0x624>)
    7986:	e589      	b.n	749c <__aeabi_dsub+0x10c>
    7988:	001e      	movs	r6, r3
    798a:	0027      	movs	r7, r4
    798c:	3e20      	subs	r6, #32
    798e:	40f7      	lsrs	r7, r6
    7990:	2b20      	cmp	r3, #32
    7992:	d00c      	beq.n	79ae <__aeabi_dsub+0x61e>
    7994:	2640      	movs	r6, #64	; 0x40
    7996:	1af3      	subs	r3, r6, r3
    7998:	409c      	lsls	r4, r3
    799a:	4650      	mov	r0, sl
    799c:	4320      	orrs	r0, r4
    799e:	1e44      	subs	r4, r0, #1
    79a0:	41a0      	sbcs	r0, r4
    79a2:	4307      	orrs	r7, r0
    79a4:	2400      	movs	r4, #0
    79a6:	18bf      	adds	r7, r7, r2
    79a8:	e748      	b.n	783c <__aeabi_dsub+0x4ac>
    79aa:	2400      	movs	r4, #0
    79ac:	e7d0      	b.n	7950 <__aeabi_dsub+0x5c0>
    79ae:	2400      	movs	r4, #0
    79b0:	e7f3      	b.n	799a <__aeabi_dsub+0x60a>
    79b2:	46c0      	nop			; (mov r8, r8)
    79b4:	000007ff 	.word	0x000007ff
    79b8:	ff7fffff 	.word	0xff7fffff

000079bc <__aeabi_f2d>:
    79bc:	0041      	lsls	r1, r0, #1
    79be:	0e09      	lsrs	r1, r1, #24
    79c0:	1c4b      	adds	r3, r1, #1
    79c2:	b570      	push	{r4, r5, r6, lr}
    79c4:	b2db      	uxtb	r3, r3
    79c6:	0246      	lsls	r6, r0, #9
    79c8:	0a75      	lsrs	r5, r6, #9
    79ca:	0fc4      	lsrs	r4, r0, #31
    79cc:	2b01      	cmp	r3, #1
    79ce:	dd14      	ble.n	79fa <__aeabi_f2d+0x3e>
    79d0:	23e0      	movs	r3, #224	; 0xe0
    79d2:	009b      	lsls	r3, r3, #2
    79d4:	076d      	lsls	r5, r5, #29
    79d6:	0b36      	lsrs	r6, r6, #12
    79d8:	18cb      	adds	r3, r1, r3
    79da:	2100      	movs	r1, #0
    79dc:	0d0a      	lsrs	r2, r1, #20
    79de:	0028      	movs	r0, r5
    79e0:	0512      	lsls	r2, r2, #20
    79e2:	4d1c      	ldr	r5, [pc, #112]	; (7a54 <__aeabi_f2d+0x98>)
    79e4:	4332      	orrs	r2, r6
    79e6:	055b      	lsls	r3, r3, #21
    79e8:	402a      	ands	r2, r5
    79ea:	085b      	lsrs	r3, r3, #1
    79ec:	4313      	orrs	r3, r2
    79ee:	005b      	lsls	r3, r3, #1
    79f0:	07e4      	lsls	r4, r4, #31
    79f2:	085b      	lsrs	r3, r3, #1
    79f4:	4323      	orrs	r3, r4
    79f6:	0019      	movs	r1, r3
    79f8:	bd70      	pop	{r4, r5, r6, pc}
    79fa:	2900      	cmp	r1, #0
    79fc:	d114      	bne.n	7a28 <__aeabi_f2d+0x6c>
    79fe:	2d00      	cmp	r5, #0
    7a00:	d01e      	beq.n	7a40 <__aeabi_f2d+0x84>
    7a02:	0028      	movs	r0, r5
    7a04:	f7fe faee 	bl	5fe4 <__clzsi2>
    7a08:	280a      	cmp	r0, #10
    7a0a:	dc1c      	bgt.n	7a46 <__aeabi_f2d+0x8a>
    7a0c:	230b      	movs	r3, #11
    7a0e:	002a      	movs	r2, r5
    7a10:	1a1b      	subs	r3, r3, r0
    7a12:	40da      	lsrs	r2, r3
    7a14:	0003      	movs	r3, r0
    7a16:	3315      	adds	r3, #21
    7a18:	409d      	lsls	r5, r3
    7a1a:	4b0f      	ldr	r3, [pc, #60]	; (7a58 <__aeabi_f2d+0x9c>)
    7a1c:	0312      	lsls	r2, r2, #12
    7a1e:	1a1b      	subs	r3, r3, r0
    7a20:	055b      	lsls	r3, r3, #21
    7a22:	0b16      	lsrs	r6, r2, #12
    7a24:	0d5b      	lsrs	r3, r3, #21
    7a26:	e7d8      	b.n	79da <__aeabi_f2d+0x1e>
    7a28:	2d00      	cmp	r5, #0
    7a2a:	d006      	beq.n	7a3a <__aeabi_f2d+0x7e>
    7a2c:	0b32      	lsrs	r2, r6, #12
    7a2e:	2680      	movs	r6, #128	; 0x80
    7a30:	0336      	lsls	r6, r6, #12
    7a32:	076d      	lsls	r5, r5, #29
    7a34:	4316      	orrs	r6, r2
    7a36:	4b09      	ldr	r3, [pc, #36]	; (7a5c <__aeabi_f2d+0xa0>)
    7a38:	e7cf      	b.n	79da <__aeabi_f2d+0x1e>
    7a3a:	4b08      	ldr	r3, [pc, #32]	; (7a5c <__aeabi_f2d+0xa0>)
    7a3c:	2600      	movs	r6, #0
    7a3e:	e7cc      	b.n	79da <__aeabi_f2d+0x1e>
    7a40:	2300      	movs	r3, #0
    7a42:	2600      	movs	r6, #0
    7a44:	e7c9      	b.n	79da <__aeabi_f2d+0x1e>
    7a46:	0003      	movs	r3, r0
    7a48:	002a      	movs	r2, r5
    7a4a:	3b0b      	subs	r3, #11
    7a4c:	409a      	lsls	r2, r3
    7a4e:	2500      	movs	r5, #0
    7a50:	e7e3      	b.n	7a1a <__aeabi_f2d+0x5e>
    7a52:	46c0      	nop			; (mov r8, r8)
    7a54:	800fffff 	.word	0x800fffff
    7a58:	00000389 	.word	0x00000389
    7a5c:	000007ff 	.word	0x000007ff

00007a60 <__aeabi_d2f>:
    7a60:	b5f0      	push	{r4, r5, r6, r7, lr}
    7a62:	004c      	lsls	r4, r1, #1
    7a64:	0d64      	lsrs	r4, r4, #21
    7a66:	030b      	lsls	r3, r1, #12
    7a68:	1c62      	adds	r2, r4, #1
    7a6a:	0f45      	lsrs	r5, r0, #29
    7a6c:	0a5b      	lsrs	r3, r3, #9
    7a6e:	0552      	lsls	r2, r2, #21
    7a70:	432b      	orrs	r3, r5
    7a72:	0fc9      	lsrs	r1, r1, #31
    7a74:	00c5      	lsls	r5, r0, #3
    7a76:	0d52      	lsrs	r2, r2, #21
    7a78:	2a01      	cmp	r2, #1
    7a7a:	dd28      	ble.n	7ace <__aeabi_d2f+0x6e>
    7a7c:	4a3a      	ldr	r2, [pc, #232]	; (7b68 <__aeabi_d2f+0x108>)
    7a7e:	18a6      	adds	r6, r4, r2
    7a80:	2efe      	cmp	r6, #254	; 0xfe
    7a82:	dc1b      	bgt.n	7abc <__aeabi_d2f+0x5c>
    7a84:	2e00      	cmp	r6, #0
    7a86:	dd3e      	ble.n	7b06 <__aeabi_d2f+0xa6>
    7a88:	0180      	lsls	r0, r0, #6
    7a8a:	0002      	movs	r2, r0
    7a8c:	1e50      	subs	r0, r2, #1
    7a8e:	4182      	sbcs	r2, r0
    7a90:	0f6d      	lsrs	r5, r5, #29
    7a92:	432a      	orrs	r2, r5
    7a94:	00db      	lsls	r3, r3, #3
    7a96:	4313      	orrs	r3, r2
    7a98:	075a      	lsls	r2, r3, #29
    7a9a:	d004      	beq.n	7aa6 <__aeabi_d2f+0x46>
    7a9c:	220f      	movs	r2, #15
    7a9e:	401a      	ands	r2, r3
    7aa0:	2a04      	cmp	r2, #4
    7aa2:	d000      	beq.n	7aa6 <__aeabi_d2f+0x46>
    7aa4:	3304      	adds	r3, #4
    7aa6:	2280      	movs	r2, #128	; 0x80
    7aa8:	04d2      	lsls	r2, r2, #19
    7aaa:	401a      	ands	r2, r3
    7aac:	d05a      	beq.n	7b64 <__aeabi_d2f+0x104>
    7aae:	3601      	adds	r6, #1
    7ab0:	2eff      	cmp	r6, #255	; 0xff
    7ab2:	d003      	beq.n	7abc <__aeabi_d2f+0x5c>
    7ab4:	019b      	lsls	r3, r3, #6
    7ab6:	0a5b      	lsrs	r3, r3, #9
    7ab8:	b2f4      	uxtb	r4, r6
    7aba:	e001      	b.n	7ac0 <__aeabi_d2f+0x60>
    7abc:	24ff      	movs	r4, #255	; 0xff
    7abe:	2300      	movs	r3, #0
    7ac0:	0258      	lsls	r0, r3, #9
    7ac2:	05e4      	lsls	r4, r4, #23
    7ac4:	0a40      	lsrs	r0, r0, #9
    7ac6:	07c9      	lsls	r1, r1, #31
    7ac8:	4320      	orrs	r0, r4
    7aca:	4308      	orrs	r0, r1
    7acc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7ace:	2c00      	cmp	r4, #0
    7ad0:	d007      	beq.n	7ae2 <__aeabi_d2f+0x82>
    7ad2:	431d      	orrs	r5, r3
    7ad4:	d0f2      	beq.n	7abc <__aeabi_d2f+0x5c>
    7ad6:	2080      	movs	r0, #128	; 0x80
    7ad8:	00db      	lsls	r3, r3, #3
    7ada:	0480      	lsls	r0, r0, #18
    7adc:	4303      	orrs	r3, r0
    7ade:	26ff      	movs	r6, #255	; 0xff
    7ae0:	e7da      	b.n	7a98 <__aeabi_d2f+0x38>
    7ae2:	432b      	orrs	r3, r5
    7ae4:	d003      	beq.n	7aee <__aeabi_d2f+0x8e>
    7ae6:	2305      	movs	r3, #5
    7ae8:	08db      	lsrs	r3, r3, #3
    7aea:	2cff      	cmp	r4, #255	; 0xff
    7aec:	d003      	beq.n	7af6 <__aeabi_d2f+0x96>
    7aee:	025b      	lsls	r3, r3, #9
    7af0:	0a5b      	lsrs	r3, r3, #9
    7af2:	b2e4      	uxtb	r4, r4
    7af4:	e7e4      	b.n	7ac0 <__aeabi_d2f+0x60>
    7af6:	2b00      	cmp	r3, #0
    7af8:	d032      	beq.n	7b60 <__aeabi_d2f+0x100>
    7afa:	2080      	movs	r0, #128	; 0x80
    7afc:	03c0      	lsls	r0, r0, #15
    7afe:	4303      	orrs	r3, r0
    7b00:	025b      	lsls	r3, r3, #9
    7b02:	0a5b      	lsrs	r3, r3, #9
    7b04:	e7dc      	b.n	7ac0 <__aeabi_d2f+0x60>
    7b06:	0032      	movs	r2, r6
    7b08:	3217      	adds	r2, #23
    7b0a:	db14      	blt.n	7b36 <__aeabi_d2f+0xd6>
    7b0c:	2280      	movs	r2, #128	; 0x80
    7b0e:	271e      	movs	r7, #30
    7b10:	0412      	lsls	r2, r2, #16
    7b12:	4313      	orrs	r3, r2
    7b14:	1bbf      	subs	r7, r7, r6
    7b16:	2f1f      	cmp	r7, #31
    7b18:	dc0f      	bgt.n	7b3a <__aeabi_d2f+0xda>
    7b1a:	4a14      	ldr	r2, [pc, #80]	; (7b6c <__aeabi_d2f+0x10c>)
    7b1c:	4694      	mov	ip, r2
    7b1e:	4464      	add	r4, ip
    7b20:	002a      	movs	r2, r5
    7b22:	40a5      	lsls	r5, r4
    7b24:	002e      	movs	r6, r5
    7b26:	40a3      	lsls	r3, r4
    7b28:	1e75      	subs	r5, r6, #1
    7b2a:	41ae      	sbcs	r6, r5
    7b2c:	40fa      	lsrs	r2, r7
    7b2e:	4333      	orrs	r3, r6
    7b30:	4313      	orrs	r3, r2
    7b32:	2600      	movs	r6, #0
    7b34:	e7b0      	b.n	7a98 <__aeabi_d2f+0x38>
    7b36:	2400      	movs	r4, #0
    7b38:	e7d5      	b.n	7ae6 <__aeabi_d2f+0x86>
    7b3a:	2202      	movs	r2, #2
    7b3c:	4252      	negs	r2, r2
    7b3e:	1b96      	subs	r6, r2, r6
    7b40:	001a      	movs	r2, r3
    7b42:	40f2      	lsrs	r2, r6
    7b44:	2f20      	cmp	r7, #32
    7b46:	d009      	beq.n	7b5c <__aeabi_d2f+0xfc>
    7b48:	4809      	ldr	r0, [pc, #36]	; (7b70 <__aeabi_d2f+0x110>)
    7b4a:	4684      	mov	ip, r0
    7b4c:	4464      	add	r4, ip
    7b4e:	40a3      	lsls	r3, r4
    7b50:	432b      	orrs	r3, r5
    7b52:	1e5d      	subs	r5, r3, #1
    7b54:	41ab      	sbcs	r3, r5
    7b56:	2600      	movs	r6, #0
    7b58:	4313      	orrs	r3, r2
    7b5a:	e79d      	b.n	7a98 <__aeabi_d2f+0x38>
    7b5c:	2300      	movs	r3, #0
    7b5e:	e7f7      	b.n	7b50 <__aeabi_d2f+0xf0>
    7b60:	2300      	movs	r3, #0
    7b62:	e7ad      	b.n	7ac0 <__aeabi_d2f+0x60>
    7b64:	0034      	movs	r4, r6
    7b66:	e7bf      	b.n	7ae8 <__aeabi_d2f+0x88>
    7b68:	fffffc80 	.word	0xfffffc80
    7b6c:	fffffc82 	.word	0xfffffc82
    7b70:	fffffca2 	.word	0xfffffca2

00007b74 <__aeabi_cfrcmple>:
    7b74:	4684      	mov	ip, r0
    7b76:	1c08      	adds	r0, r1, #0
    7b78:	4661      	mov	r1, ip
    7b7a:	e7ff      	b.n	7b7c <__aeabi_cfcmpeq>

00007b7c <__aeabi_cfcmpeq>:
    7b7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    7b7e:	f000 f899 	bl	7cb4 <__lesf2>
    7b82:	2800      	cmp	r0, #0
    7b84:	d401      	bmi.n	7b8a <__aeabi_cfcmpeq+0xe>
    7b86:	2100      	movs	r1, #0
    7b88:	42c8      	cmn	r0, r1
    7b8a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00007b8c <__aeabi_fcmpeq>:
    7b8c:	b510      	push	{r4, lr}
    7b8e:	f000 f82b 	bl	7be8 <__eqsf2>
    7b92:	4240      	negs	r0, r0
    7b94:	3001      	adds	r0, #1
    7b96:	bd10      	pop	{r4, pc}

00007b98 <__aeabi_fcmplt>:
    7b98:	b510      	push	{r4, lr}
    7b9a:	f000 f88b 	bl	7cb4 <__lesf2>
    7b9e:	2800      	cmp	r0, #0
    7ba0:	db01      	blt.n	7ba6 <__aeabi_fcmplt+0xe>
    7ba2:	2000      	movs	r0, #0
    7ba4:	bd10      	pop	{r4, pc}
    7ba6:	2001      	movs	r0, #1
    7ba8:	bd10      	pop	{r4, pc}
    7baa:	46c0      	nop			; (mov r8, r8)

00007bac <__aeabi_fcmple>:
    7bac:	b510      	push	{r4, lr}
    7bae:	f000 f881 	bl	7cb4 <__lesf2>
    7bb2:	2800      	cmp	r0, #0
    7bb4:	dd01      	ble.n	7bba <__aeabi_fcmple+0xe>
    7bb6:	2000      	movs	r0, #0
    7bb8:	bd10      	pop	{r4, pc}
    7bba:	2001      	movs	r0, #1
    7bbc:	bd10      	pop	{r4, pc}
    7bbe:	46c0      	nop			; (mov r8, r8)

00007bc0 <__aeabi_fcmpgt>:
    7bc0:	b510      	push	{r4, lr}
    7bc2:	f000 f837 	bl	7c34 <__gesf2>
    7bc6:	2800      	cmp	r0, #0
    7bc8:	dc01      	bgt.n	7bce <__aeabi_fcmpgt+0xe>
    7bca:	2000      	movs	r0, #0
    7bcc:	bd10      	pop	{r4, pc}
    7bce:	2001      	movs	r0, #1
    7bd0:	bd10      	pop	{r4, pc}
    7bd2:	46c0      	nop			; (mov r8, r8)

00007bd4 <__aeabi_fcmpge>:
    7bd4:	b510      	push	{r4, lr}
    7bd6:	f000 f82d 	bl	7c34 <__gesf2>
    7bda:	2800      	cmp	r0, #0
    7bdc:	da01      	bge.n	7be2 <__aeabi_fcmpge+0xe>
    7bde:	2000      	movs	r0, #0
    7be0:	bd10      	pop	{r4, pc}
    7be2:	2001      	movs	r0, #1
    7be4:	bd10      	pop	{r4, pc}
    7be6:	46c0      	nop			; (mov r8, r8)

00007be8 <__eqsf2>:
    7be8:	b570      	push	{r4, r5, r6, lr}
    7bea:	0042      	lsls	r2, r0, #1
    7bec:	0245      	lsls	r5, r0, #9
    7bee:	024e      	lsls	r6, r1, #9
    7bf0:	004c      	lsls	r4, r1, #1
    7bf2:	0fc3      	lsrs	r3, r0, #31
    7bf4:	0a6d      	lsrs	r5, r5, #9
    7bf6:	0e12      	lsrs	r2, r2, #24
    7bf8:	0a76      	lsrs	r6, r6, #9
    7bfa:	0e24      	lsrs	r4, r4, #24
    7bfc:	0fc9      	lsrs	r1, r1, #31
    7bfe:	2001      	movs	r0, #1
    7c00:	2aff      	cmp	r2, #255	; 0xff
    7c02:	d006      	beq.n	7c12 <__eqsf2+0x2a>
    7c04:	2cff      	cmp	r4, #255	; 0xff
    7c06:	d003      	beq.n	7c10 <__eqsf2+0x28>
    7c08:	42a2      	cmp	r2, r4
    7c0a:	d101      	bne.n	7c10 <__eqsf2+0x28>
    7c0c:	42b5      	cmp	r5, r6
    7c0e:	d006      	beq.n	7c1e <__eqsf2+0x36>
    7c10:	bd70      	pop	{r4, r5, r6, pc}
    7c12:	2d00      	cmp	r5, #0
    7c14:	d1fc      	bne.n	7c10 <__eqsf2+0x28>
    7c16:	2cff      	cmp	r4, #255	; 0xff
    7c18:	d1fa      	bne.n	7c10 <__eqsf2+0x28>
    7c1a:	2e00      	cmp	r6, #0
    7c1c:	d1f8      	bne.n	7c10 <__eqsf2+0x28>
    7c1e:	428b      	cmp	r3, r1
    7c20:	d006      	beq.n	7c30 <__eqsf2+0x48>
    7c22:	2001      	movs	r0, #1
    7c24:	2a00      	cmp	r2, #0
    7c26:	d1f3      	bne.n	7c10 <__eqsf2+0x28>
    7c28:	0028      	movs	r0, r5
    7c2a:	1e45      	subs	r5, r0, #1
    7c2c:	41a8      	sbcs	r0, r5
    7c2e:	e7ef      	b.n	7c10 <__eqsf2+0x28>
    7c30:	2000      	movs	r0, #0
    7c32:	e7ed      	b.n	7c10 <__eqsf2+0x28>

00007c34 <__gesf2>:
    7c34:	b5f0      	push	{r4, r5, r6, r7, lr}
    7c36:	0042      	lsls	r2, r0, #1
    7c38:	0245      	lsls	r5, r0, #9
    7c3a:	024c      	lsls	r4, r1, #9
    7c3c:	0fc3      	lsrs	r3, r0, #31
    7c3e:	0048      	lsls	r0, r1, #1
    7c40:	0a6d      	lsrs	r5, r5, #9
    7c42:	0e12      	lsrs	r2, r2, #24
    7c44:	0a64      	lsrs	r4, r4, #9
    7c46:	0e00      	lsrs	r0, r0, #24
    7c48:	0fc9      	lsrs	r1, r1, #31
    7c4a:	2aff      	cmp	r2, #255	; 0xff
    7c4c:	d01e      	beq.n	7c8c <__gesf2+0x58>
    7c4e:	28ff      	cmp	r0, #255	; 0xff
    7c50:	d021      	beq.n	7c96 <__gesf2+0x62>
    7c52:	2a00      	cmp	r2, #0
    7c54:	d10a      	bne.n	7c6c <__gesf2+0x38>
    7c56:	426e      	negs	r6, r5
    7c58:	416e      	adcs	r6, r5
    7c5a:	b2f6      	uxtb	r6, r6
    7c5c:	2800      	cmp	r0, #0
    7c5e:	d10f      	bne.n	7c80 <__gesf2+0x4c>
    7c60:	2c00      	cmp	r4, #0
    7c62:	d10d      	bne.n	7c80 <__gesf2+0x4c>
    7c64:	2000      	movs	r0, #0
    7c66:	2d00      	cmp	r5, #0
    7c68:	d009      	beq.n	7c7e <__gesf2+0x4a>
    7c6a:	e005      	b.n	7c78 <__gesf2+0x44>
    7c6c:	2800      	cmp	r0, #0
    7c6e:	d101      	bne.n	7c74 <__gesf2+0x40>
    7c70:	2c00      	cmp	r4, #0
    7c72:	d001      	beq.n	7c78 <__gesf2+0x44>
    7c74:	428b      	cmp	r3, r1
    7c76:	d011      	beq.n	7c9c <__gesf2+0x68>
    7c78:	2101      	movs	r1, #1
    7c7a:	4258      	negs	r0, r3
    7c7c:	4308      	orrs	r0, r1
    7c7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7c80:	2e00      	cmp	r6, #0
    7c82:	d0f7      	beq.n	7c74 <__gesf2+0x40>
    7c84:	2001      	movs	r0, #1
    7c86:	3901      	subs	r1, #1
    7c88:	4308      	orrs	r0, r1
    7c8a:	e7f8      	b.n	7c7e <__gesf2+0x4a>
    7c8c:	2d00      	cmp	r5, #0
    7c8e:	d0de      	beq.n	7c4e <__gesf2+0x1a>
    7c90:	2002      	movs	r0, #2
    7c92:	4240      	negs	r0, r0
    7c94:	e7f3      	b.n	7c7e <__gesf2+0x4a>
    7c96:	2c00      	cmp	r4, #0
    7c98:	d0db      	beq.n	7c52 <__gesf2+0x1e>
    7c9a:	e7f9      	b.n	7c90 <__gesf2+0x5c>
    7c9c:	4282      	cmp	r2, r0
    7c9e:	dceb      	bgt.n	7c78 <__gesf2+0x44>
    7ca0:	db04      	blt.n	7cac <__gesf2+0x78>
    7ca2:	42a5      	cmp	r5, r4
    7ca4:	d8e8      	bhi.n	7c78 <__gesf2+0x44>
    7ca6:	2000      	movs	r0, #0
    7ca8:	42a5      	cmp	r5, r4
    7caa:	d2e8      	bcs.n	7c7e <__gesf2+0x4a>
    7cac:	2101      	movs	r1, #1
    7cae:	1e58      	subs	r0, r3, #1
    7cb0:	4308      	orrs	r0, r1
    7cb2:	e7e4      	b.n	7c7e <__gesf2+0x4a>

00007cb4 <__lesf2>:
    7cb4:	b5f0      	push	{r4, r5, r6, r7, lr}
    7cb6:	0042      	lsls	r2, r0, #1
    7cb8:	024d      	lsls	r5, r1, #9
    7cba:	004c      	lsls	r4, r1, #1
    7cbc:	0246      	lsls	r6, r0, #9
    7cbe:	0a76      	lsrs	r6, r6, #9
    7cc0:	0e12      	lsrs	r2, r2, #24
    7cc2:	0fc3      	lsrs	r3, r0, #31
    7cc4:	0a6d      	lsrs	r5, r5, #9
    7cc6:	0e24      	lsrs	r4, r4, #24
    7cc8:	0fc9      	lsrs	r1, r1, #31
    7cca:	2aff      	cmp	r2, #255	; 0xff
    7ccc:	d016      	beq.n	7cfc <__lesf2+0x48>
    7cce:	2cff      	cmp	r4, #255	; 0xff
    7cd0:	d018      	beq.n	7d04 <__lesf2+0x50>
    7cd2:	2a00      	cmp	r2, #0
    7cd4:	d10a      	bne.n	7cec <__lesf2+0x38>
    7cd6:	4270      	negs	r0, r6
    7cd8:	4170      	adcs	r0, r6
    7cda:	b2c0      	uxtb	r0, r0
    7cdc:	2c00      	cmp	r4, #0
    7cde:	d015      	beq.n	7d0c <__lesf2+0x58>
    7ce0:	2800      	cmp	r0, #0
    7ce2:	d005      	beq.n	7cf0 <__lesf2+0x3c>
    7ce4:	2001      	movs	r0, #1
    7ce6:	3901      	subs	r1, #1
    7ce8:	4308      	orrs	r0, r1
    7cea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7cec:	2c00      	cmp	r4, #0
    7cee:	d013      	beq.n	7d18 <__lesf2+0x64>
    7cf0:	4299      	cmp	r1, r3
    7cf2:	d014      	beq.n	7d1e <__lesf2+0x6a>
    7cf4:	2001      	movs	r0, #1
    7cf6:	425b      	negs	r3, r3
    7cf8:	4318      	orrs	r0, r3
    7cfa:	e7f6      	b.n	7cea <__lesf2+0x36>
    7cfc:	2002      	movs	r0, #2
    7cfe:	2e00      	cmp	r6, #0
    7d00:	d1f3      	bne.n	7cea <__lesf2+0x36>
    7d02:	e7e4      	b.n	7cce <__lesf2+0x1a>
    7d04:	2002      	movs	r0, #2
    7d06:	2d00      	cmp	r5, #0
    7d08:	d1ef      	bne.n	7cea <__lesf2+0x36>
    7d0a:	e7e2      	b.n	7cd2 <__lesf2+0x1e>
    7d0c:	2d00      	cmp	r5, #0
    7d0e:	d1e7      	bne.n	7ce0 <__lesf2+0x2c>
    7d10:	2000      	movs	r0, #0
    7d12:	2e00      	cmp	r6, #0
    7d14:	d0e9      	beq.n	7cea <__lesf2+0x36>
    7d16:	e7ed      	b.n	7cf4 <__lesf2+0x40>
    7d18:	2d00      	cmp	r5, #0
    7d1a:	d1e9      	bne.n	7cf0 <__lesf2+0x3c>
    7d1c:	e7ea      	b.n	7cf4 <__lesf2+0x40>
    7d1e:	42a2      	cmp	r2, r4
    7d20:	dc06      	bgt.n	7d30 <__lesf2+0x7c>
    7d22:	dbdf      	blt.n	7ce4 <__lesf2+0x30>
    7d24:	42ae      	cmp	r6, r5
    7d26:	d803      	bhi.n	7d30 <__lesf2+0x7c>
    7d28:	2000      	movs	r0, #0
    7d2a:	42ae      	cmp	r6, r5
    7d2c:	d3da      	bcc.n	7ce4 <__lesf2+0x30>
    7d2e:	e7dc      	b.n	7cea <__lesf2+0x36>
    7d30:	2001      	movs	r0, #1
    7d32:	4249      	negs	r1, r1
    7d34:	4308      	orrs	r0, r1
    7d36:	e7d8      	b.n	7cea <__lesf2+0x36>

00007d38 <__libc_init_array>:
    7d38:	b570      	push	{r4, r5, r6, lr}
    7d3a:	2600      	movs	r6, #0
    7d3c:	4d0c      	ldr	r5, [pc, #48]	; (7d70 <__libc_init_array+0x38>)
    7d3e:	4c0d      	ldr	r4, [pc, #52]	; (7d74 <__libc_init_array+0x3c>)
    7d40:	1b64      	subs	r4, r4, r5
    7d42:	10a4      	asrs	r4, r4, #2
    7d44:	42a6      	cmp	r6, r4
    7d46:	d109      	bne.n	7d5c <__libc_init_array+0x24>
    7d48:	2600      	movs	r6, #0
    7d4a:	f000 fa1f 	bl	818c <_init>
    7d4e:	4d0a      	ldr	r5, [pc, #40]	; (7d78 <__libc_init_array+0x40>)
    7d50:	4c0a      	ldr	r4, [pc, #40]	; (7d7c <__libc_init_array+0x44>)
    7d52:	1b64      	subs	r4, r4, r5
    7d54:	10a4      	asrs	r4, r4, #2
    7d56:	42a6      	cmp	r6, r4
    7d58:	d105      	bne.n	7d66 <__libc_init_array+0x2e>
    7d5a:	bd70      	pop	{r4, r5, r6, pc}
    7d5c:	00b3      	lsls	r3, r6, #2
    7d5e:	58eb      	ldr	r3, [r5, r3]
    7d60:	4798      	blx	r3
    7d62:	3601      	adds	r6, #1
    7d64:	e7ee      	b.n	7d44 <__libc_init_array+0xc>
    7d66:	00b3      	lsls	r3, r6, #2
    7d68:	58eb      	ldr	r3, [r5, r3]
    7d6a:	4798      	blx	r3
    7d6c:	3601      	adds	r6, #1
    7d6e:	e7f2      	b.n	7d56 <__libc_init_array+0x1e>
    7d70:	00008198 	.word	0x00008198
    7d74:	00008198 	.word	0x00008198
    7d78:	00008198 	.word	0x00008198
    7d7c:	0000819c 	.word	0x0000819c

00007d80 <memcpy>:
    7d80:	2300      	movs	r3, #0
    7d82:	b510      	push	{r4, lr}
    7d84:	429a      	cmp	r2, r3
    7d86:	d100      	bne.n	7d8a <memcpy+0xa>
    7d88:	bd10      	pop	{r4, pc}
    7d8a:	5ccc      	ldrb	r4, [r1, r3]
    7d8c:	54c4      	strb	r4, [r0, r3]
    7d8e:	3301      	adds	r3, #1
    7d90:	e7f8      	b.n	7d84 <memcpy+0x4>

00007d92 <memset>:
    7d92:	0003      	movs	r3, r0
    7d94:	1882      	adds	r2, r0, r2
    7d96:	4293      	cmp	r3, r2
    7d98:	d100      	bne.n	7d9c <memset+0xa>
    7d9a:	4770      	bx	lr
    7d9c:	7019      	strb	r1, [r3, #0]
    7d9e:	3301      	adds	r3, #1
    7da0:	e7f9      	b.n	7d96 <memset+0x4>
	...

00007da4 <tc_interrupt_vectors.13161>:
    7da4:	1312 0014                                   ....

00007da8 <tc_interrupt_vectors.13161>:
    7da8:	1312 0014 005e 0004 0298 2000 0000 0000     ....^...... ....

00007db8 <tc_interrupt_vectors.13161>:
    7db8:	1312 0014 1154 0000 1138 0000 10c6 0000     ....T...8.......
    7dc8:	10c6 0000 10c6 0000 11b0 0000 10c6 0000     ................
    7dd8:	10c6 0000 11a0 0000 10c6 0000 10c6 0000     ................
    7de8:	10d6 0000 1114 0000 10c6 0000 10ac 0000     ................
    7df8:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e08:	10e8 0000 11bc 0000 10c6 0000 10c6 0000     ................
    7e18:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e28:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e38:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e48:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e58:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e68:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e78:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e88:	10c6 0000 10c6 0000 10c6 0000 10c6 0000     ................
    7e98:	10c6 0000 10c6 0000 11cc 0000 1dfe 0000     ................
    7ea8:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7eb8:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7ec8:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7ed8:	2044 0000 2044 0000 2044 0000 1de6 0000     D ..D ..D ......
    7ee8:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7ef8:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7f08:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7f18:	2044 0000 2044 0000 2044 0000 1df6 0000     D ..D ..D ......
    7f28:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7f38:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7f48:	2044 0000 2044 0000 2044 0000 2044 0000     D ..D ..D ..D ..
    7f58:	2044 0000 2044 0000 2044 0000 1dee 0000     D ..D ..D ......
    7f68:	1e06 0000 1dce 0000 1dde 0000 1dd6 0000     ................
    7f78:	0002 0000 0003 0000 0028 0000 0029 0000     ........(...)...
    7f88:	0004 0000 0005 0000 0006 0000 0007 0000     ................
    7f98:	ffff 0000 ffff 0000 0022 0000 0023 0000     ........"...#...
    7fa8:	ffff 0000 ffff 0000 ffff 0000 ffff 0000     ................
    7fb8:	0008 0000 0009 0000 000a 0000 000b 0000     ................
    7fc8:	0800 4200 0c00 4200 1000 4200 1400 4200     ...B...B...B...B
    7fd8:	1800 4200 1c00 4200 2e3e 0000 2e3a 0000     ...B...B>...:...
    7fe8:	2e3a 0000 2e9c 0000 2e9c 0000 2e52 0000     :...........R...
    7ff8:	2e44 0000 2e58 0000 2e8a 0000               D...X.......

00008004 <_tcc_apbcmasks>:
    8004:	0100 0000 0200 0000 0400 0000               ............

00008010 <_tcc_cc_nums>:
    8010:	0204 0002                                   ....

00008014 <_tcc_gclk_ids>:
    8014:	1a1a 001b                                   ....

00008018 <_tcc_maxs>:
    8018:	ffff 00ff ffff 00ff ffff 0000               ............

00008024 <_tcc_ow_nums>:
    8024:	0408 0002                                   ....

00008028 <_tcc_intflag>:
    8028:	0001 0000 0002 0000 0004 0000 0008 0000     ................
    8038:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
    8048:	0000 0001 0000 0002 0000 0004 0000 0008     ................
    8058:	2c00 4200 3000 4200 3400 4200 4ae4 0000     .,.B.0.B.4.B.J..
    8068:	4af2 0000 4b8c 0000 4c2c 0000 4c90 0000     .J...K..,L...L..

00008078 <_usb_device_irq_bits>:
    8078:	0004 0008 0070 0080 0001 0100 0200 0000     ....p...........

00008088 <_usb_endpoint_irq_bits>:
    8088:	0c03 6010 6540 0000 6510 0000 6522 0000     ...`@e...e.."e..
    8098:	6464 0000 6522 0000 6506 0000 6522 0000     dd.."e...e.."e..
    80a8:	6464 0000 6510 0000 6510 0000 6506 0000     dd...e...e...e..
    80b8:	6464 0000 646c 0000 646c 0000 646c 0000     dd..ld..ld..ld..
    80c8:	6528 0000 6510 0000 6510 0000 64e4 0000     (e...e...e...d..
    80d8:	65c8 0000 64e4 0000 6506 0000 64e4 0000     .e...d...e...d..
    80e8:	65c8 0000 6510 0000 6510 0000 6506 0000     .e...e...e...e..
    80f8:	65c8 0000 646c 0000 646c 0000 646c 0000     .e..ld..ld..ld..
    8108:	65d2 0000 6770 0000 66c0 0000 66c0 0000     .e..pg...f...f..
    8118:	66be 0000 6762 0000 6762 0000 6758 0000     .f..bg..bg..Xg..
    8128:	66be 0000 6762 0000 6758 0000 6762 0000     .f..bg..Xg..bg..
    8138:	66be 0000 6768 0000 6768 0000 6768 0000     .f..hg..hg..hg..
    8148:	67f8 0000 6f20 0000 6f02 0000 6ebc 0000     .g.. o...o...n..
    8158:	6dda 0000 6ebc 0000 6ef4 0000 6ebc 0000     .m...n...n...n..
    8168:	6dda 0000 6f02 0000 6f02 0000 6ef4 0000     .m...o...o...n..
    8178:	6dda 0000 6dd2 0000 6dd2 0000 6dd2 0000     .m...m...m...m..
    8188:	7138 0000                                   8q..

0000818c <_init>:
    818c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    818e:	46c0      	nop			; (mov r8, r8)
    8190:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8192:	bc08      	pop	{r3}
    8194:	469e      	mov	lr, r3
    8196:	4770      	bx	lr

00008198 <__init_array_start>:
    8198:	000000dd 	.word	0x000000dd

0000819c <_fini>:
    819c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    819e:	46c0      	nop			; (mov r8, r8)
    81a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    81a2:	bc08      	pop	{r3}
    81a4:	469e      	mov	lr, r3
    81a6:	4770      	bx	lr

000081a8 <__fini_array_start>:
    81a8:	000000b5 	.word	0x000000b5
